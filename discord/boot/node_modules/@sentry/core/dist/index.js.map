) {
            callback();
          }
        } finally {
          this._timeoutId = null;
        }
      }, this._current);
    }

    return this._current;
  }
  /**
   *  Clear any pending callbacks.
   */


  cancel() {
    if (this._timeoutId != null) {
      clearTimeout(this._timeoutId);
      this._timeoutId = null;
    }
  }

}

exports.default = Backoff;
module.exports = exports.default;"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.init = init;
exports.isInitialized = isInitialized;
exports.metadata = void 0;

const electron = require('electron');

const childProcess = require('child_process');

const {
  flatten
} = require('./crashReporterUtils');

let initialized = false;
const metadata = {};
exports.metadata = metadata;
const DEFAULT_SENTRY_KEY = '384ce4413de74fe0be270abe03b2b35a';
const TEST_SENTRY_KEY = '1a27a96457b24ff286a000266c573919';
const CHANNEL_SENTRY_KEYS = {
  stable: DEFAULT_SENTRY_KEY,
  ptb: TEST_SENTRY_KEY,
  canary: TEST_SENTRY_KEY,
  development: TEST_SENTRY_KEY
};
const DESKTOP_JS_SENTRY_DSN = 'https://8405981abe5045908f0d88135eba7ba5@o64374.ingest.sentry.io/1197903';

function getCrashReporterArgs(metadata) {
  // NB: we need to flatten the metadata because modern electron caps metadata values at 127 bytes,
  // which our sentry subobject can easily exceed.
  let flat_metadata = flatten(metadata);
  const channel = metadata['channel'];
  const sentryKey = CHANNEL_SENTRY_KEYS[channel] != null ? CHANNEL_SENTRY_KEYS[channel] : DEFAULT_SENTRY_KEY;
  return {
    productName: 'Discord',
    companyName: 'Discord Inc.',
    submitURL: `htt