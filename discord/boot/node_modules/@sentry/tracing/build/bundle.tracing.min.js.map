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"}/*! @sentry/tracing & @sentry/browser 6.0.0 (22de19a) | https://github.com/getsentry/sentry-javascript */
var Sentry=function(t){var n=function(t,r){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var r in n)n.hasOwnProperty(r)&&(t[r]=n[r])})(t,r)};function r(t,r){function i(){this.constructor=t}n(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}var i,e,o,u,a,s=function(){return(s=Object.assign||function(t){for(var n,r=1,i=arguments.length;r<i;r++)for(var e in n=arguments[r])Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e]);return t}).apply(this,arguments)};function c(t,n){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&n.indexOf(i)<0&&(r[i]=t[i]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var e=0;for(i=Object.getOwnPropertySymbols(t);e<i.length;e++)n.indexOf(i[e])<0&&(r[i[e]]=t[i[e]])}return r}function f(t){var n="function"==typeof Symbol&&t[Symbol.iterator],r=0;return n?n.call(t):{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}}}function h(t,n){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var i,e,o=r.call(t),u=[];try{for(;(void 0===n||n-- >0)&&!(i=o.next()).done;)u.push(i.value)}catch(t){e={error:t}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(e)throw e.error}}return u}function v(){for(var t=[],n=0;n<arguments.length;n++)t=t.concat(h(arguments[n]));return t}function d(t){switch(Object.prototype.toString.call(t)){case"[object Error]":case"[object Exception]":case"[object DOMException]":return!0;default:return _(t,Error)}}function l(t){return"[object ErrorEvent]"===Object.prototype.toString.call(t)}function p(t){return"[object DOMError]"===Object.prototype.toString.call(t)}function m(t){return"[object String]"===Object.prototype.toString.call(t)}function y(t){return null===t||"object"!=typeof t&&"function"!=typeof t}function g(t){return"[object Object]"===Object.prototype.toString.call(t)}function b(t){return"undefined"!=typeof Event&&_(t,Event)}function w(t){return"undefined"!=typeof Element&&_(t,Element)}function T(t){return Boolean(t&&t.then&&"function"==typeof t.then)}function _(t,n){try{return t instanceof n}catch(t){return!1}}function E(t){try{for(var n=t,r=[],i=0,e=0,o=" > ".length,u=void 0;n&&i++<5&&!("html"===(u=S(n))||i>1&&e+r.length*o+u.length>=80);)r.push(u),e+=u.length,n=n.parentNode;return r.reverse().join(" > ")}catch(t){return"<unknown>"}}function S(t){var n,r,i,e,o,u=t,a=[];if(!u||!u.tagName)return"";if(a.push(u.tagName.toLowerCase()),u.id&&a.push("#"+u.id),(n=u.className)&&m(n))for(r=n.split(/\s+/),o=0;o<r.length;o++)a.push("."+r[o]);var s=["type","name","title","alt"];for(o=0;o<s.length;o++)i=s[o],(e=u.getAttribute(i))&&a.push("["+i+'="'+e+'"]');return a.join("")}!function(t){t[t.None=0]="None",t[t.Error=1]="Error",t[t.Debug=2]="Debug",t[t.Verbose=3]="Verbose"}(i||(i={})),function(t){t.Ok="ok",t.Exited="exited",t.Crashed="crashed",t.Abnormal="abnormal"}(e||(e={})),(o=t.Severity||(t.Severity={})).Fatal="fatal",o.Error="error",o.Warning="warning",o.Log="log",o.Info="info",o.Debug="debug",o.Critical="critical",function(t){t.fromString=function(n){switch(n){case"debug":return t.Debug;case"info":return t.Info;case"warn":case"warning":return t.Warning;case"error":return t.Error;case"fatal":return t.Fatal;case"critical":return t.Critical;case"log":default:return t.Log}}}(t.Severity||(t.Severity={})),(u=t.Status||(t.Status={})).Unknown="unknown",u.Skipped="skipped",u.Success="success",u.RateLimit="rate_limit",u.Invalid="invalid",u.Failed="failed",function(t){t.fromHttpCode=function(n){return n>=200&&n<300?t.Success:429===n?t.RateLimit:n>=400&&n<500?t.Invalid:n>=500?t.Failed:t.Unknown}}(t.Status||(t.Status={})),function(t){t.Explicit="explicitly_set",t.Sampler="client_sampler",t.Rate="client_rate",t.Inheritance="inheritance"}(a||(a={}));var k=Object.setPrototypeOf||({__proto__:[]}instanceof Array?function(t,n){return t.__proto__=n,t}:function(t,n){for(var r in n)t.hasOwnProperty(r)||(t[r]=n[r]);return t});var x=function(t){function n(n){var r=this.constructor,i=t.call(this,n)||this;return i.message=n,i.name=r.prototype.constructor.name,k(i,r.prototype),i}return r(n,t),n}(Error),j=/^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w.-]+)(?::(\d+))?\/(.+)/,O=function(){function t(t){"string"==typeof t?this.t(t):this.i(t),this.o()}return t.prototype.toString=function(t){void 0===t&&(t=!1);var n=this,r=n.host,i=n.path,e=n.pass,o=n.port,u=n.projectId;return n.protocol+"://"+n.user+(t&&e?":"+e:"")+"@"+r+(o?":"+o:"")+"/"+(i?i+"/":i)+u},t.prototype.t=function(t){var n=j.exec(t);if(!n)throw new x("Invalid Dsn");var r=h(n.slice(1),6),i=r[0],e=r[1],o=r[2],u=void 0===o?"":o,a=r[3],s=r[4],c=void 0===s?"":s,f="",v=r[5],d=v.split("/");if(d.length>1&&(f=d.slice(0,-1).join("/"),v=d.pop()),v){var l=v.match(/^\d+/);l&&(v=l[0])}this.i({host:a,pass:u,path:f,projectId:v,port:c,protocol:i,user:e})},t.prototype.i=function(t){this.protocol=t.protocol,this.user=t.user,this.pass=t.pass||"",this.host=t.host,this.port=t.port||"",this.path=t.path||"",this.projectId=t.projectId},t.prototype.o=function(){var t=this;if(["protocol","user","host","projectId"].forEach(function(n){if(!t[n])throw new x("Invalid Dsn: "+n+" missing")}),!this.projectId.match(/^\d+$/))throw new x("Invalid Dsn: Invalid projectId "+this.projectId);if("http"!==this.protocol&&"https"!==this.protocol)throw new x("Invalid Dsn: Invalid protocol "+this.protocol);if(this.port&&isNaN(parseInt(this.port,10)))throw new x("Invalid Dsn: Invalid port "+this.port)},t}(),D=function(){function t(){this.u="function"==typeof WeakSet,this.s=this.u?new WeakSet:[]}return t.prototype.memoize=function(t){if(this.u)return!!this.s.has(t)||(this.s.add(t),!1);for(var n=0;n<this.s.length;n++){if(this.s[n]===t)return!0}return this.s.push(t),!1},t.prototype.unmemoize=function(t){if(this.u)this.s.delete(t);else for(var n=0;n<this.s.length;n++)if(this.s[n]===t){this.s.splice(n,1);break}},t}(),N="<anonymous>";function R(t){try{return t&&"function"==typeof t&&t.name||N}catch(t){return N}}function I(t,n){return void 0===n&&(n=0),"string"!=typeof t||0===n?t:t.length<=n?t:t.substr(0,n)+"..."}function M(t,n){if(!Array.isArray(t))return"";for(var r=[],i=0;i<t.length;i++){var e=t[i];try{r.push(String(e))}catch(t){r.push("[value cannot be serialized]")}}return r.join(n)}function C(t,n){return!!m(t)&&(r=n,"[object RegExp]"===Object.prototype.toString.call(r)?n.test(t):"string"==typeof n&&-1!==t.indexOf(n));var r}function A(t,n,r){if(n in t){var i=t[n],e=r(i);if("function"==typeof e)try{e.prototype=e.prototype||{},Object.defineProperties(e,{__sentry_original__:{enumerable:!1,value:i}})}catch(t){}t[n]=e}}function L(t){if(d(t)){var n=t,r={message:n.message,name:n.name,stack:n.stack};for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(r[i]=n[i]);return r}if(b(t)){var e=t,o={};o.type=e.type;try{o.target=w(e.target)?E(e.target):Object.prototype.toString.call(e.target)}catch(t){o.target="<unknown>"}try{o.currentTarget=w(e.currentTarget)?E(e.currentTarget):Object.prototype.toString.call(e.currentTarget)}catch(t){o.currentTarget="<unknown>"}for(var i in"undefined"!=typeof CustomEvent&&_(t,CustomEvent)&&(o.detail=e.detail),e)Object.prototype.hasOwnProperty.call(e,i)&&(o[i]=e);return o}return t}function q(t){return function(t){return~-encodeURI(t).split(/%..|./).length}(JSON.stringify(t))}function F(t,n,r){void 0===n&&(n=3),void 0===r&&(r=102400);var i=H(t,n);return q(i)>r?F(t,n-1,r):i}function U(t,n){return"domain"===n&&t&&"object"==typeof t&&t.h?"[Domain]":"domainEmitter"===n?"[DomainEmitter]":"undefined"!=typeof global&&t===global?"[Global]":"undefined"!=typeof window&&t===window?"[Window]":"undefined"!=typeof document&&t===document?"[Document]":g(r=t)&&"nativeEvent"in r&&"preventDefault"in r&&"stopPropagation"in r?"[SyntheticEvent]":"number"==typeof t&&t!=t?"[NaN]":void 0===t?"[undefined]":"function"==typeof t?"[Function: "+R(t)+"]":"symbol"==typeof t?"["+String(t)+"]":"bigint"==typeof t?"[BigInt: "+String(t)+"]":t;var r}function P(t,n,r,i){if(void 0===r&&(r=1/0),void 0===i&&(i=new D),0===r)return function(t){var n=Object.prototype.toString.call(t);if("string"==typeof t)return t;if("[object Object]"===n)return"[Object]";if("[object Array]"===n)return"[Array]";var r=U(t);return y(r)?r:n}(n);if(null!=n&&"function"==typeof n.toJSON)return n.toJSON();var e=U(n,t);if(y(e))return e;var o=L(n),u=Array.isArray(n)?[]:{};if(i.memoize(n))return"[Circular ~]";for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(u[a]=P(a,o[a],r-1,i));return i.unmemoize(n),u}function H(t,n){try{return JSON.parse(JSON.stringify(t,function(t,r){return P(t,r,n)}))}catch(t){return"**non-serializable**"}}function B(t,n){void 0===n&&(n=40);var r=Object.keys(L(t));if(r.sort(),!r.length)return"[object has no keys]";if(r[0].length>=n)return I(r[0],n);for(var i=r.length;i>0;i--){var e=r.slice(0,i).join(", ");if(!(e.length>n))return i===r.length?e:I(e,n)}return""}function J(t){var n,r;if(g(t)){var i=t,e={};try{for(var o=f(Object.keys(i)),u=o.next();!u.done;u=o.next()){var a=u.value;void 0!==i[a]&&(e[a]=J(i[a]))}}catch(t){n={error:t}}finally{try{u&&!u.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return e}return Array.isArray(t)?t.map(J):t}function X(){return"[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0)}function G(t,n){return t.require(n)}var W=["cookies","data","headers","method","query_string","url"];var $={};function z(){return X()?global:"undefined"!=typeof window?window:"undefined"!=typeof self?self:$}function V(){var t=z(),n=t.crypto||t.msCrypto;if(void 0!==n&&n.getRandomValues){var r=new Uint16Array(8);n.getRandomValues(r),r[3]=4095&r[3]|16384,r[4]=16383&r[4]|32768;var i=function(t){for(var n=t.toString(16);n.length<4;)n="0"+n;return n};return i(r[0])+i(r[1])+i(r[2])+i(r[3])+i(r[4])+i(r[5])+i(r[6])+i(r[7])}return"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,function(t){var n=16*Math.random()|0;return("x"===t?n:3&n|8).toString(16)})}function K(t){if(!t)return{};var n=t.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);if(!n)return{};var r=n[6]||"",i=n[8]||"";return{host:n[4],path:n[5],protocol:n[2],relative:n[5]+r+i}}function Y(t){if(t.message)return t.message;if(t.exception&&t.exception.values&&t.exception.values[0]){var n=t.exception.values[0];return n.type&&n.value?n.type+": "+n.value:n.type||n.value||t.event_id||"<unknown>"}return t.event_id||"<unknown>"}function Q(t){var n=z();if(!("console"in n))return t();var r=n.console,i={};["debug","info","warn","error","log","assert"].forEach(function(t){t in n.console&&r[t].__sentry_original__&&(i[t]=r[t],r[t]=r[t].__sentry_original__)});var e=t();return Object.keys(i).forEach(function(t){r[t]=i[t]}),e}function Z(t,n,r){t.exception=t.exception||{},t.exception.values=t.exception.values||[],t.exception.values[0]=t.exception.values[0]||{},t.exception.values[0].value=t.exception.values[0].value||n||"",t.exception.values[0].type=t.exception.values[0].type||r||"Error"}function tt(t,n){void 0===n&&(n={});try{t.exception.values[0].mechanism=t.exception.values[0].mechanism||{},Object.keys(n).forEach(function(r){t.exception.values[0].mechanism[r]=n[r]})}catch(t){}}var nt=6e4;var rt=z(),it="Sentry Logger ",et=function(){function t(){this.v=!1}return t.prototype.disable=function(){this.v=!1},t.prototype.enable=function(){this.v=!0},t.prototype.log=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];this.v&&Q(function(){rt.console.log(it+"[Log]: "+t.join(" "))})},t.prototype.warn=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];this.v&&Q(function(){rt.console.warn(it+"[Warn]: "+t.join(" "))})},t.prototype.error=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];this.v&&Q(function(){rt.console.error(it+"[Error]: "+t.join(" "))})},t}();rt.__SENTRY__=rt.__SENTRY__||{};var ot=rt.__SENTRY__.logger||(rt.__SENTRY__.logger=new et);function ut(){if(!("fetch"in z()))return!1;try{return new Headers,new Request(""),new Response,!0}catch(t){return!1}}function at(t){return t&&/^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(t.toString())}function st(){if(!ut())return!1;try{return new Request("_",{referrerPolicy:"origin"}),!0}catch(t){return!1}}var ct,ft=z(),ht={},vt={};function dt(t){if(!vt[t])switch(vt[t]=!0,t){case"console":!function(){if(!("console"in ft))return;["debug","info","warn","error","log","assert"].forEach(function(t){t in ft.console&&A(ft.console,t,function(n){return function(){for(var r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];pt("console",{args:r,level:t}),n&&Function.prototype.apply.call(n,ft.console,r)}})})}();break;case"dom":!function(){if(!("document"in ft))return;ft.document.addEventListener("click",_t("click",pt.bind(null,"dom")),!1),ft.document.addEventListener("keypress",Et(pt.bind(null,"dom")),!1),["EventTarget","Node"].forEach(function(t){var n=ft[t]&&ft[t].prototype;n&&n.hasOwnProperty&&n.hasOwnProperty("addEventListener")&&(A(n,"addEventListener",function(t){return function(n,r,i){return r&&r.handleEvent?("click"===n&&A(r,"handleEvent",function(t){return function(n){return _t("click",pt.bind(null,"dom"))(n),t.call(this,n)}}),"keypress"===n&&A(r,"handleEvent",function(t){return function(n){return Et(pt.bind(null,"dom"))(n),t.call(this,n)}})):("click"===n&&_t("click",pt.bind(null,"dom"),!0)(this),"keypress"===n&&Et(pt.bind(null,"dom"))(this)),t.call(this,n,r,i)}}),A(n,"removeEventListener",function(t){return function(n,r,i){try{t.call(this,n,r.__sentry_wrapped__,i)}catch(t){}return t.call(this,n,r,i)}}))})}();break;case"xhr":!function(){if(!("XMLHttpRequest"in ft))return;var t=[],n=[],r=XMLHttpRequest.prototype;A(r,"open",function(r){return function(){for(var i=[],e=0;e<arguments.length;e++)i[e]=arguments[e];var o=this,u=i[1];o.__sentry_xhr__={method:m(i[0])?i[0].toUpperCase():i[0],url:i[1]},m(u)&&"POST"===o.__sentry_xhr__.method&&u.match(/sentry_key/)&&(o.__sentry_own_request__=!0);var a=function(){if(4===o.readyState){try{o.__sentry_xhr__&&(o.__sentry_xhr__.status_code=o.status)}catch(t){}try{var r=t.indexOf(o);if(-1!==r){t.splice(r);var e=n.splice(r)[0];o.__sentry_xhr__&&void 0!==e[0]&&(o.__sentry_xhr__.body=e[0])}}catch(t){}pt("xhr",{args:i,endTimestamp:Date.now(),startTimestamp:Date.now(),xhr:o})}};return"onreadystatechange"in o&&"function"==typeof o.onreadystatechange?A(o,"onreadystatechange",function(t){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];return a(),t.apply(o,n)}}):o.addEventListener("readystatechange",a),r.apply(o,i)}}),A(r,"send",function(r){return function(){for(var i=[],e=0;e<arguments.length;e++)i[e]=arguments[e];return t.push(this),n.push(i),pt("xhr",{args:i,startTimestamp:Date.now(),xhr:this}),r.apply(this,i)}})}();break;case"fetch":!function(){if(!function(){if(!ut())return!1;var t=z();if(at(t.fetch))return!0;var n=!1,r=t.document;if(r&&"function"==typeof r.createElement)try{var i=r.createElement("iframe");i.hidden=!0,r.head.appendChild(i),i.contentWindow&&i.contentWindow.fetch&&(n=at(i.contentWindow.fetch)),r.head.removeChild(i)}catch(t){ot.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",t)}return n}())return;A(ft,"fetch",function(t){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var i={args:n,fetchData:{method:mt(n),url:yt(n)},startTimestamp:Date.now()};return pt("fetch",s({},i)),t.apply(ft,n).then(function(t){return pt("fetch",s(s({},i),{endTimestamp:Date.now(),response:t})),t},function(t){throw pt("fetch",s(s({},i),{endTimestamp:Date.now(),error:t})),t})}})}();break;case"history":!function(){if(t=z(),n=t.chrome,r=n&&n.app&&n.app.runtime,i="history"in t&&!!t.history.pushState&&!!t.history.replaceState,r||!i)return;var t,n,r,i;var e=ft.onpopstate;function o(t){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var i=n.length>2?n[2]:void 0;if(i){var e=ct,o=String(i);ct=o,pt("history",{from:e,to:o})}return t.apply(this,n)}}ft.onpopstate=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var r=ft.location.href,i=ct;if(ct=r,pt("history",{from:i,to:r}),e)return e.apply(this,t)},A(ft.history,"pushState",o),A(ft.history,"replaceState",o)}();break;case"error":St=ft.onerror,ft.onerror=function(t,n,r,i,e){return pt("error",{column:i,error:e,line:r,msg:t,url:n}),!!St&&St.apply(this,arguments)};break;case"unhandledrejection":xt=ft.onunhandledrejection,ft.onunhandledrejection=function(t){return pt("unhandledrejection",t),!xt||xt.apply(this,arguments)};break;default:ot.warn("unknown instrumentation type:",t)}}function lt(t){t&&"string"==typeof t.type&&"function"==typeof t.callback&&(ht[t.type]=ht[t.type]||[],ht[t.type].push(t.callback),dt(t.type))}function pt(t,n){var r,i;if(t&&ht[t])try{for(var e=f(ht[t]||[]),o=e.next();!o.done;o=e.next()){var u=o.value;try{u(n)}catch(n){ot.error("Error while triggering instrumentation handler.\nType: "+t+"\nName: "+R(u)+"\nError: "+n)}}}catch(t){r={error:t}}finally{try{o&&!o.done&&(i=e.return)&&i.call(e)}finally{if(r)throw r.error}}}function mt(t){return void 0===t&&(t=[]),"Request"in ft&&_(t[0],Request)&&t[0].method?String(t[0].method).toUpperCase():t[1]&&t[1].method?String(t[1].method).toUpperCase():"GET"}function yt(t){return void 0===t&&(t=[]),"string"==typeof t[0]?t[0]:"Request"in ft&&_(t[0],Request)?t[0].url:String(t[0])}var gt,bt,wt=1e3,Tt=0;function _t(t,n,r){return void 0===r&&(r=!1),function(i){gt=void 0,i&&bt!==i&&(bt=i,Tt&&clearTimeout(Tt),r?Tt=setTimeout(function(){n({event:i,name:t})}):n({event:i,name:t}))}}function Et(t){return function(n){var r;try{r=n.target}catch(t){return}var i=r&&r.tagName;i&&("INPUT"===i||"TEXTAREA"===i||r.isContentEditable)&&(gt||_t("input",t)(n),clearTimeout(gt),gt=setTimeout(function(){gt=void 0},wt))}}var St=null;var kt,xt=null;!function(t){t.PENDING="PENDING",t.RESOLVED="RESOLVED",t.REJECTED="REJECTED"}(kt||(kt={}));var jt=function(){function t(t){var n=this;this.l=kt.PENDING,this.p=[],this.m=function(t){n.g(kt.RESOLVED,t)},this.T=function(t){n.g(kt.REJECTED,t)},this.g=function(t,r){n.l===kt.PENDING&&(T(r)?r.then(n.m,n.T):(n.l=t,n._=r,n.S()))},this.k=function(t){n.p=n.p.concat(t),n.S()},this.S=function(){if(n.l!==kt.PENDING){var t=n.p.slice();n.p=[],t.forEach(function(t){t.done||(n.l===kt.RESOLVED&&t.onfulfilled&&t.onfulfilled(n._),n.l===kt.REJECTED&&t.onrejected&&t.onrejected(n._),t.done=!0)})}};try{t(this.m,this.T)}catch(t){this.T(t)}}return t.resolve=function(n){return new t(function(t){t(n)})},t.reject=function(n){return new t(function(t,r){r(n)})},t.all=function(n){return new t(function(r,i){if(Array.isArray(n))if(0!==n.length){var e=n.length,o=[];n.forEach(function(n,u){t.resolve(n).then(function(t){o[u]=t,0===(e-=1)&&r(o)}).then(null,i)})}else r([]);else i(new TypeError("Promise.all requires an array as input."))})},t.prototype.then=function(n,r){var i=this;return new t(function(t,e){i.k({done:!1,onfulfilled:function(r){if(n)try{return void t(n(r))}catch(t){return void e(t)}else t(r)},onrejected:function(n){if(r)try{return void t(r(n))}catch(t){return void e(t)}else e(n)}})})},t.prototype.catch=function(t){return this.then(function(t){return t},t)},t.prototype.finally=function(n){var r=this;return new t(function(t,i){var e,o;return r.then(function(t){o=!1,e=t,n&&n()},function(t){o=!0,e=t,n&&n()}).then(function(){o?i(e):t(e)})})},t.prototype.toString=function(){return"[object SyncPromise]"},t}(),Ot=function(){function t(t){this.j=t,this.O=[]}return t.prototype.isReady=function(){return void 0===this.j||this.length()<this.j},t.prototype.add=function(t){var n=this;return this.isReady()?(-1===this.O.indexOf(t)&&this.O.push(t),t.then(function(){return n.remove(t)}).then(null,function(){return n.remove(t).then(null,function(){})}),t):jt.reject(new x("Not adding Promise due to buffer limit reached."))},t.prototype.remove=function(t){return this.O.splice(this.O.indexOf(t),1)[0]},t.prototype.length=function(){return this.O.length},t.prototype.drain=function(t){var n=this;return new jt(function(r){var i=setTimeout(function(){t&&t>0&&r(!1)},t);jt.all(n.O).then(function(){clearTimeout(i),r(!0)}).then(null,function(){r(!0)})})},t}(),Dt={nowSeconds:function(){return Date.now()/1e3}};var Nt=X()?function(){try{return G(module,"perf_hooks").performance}catch(t){return}}():function(){var t=z().performance;if(t&&t.now)return{now:function(){return t.now()},timeOrigin:Date.now()-t.now()}}(),Rt=void 0===Nt?Dt:{nowSeconds:function(){return(Nt.timeOrigin+Nt.now())/1e3}},It=Dt.nowSeconds.bind(Dt),Mt=Rt.nowSeconds.bind(Rt),Ct=function(){var t=z().performance;if(t)return t.timeOrigin?t.timeOrigin:t.timing&&t.timing.navigationStart||Date.now()}(),At=function(){function t(){this.D=!1,this.N=[],this.R=[],this.I=[],this.M={},this.C={},this.A={},this.L={}}return t.clone=function(n){var r=new t;return n&&(r.I=v(n.I),r.C=s({},n.C),r.A=s({},n.A),r.L=s({},n.L),r.M=n.M,r.q=n.q,r.F=n.F,r.U=n.U,r.P=n.P,r.H=n.H,r.R=v(n.R)),r},t.prototype.addScopeListener=function(t){this.N.push(t)},t.prototype.addEventProcessor=function(t){return this.R.push(t),this},t.prototype.setUser=function(t){return this.M=t||{},this.U&&this.U.update({user:t}),this.B(),this},t.prototype.getUser=function(){return this.M},t.prototype.setTags=function(t){return this.C=s(s({},this.C),t),this.B(),this},t.prototype.setTag=function(t,n){var r;return this.C=s(s({},this.C),((r={})[t]=n,r)),this.B(),this},t.prototype.setExtras=function(t){return this.A=s(s({},this.A),t),this.B(),this},t.prototype.setExtra=function(t,n){var r;return this.A=s(s({},this.A),((r={})[t]=n,r)),this.B(),this},t.prototype.setFingerprint=function(t){return this.H=t,this.B(),this},t.prototype.setLevel=function(t){return this.q=t,this.B(),this},t.prototype.setTransactionName=function(t){return this.P=t,this.B(),this},t.prototype.setTransaction=function(t){return this.setTransactionName(t)},t.prototype.setContext=function(t,n){var r;return null===n?delete this.L[t]:this.L=s(s({},this.L),((r={})[t]=n,r)),this.B(),this},t.prototype.setSpan=function(t){return this.F=t,this.B(),this},t.prototype.getSpan=function(){return this.F},t.prototype.getTransaction=function(){var t,n,r,i,e=this.getSpan();return(null===(t=e)||void 0===t?void 0:t.transaction)?null===(n=e)||void 0===n?void 0:n.transaction:(null===(i=null===(r=e)||void 0===r?void 0:r.spanRecorder)||void 0===i?void 0:i.spans[0])?e.spanRecorder.spans[0]:void 0},t.prototype.setSession=function(t){return t?this.U=t:delete this.U,this.B(),this},t.prototype.getSession=function(){return this.U},t.prototype.update=function(n){if(!n)return this;if("function"==typeof n){var r=n(this);return r instanceof t?r:this}return n instanceof t?(this.C=s(s({},this.C),n.C),this.A=s(s({},this.A),n.A),this.L=s(s({},this.L),n.L),n.M&&Object.keys(n.M).length&&(this.M=n.M),n.q&&(this.q=n.q),n.H&&(this.H=n.H)):g(n)&&(n=n,this.C=s(s({},this.C),n.tags),this.A=s(s({},this.A),n.extra),this.L=s(s({},this.L),n.contexts),n.user&&(this.M=n.user),n.level&&(this.q=n.level),n.fingerprint&&(this.H=n.fingerprint)),this},t.prototype.clear=function(){return this.I=[],this.C={},this.A={},this.M={},this.L={},this.q=void 0,this.P=void 0,this.H=void 0,this.F=void 0,this.U=void 0,this.B(),this},t.prototype.addBreadcrumb=function(t,n){var r=s({timestamp:It()},t);return this.I=void 0!==n&&n>=0?v(this.I,[r]).slice(-n):v(this.I,[r]),this.B(),this},t.prototype.clearBreadcrumbs=function(){return this.I=[],this.B(),this},t.prototype.applyToEvent=function(t,n){var r;if(this.A&&Object.keys(this.A).length&&(t.extra=s(s({},this.A),t.extra)),this.C&&Object.keys(this.C).length&&(t.tags=s(s({},this.C),t.tags)),this.M&&Object.keys(this.M).length&&(t.user=s(s({},this.M),t.user)),this.L&&Object.keys(this.L).length&&(t.contexts=s(s({},this.L),t.contexts)),this.q&&(t.level=this.q),this.P&&(t.transaction=this.P),this.F){t.contexts=s({trace:this.F.getTraceContext()},t.contexts);var i=null===(r=this.F.transaction)||void 0===r?void 0:r.name;i&&(t.tags=s({transaction:i},t.tags))}return this.J(t),t.breadcrumbs=v(t.breadcrumbs||[],this.I),t.breadcrumbs=t.breadcrumbs.length>0?t.breadcrumbs:void 0,this.X(v(Lt(),this.R),t,n)},t.prototype.X=function(t,n,r,i){var e=this;return void 0===i&&(i=0),new jt(function(o,u){var a=t[i];if(null===n||"function"!=typeof a)o(n);else{var c=a(s({},n),r);T(c)?c.then(function(n){return e.X(t,n,r,i+1).then(o)}).then(null,u):e.X(t,c,r,i+1).then(o).then(null,u)}})},t.prototype.B=function(){var t=this;this.D||(this.D=!0,this.N.forEach(function(n){n(t)}),this.D=!1)},t.prototype.J=function(t){t.fingerprint=t.fingerprint?Array.isArray(t.fingerprint)?t.fingerprint:[t.fingerprint]:[],this.H&&(t.fingerprint=t.fingerprint.concat(this.H)),t.fingerprint&&!t.fingerprint.length&&delete t.fingerprint},t}();function Lt(){var t=z();return t.__SENTRY__=t.__SENTRY__||{},t.__SENTRY__.globalEventProcessors=t.__SENTRY__.globalEventProcessors||[],t.__SENTRY__.globalEventProcessors}function qt(t){Lt().push(t)}var Ft=function(){function t(t){this.errors=0,this.sid=V(),this.timestamp=Date.now(),this.started=Date.now(),this.duration=0,this.status=e.Ok,t&&this.update(t)}return t.prototype.update=function(t){void 0===t&&(t={}),t.user&&(t.user.ip_address&&(this.ipAddress=t.user.ip_address),t.did||(this.did=t.user.id||t.user.email||t.user.username)),this.timestamp=t.timestamp||Date.now(),t.sid&&(this.sid=32===t.sid.length?t.sid:V()),t.did&&(this.did=""+t.did),"number"==typeof t.started&&(this.started=t.started),"number"==typeof t.duration?this.duration=t.duration:this.duration=this.timestamp-this.started,t.release&&(this.release=t.release),t.environment&&(this.environment=t.environment),t.ipAddress&&(this.ipAddress=t.ipAddress),t.userAgent&&(this.userAgent=t.userAgent),"number"==typeof t.errors&&(this.errors=t.errors),t.status&&(this.status=t.status)},t.prototype.close=function(t){t?this.update({status:t}):this.status===e.Ok?this.update({status:e.Exited}):this.update()},t.prototype.toJSON=function(){return J({sid:""+this.sid,init:!0,started:new Date(this.started).toISOString(),timestamp:new Date(this.timestamp).toISOString(),status:this.status,errors:this.errors,did:"number"==typeof this.did||"string"==typeof this.did?""+this.did:void 0,duration:this.duration,attrs:J({release:this.release,environment:this.environment,ip_address:this.ipAddress,user_agent:this.userAgent})})},t}(),Ut=3,Pt=function(){function t(t,n,r){void 0===n&&(n=new At),void 0===r&&(r=Ut),this.G=r,this.W=[{}],this.getStackTop().scope=n,this.bindClient(t)}return t.prototype.isOlderThan=function(t){return this.G<t},t.prototype.bindClient=function(t){this.getStackTop().client=t,t&&t.setupIntegrations&&t.setupIntegrations()},t.prototype.pushScope=function(){var t=At.clone(this.getScope());return this.getStack().push({client:this.getClient(),scope:t}),t},t.prototype.popScope=function(){return!(this.getStack().length<=1)&&!!this.getStack().pop()},t.prototype.withScope=function(t){var n=this.pushScope();try{t(n)}finally{this.popScope()}},t.prototype.getClient=function(){return this.getStackTop().client},t.prototype.getScope=function(){return this.getStackTop().scope},t.prototype.getStack=function(){return this.W},t.prototype.getStackTop=function(){return this.W[this.W.length-1]},t.prototype.captureException=function(t,n){var r=this.$=V(),i=n;if(!n){var e=void 0;try{throw new Error("Sentry syntheticException")}catch(t){e=t}i={originalException:t,syntheticException:e}}return this.V("captureException",t,s(s({},i),{event_id:r})),r},t.prototype.captureMessage=function(t,n,r){var i=this.$=V(),e=r;if(!r){var o=void 0;try{throw new Error(t)}catch(t){o=t}e={originalException:t,syntheticException:o}}return this.V("captureMessage",t,n,s(s({},e),{event_id:i})),i},t.prototype.captureEvent=function(t,n){var r=this.$=V();return this.V("captureEvent",t,s(s({},n),{event_id:r})),r},t.prototype.lastEventId=function(){return this.$},t.prototype.addBreadcrumb=function(t,n){var r=this.getStackTop(),i=r.scope,e=r.client;if(i&&e){var o=e.getOptions&&e.getOptions()||{},u=o.beforeBreadcrumb,a=void 0===u?null:u,c=o.maxBreadcrumbs,f=void 0===c?100:c;if(!(f<=0)){var h=It(),v=s({timestamp:h},t),d=a?Q(function(){return a(v,n)}):v;null!==d&&i.addBreadcrumb(d,Math.min(f,100))}}},t.prototype.setUser=function(t){var n=this.getScope();n&&n.setUser(t)},t.prototype.setTags=function(t){var n=this.getScope();n&&n.setTags(t)},t.prototype.setExtras=function(t){var n=this.getScope();n&&n.setExtras(t)},t.prototype.setTag=function(t,n){var r=this.getScope();r&&r.setTag(t,n)},t.prototype.setExtra=function(t,n){var r=this.getScope();r&&r.setExtra(t,n)},t.prototype.setContext=function(t,n){var r=this.getScope();r&&r.setContext(t,n)},t.prototype.configureScope=function(t){var n=this.getStackTop(),r=n.scope,i=n.client;r&&i&&t(r)},t.prototype.run=function(t){var n=Bt(this);try{t(this)}finally{Bt(n)}},t.prototype.getIntegration=function(t){var n=this.getClient();if(!n)return null;try{return n.getIntegration(t)}catch(n){return ot.warn("Cannot retrieve integration "+t.id+" from the current Hub"),null}},t.prototype.startSpan=function(t){return this.K("startSpan",t)},t.prototype.startTransaction=function(t,n){return this.K("startTransaction",t,n)},t.prototype.traceHeaders=function(){return this.K("traceHeaders")},t.prototype.startSession=function(t){this.endSession();var n=this.getStackTop(),r=n.scope,i=n.client,e=i&&i.getOptions()||{},o=e.release,u=e.environment,a=new Ft(s(s({release:o,environment:u},r&&{user:r.getUser()}),t));return r&&r.setSession(a),a},t.prototype.endSession=function(){var t=this.getStackTop(),n=t.scope,r=t.client;if(n){var i=n.getSession&&n.getSession();i&&(i.close(),r&&r.captureSession&&r.captureSession(i),n.setSession())}},t.prototype.V=function(t){for(var n,r=[],i=1;i<arguments.length;i++)r[i-1]=arguments[i];var e=this.getStackTop(),o=e.scope,u=e.client;u&&u[t]&&(n=u)[t].apply(n,v(r,[o]))},t.prototype.K=function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var i=Ht().__SENTRY__;if(i&&i.extensions&&"function"==typeof i.extensions[t])return i.extensions[t].apply(this,n);ot.warn("Extension method "+t+" couldn't be found, doing nothing.")},t}();function Ht(){var t=z();return t.__SENTRY__=t.__SENTRY__||{extensions:{},hub:void 0},t}function Bt(t){var n=Ht(),r=Wt(n);return $t(n,t),r}function Jt(){var t=Ht();return Gt(t)&&!Wt(t).isOlderThan(Ut)||$t(t,new Pt),X()?function(t){try{var n=Xt();if(!n)return Wt(t);if(!Gt(n)||Wt(n).isOlderThan(Ut)){var r=Wt(t).getStackTop();$t(n,new Pt(r.client,At.clone(r.scope)))}return Wt(n)}catch(n){return Wt(t)}}(t):Wt(t)}function Xt(){var t=Ht().__SENTRY__;return t&&t.extensions&&t.extensions.domain&&t.extensions.domain.active}function Gt(t){return!!(t&&t.__SENTRY__&&t.__SENTRY__.hub)}function Wt(t){return t&&t.__SENTRY__&&t.__SENTRY__.hub?t.__SENTRY__.hub:(t.__SENTRY__=t.__SENTRY__||{},t.__SENTRY__.hub=new Pt,t.__SENTRY__.hub)}function $t(t,n){return!!t&&(t.__SENTRY__=t.__SENTRY__||{},t.__SENTRY__.hub=n,!0)}function zt(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var i=Jt();if(i&&i[t])return i[t].apply(i,v(n));throw new Error("No hub defined or "+t+" was not found on the hub, please open a bug report.")}function captureException(t,n){var r;try{throw new Error("Sentry syntheticException")}catch(t){r=t}return zt("captureException",t,{captureContext:n,originalException:t,syntheticException:r})}function Vt(t){zt("withScope",t)}var Kt=function(){function t(t,n){void 0===n&&(n={}),this.dsn=t,this.metadata=n,this.Y=new O(t)}return t.prototype.getDsn=function(){return this.Y},t.prototype.getBaseApiEndpoint=function(){var t=this.Y,n=t.protocol?t.protocol+":":"",r=t.port?":"+t.port:"";return n+"//"+t.host+r+(t.path?"/"+t.path:"")+"/api/"},t.prototype.getStoreEndpoint=function(){return this.Z("store")},t.prototype.getStoreEndpointWithUrlEncodedAuth=function(){return this.getStoreEndpoint()+"?"+this.tt()},t.prototype.getEnvelopeEndpointWithUrlEncodedAuth=function(){return this.nt()+"?"+this.tt()},t.prototype.getStoreEndpointPath=function(){var t=this.Y;return(t.path?"/"+t.path:"")+"/api/"+t.projectId+"/store/"},t.prototype.getRequestHeaders=function(t,n){var r=this.Y,i=["Sentry sentry_version=7"];return i.push("sentry_client="+t+"/"+n),i.push("sentry_key="+r.user),r.pass&&i.push("sentry_secret="+r.pass),{"Content-Type":"application/json","X-Sentry-Auth":i.join(", ")}},t.prototype.getReportDialogEndpoint=function(t){void 0===t&&(t={});var n=this.Y,r=this.getBaseApiEndpoint()+"embed/error-page/",i=[];for(var e in i.push("dsn="+n.toString()),t)if("dsn"!==e)if("user"===e){if(!t.user)continue;t.user.name&&i.push("name="+encodeURIComponent(t.user.name)),t.user.email&&i.push("email="+encodeURIComponent(t.user.email))}else i.push(encodeURIComponent(e)+"="+encodeURIComponent(t[e]));return i.length?r+"?"+i.join("&"):r},t.prototype.nt=function(){return this.Z("envelope")},t.prototype.Z=function(t){return""+this.getBaseApiEndpoint()+this.Y.projectId+"/"+t+"/"},t.prototype.tt=function(){var t,n={sentry_key:this.Y.user,sentry_version:"7"};return t=n,Object.keys(t).map(function(n){return encodeURIComponent(n)+"="+encodeURIComponent(t[n])}).join("&")},t}(),Yt=[];function Qt(t){var n={};return function(t){var n=t.defaultIntegrations&&v(t.defaultIntegrations)||[],r=t.integrations,i=[];if(Array.isArray(r)){var e=r.map(function(t){return t.name}),o=[];n.forEach(function(t){-1===e.indexOf(t.name)&&-1===o.indexOf(t.name)&&(i.push(t),o.push(t.name))}),r.forEach(function(t){-1===o.indexOf(t.name)&&(i.push(t),o.push(t.name))})}else"function"==typeof r?(i=r(n),i=Array.isArray(i)?i:[i]):i=v(n);var u=i.map(function(t){return t.name});return-1!==u.indexOf("Debug")&&i.push.apply(i,v(i.splice(u.indexOf("Debug"),1))),i}(t).forEach(function(t){n[t.name]=t,function(t){-1===Yt.indexOf(t.name)&&(t.setupOnce(qt,Jt),Yt.push(t.name),ot.log("Integration installed: "+t.name))}(t)}),n}var Zt=function(){function t(t,n){this.rt={},this.it=0,this.et=new t(n),this.ot=n,n.dsn&&(this.ut=new O(n.dsn))}return t.prototype.captureException=function(t,n,r){var i=this,e=n&&n.event_id;return this.at(this.st().eventFromException(t,n).then(function(t){return i.ct(t,n,r)}).then(function(t){e=t})),e},t.prototype.captureMessage=function(t,n,r,i){var e=this,o=r&&r.event_id,u=y(t)?this.st().eventFromMessage(String(t),n,r):this.st().eventFromException(t,r);return this.at(u.then(function(t){return e.ct(t,r,i)}).then(function(t){o=t})),o},t.prototype.captureEvent=function(t,n,r){var i=n&&n.event_id;return this.at(this.ct(t,n,r).then(function(t){i=t})),i},t.prototype.captureSession=function(t){t.release?this.ft(t):ot.warn("Discarded session because of missing release")},t.prototype.getDsn=function(){return this.ut},t.prototype.getOptions=function(){return this.ot},t.prototype.flush=function(t){var n=this;return this.ht(t).then(function(r){return n.st().getTransport().close(t).then(function(t){return r&&t})})},t.prototype.close=function(t){var n=this;return this.flush(t).then(function(t){return n.getOptions().enabled=!1,t})},t.prototype.setupIntegrations=function(){this.vt()&&(this.rt=Qt(this.ot))},t.prototype.getIntegration=function(t){try{return this.rt[t.id]||null}catch(n){return ot.warn("Cannot retrieve integration "+t.id+" from the current Client"),null}},t.prototype.dt=function(t,n){var r,i,o,u=!1,a=!1,c=n.exception&&n.exception.values;if(c){a=!0;try{for(var h=f(c),v=h.next();!v.done;v=h.next()){var d=v.value.mechanism;if(d&&!1===d.handled){u=!0;break}}}catch(t){r={error:t}}finally{try{v&&!v.done&&(i=h.return)&&i.call(h)}finally{if(r)throw r.error}}}var l=n.user;if(!t.userAgent){var p=n.request?n.request.headers:{};for(var m in p)if("user-agent"===m.toLowerCase()){o=p[m];break}}t.update(s(s({},u&&{status:e.Crashed}),{user:l,userAgent:o,errors:t.errors+Number(a||u)}))},t.prototype.ft=function(t){this.st().sendSession(t)},t.prototype.ht=function(t){var n=this;return new jt(function(r){var i=0,e=setInterval(function(){0==n.it?(clearInterval(e),r(!0)):(i+=1,t&&i>=t&&(clearInterval(e),r(!1)))},1)})},t.prototype.st=function(){return this.et},t.prototype.vt=function(){return!1!==this.getOptions().enabled&&void 0!==this.ut},t.prototype.lt=function(t,n,r){var i=this,e=this.getOptions().normalizeDepth,o=void 0===e?3:e,u=s(s({},t),{event_id:t.event_id||(r&&r.event_id?r.event_id:V()),timestamp:t.timestamp||It()});this.pt(u),this.yt(u);var a=n;r&&r.captureContext&&(a=At.clone(a).update(r.captureContext));var c=jt.resolve(u);return a&&(c=a.applyToEvent(u,r)),c.then(function(t){return"number"==typeof o&&o>0?i.gt(t,o):t})},t.prototype.gt=function(t,n){if(!t)return null;var r=s(s(s(s(s({},t),t.breadcrumbs&&{breadcrumbs:t.breadcrumbs.map(function(t){return s(s({},t),t.data&&{data:H(t.data,n)})})}),t.user&&{user:H(t.user,n)}),t.contexts&&{contexts:H(t.contexts,n)}),t.extra&&{extra:H(t.extra,n)});return t.contexts&&t.contexts.trace&&(r.contexts.trace=t.contexts.trace),r},t.prototype.pt=function(t){var n=this.getOptions(),r=n.environment,i=n.release,e=n.dist,o=n.maxValueLength,u=void 0===o?250:o;"environment"in t||(t.environment="environment"in n?r:"production"),void 0===t.release&&void 0!==i&&(t.release=i),void 0===t.dist&&void 0!==e&&(t.dist=e),t.message&&(t.message=I(t.message,u));var a=t.exception&&t.exception.values&&t.exception.values[0];a&&a.value&&(a.value=I(a.value,u));var s=t.request;s&&s.url&&(s.url=I(s.url,u))},t.prototype.yt=function(t){var n=t.sdk,r=Object.keys(this.rt);n&&r.length>0&&(n.integrations=r)},t.prototype.bt=function(t){this.st().sendEvent(t)},t.prototype.ct=function(t,n,r){return this.wt(t,n,r).then(function(t){return t.event_id},function(t){ot.error(t)})},t.prototype.wt=function(t,n,r){var i=this,e=this.getOptions(),o=e.beforeSend,u=e.sampleRate;if(!this.vt())return jt.reject(new x("SDK not enabled, will not send event."));var a="transaction"===t.type;return!a&&"number"==typeof u&&Math.random()>u?jt.reject(new x("Discarding event because it's not included in the random sample (sampling rate = "+u+")")):this.lt(t,r,n).then(function(t){if(null===t)throw new x("An event processor returned null, will not send event.");if(n&&n.data&&!0===n.data.__sentry__||a||!o)return t;var r=o(t,n);if(void 0===r)throw new x("`beforeSend` method has to return `null` or a valid event.");return T(r)?r.then(function(t){return t},function(t){throw new x("beforeSend rejected with "+t)}):r}).then(function(t){if(null===t)throw new x("`beforeSend` returned `null`, will not send event.");var n=r&&r.getSession&&r.getSession();return!a&&n&&i.dt(n,t),i.bt(t),t}).then(null,function(t){if(t instanceof x)throw t;throw i.captureException(t,{data:{__sentry__:!0},originalException:t}),new x("Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\nReason: "+t)})},t.prototype.at=function(t){var n=this;this.it+=1,t.then(function(t){return n.it-=1,t},function(t){return n.it-=1,t})},t}(),tn=function(){function n(){}return n.prototype.sendEvent=function(n){return jt.resolve({reason:"NoopTransport: Event has been skipped because no Dsn is configured.",status:t.Status.Skipped})},n.prototype.close=function(t){return jt.resolve(!0)},n}(),nn=function(){function t(t){this.ot=t,this.ot.dsn||ot.warn("No DSN provided, backend will not do anything."),this.Tt=this._t()}return t.prototype.eventFromException=function(t,n){throw new x("Backend has to implement `eventFromException` method")},t.prototype.eventFromMessage=function(t,n,r){throw new x("Backend has to implement `eventFromMessage` method")},t.prototype.sendEvent=function(t){this.Tt.sendEvent(t).then(null,function(t){ot.error("Error while sending event: "+t)})},t.prototype.sendSession=function(t){this.Tt.sendSession?this.Tt.sendSession(t).then(null,function(t){ot.error("Error while sending session: "+t)}):ot.warn("Dropping session because custom transport doesn't implement sendSession")},t.prototype.getTransport=function(){return this.Tt},t.prototype._t=function(){return new tn},t}();function rn(t){if(t.metadata&&t.metadata.sdk){var n=t.metadata.sdk;return{name:n.name,version:n.version}}}function en(t,n){return n?(t.sdk=t.sdk||{name:n.name,version:n.version},t.sdk.name=t.sdk.name||n.name,t.sdk.version=t.sdk.version||n.version,t.sdk.integrations=v(t.sdk.integrations||[],n.integrations||[]),t.sdk.packages=v(t.sdk.packages||[],n.packages||[]),t):t}function on(t,n){var r=rn(n);return{body:JSON.stringify(s({sent_at:(new Date).toISOString()},r&&{sdk:r}))+"\n"+JSON.stringify({type:"session"})+"\n"+JSON.stringify(t),type:"session",url:n.getEnvelopeEndpointWithUrlEncodedAuth()}}function un(t,n){var r=t.tags||{},i=r.__sentry_samplingMethod,e=r.__sentry_sampleRate,o=c(r,["__sentry_samplingMethod","__sentry_sampleRate"]);t.tags=o;var u=rn(n),a=t.type||"event",f="transaction"===a,h={body:JSON.stringify(u?en(t,n.metadata.sdk):t),type:a,url:f?n.getEnvelopeEndpointWithUrlEncodedAuth():n.getStoreEndpointWithUrlEncodedAuth()};if(f){var v=JSON.stringify(s({event_id:t.event_id,sent_at:(new Date).toISOString()},u&&{sdk:u}))+"\n"+JSON.stringify({type:t.type,sample_rates:[{id:i,rate:e}]})+"\n"+h.body;h.body=v}return h}var an,sn="6.0.0",cn=function(){function t(){this.name=t.id}return t.prototype.setupOnce=function(){an=Function.prototype.toString,Function.prototype.toString=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var r=this.__sentry_original__||this;return an.apply(r,t)}},t.id="FunctionToString",t}(),fn=[/^Script error\.?$/,/^Javascript error: Script error\.? on line 0$/],hn=function(){function t(n){void 0===n&&(n={}),this.ot=n,this.name=t.id}return t.prototype.setupOnce=function(){qt(function(n){var r=Jt();if(!r)return n;var i=r.getIntegration(t);if(i){var e=r.getClient(),o=e?e.getOptions():{},u=i.Et(o);if(i.St(n,u))return null}return n})},t.prototype.St=function(t,n){return this.kt(t,n)?(ot.warn("Event dropped due to being internal Sentry Error.\nEvent: "+Y(t)),!0):this.xt(t,n)?(ot.warn("Event dropped due to being matched by `ignoreErrors` option.\nEvent: "+Y(t)),!0):this.jt(t,n)?(ot.warn("Event dropped due to being matched by `denyUrls` option.\nEvent: "+Y(t)+".\nUrl: "+this.Ot(t)),!0):!this.Dt(t,n)&&(ot.warn("Event dropped due to not being matched by `allowUrls` option.\nEvent: "+Y(t)+".\nUrl: "+this.Ot(t)),!0)},t.prototype.kt=function(t,n){if(!n.ignoreInternal)return!1;try{return t&&t.exception&&t.exception.values&&t.exception.values[0]&&"SentryError"===t.exception.values[0].type||!1}catch(t){return!1}},t.prototype.xt=function(t,n){return!(!n.ignoreErrors||!n.ignoreErrors.length)&&this.Nt(t).some(function(t){return n.ignoreErrors.some(function(n){return C(t,n)})})},t.prototype.jt=function(t,n){if(!n.denyUrls||!n.denyUrls.length)return!1;var r=this.Ot(t);return!!r&&n.denyUrls.some(function(t){return C(r,t)})},t.prototype.Dt=function(t,n){if(!n.allowUrls||!n.allowUrls.length)return!0;var r=this.Ot(t);return!r||n.allowUrls.some(function(t){return C(r,t)})},t.prototype.Et=function(t){return void 0===t&&(t={}),{allowUrls:v(this.ot.whitelistUrls||[],this.ot.allowUrls||[],t.whitelistUrls||[],t.allowUrls||[]),denyUrls:v(this.ot.blacklistUrls||[],this.ot.denyUrls||[],t.blacklistUrls||[],t.denyUrls||[]),ignoreErrors:v(this.ot.ignoreErrors||[],t.ignoreErrors||[],fn),ignoreInternal:void 0===this.ot.ignoreInternal||this.ot.ignoreInternal}},t.prototype.Nt=function(t){if(t.message)return[t.message];if(t.exception)try{var n=t.exception.values&&t.exception.values[0]||{},r=n.type,i=void 0===r?"":r,e=n.value,o=void 0===e?"":e;return[""+o,i+": "+o]}catch(n){return ot.error("Cannot extract message for event "+Y(t)),[]}return[]},t.prototype.Ot=function(t){try{if(t.stacktrace){var n=t.stacktrace.frames;return n&&n[n.length-1].filename||null}if(t.exception){var r=t.exception.values&&t.exception.values[0].stacktrace&&t.exception.values[0].stacktrace.frames;return r&&r[r.length-1].filename||null}return null}catch(n){return ot.error("Cannot extract url for event "+Y(t)),null}},t.id="InboundFilters",t}(),vn=Object.freeze({__proto__:null,FunctionToString:cn,InboundFilters:hn}),dn="?",ln=/^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,pn=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. \/=]+)(?::(\d+))?(?::(\d+))?\s*$/i,mn=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i,yn=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i,gn=/\((\S*)(?::(\d+))(?::(\d+))\)/,bn=/Minified React error #\d+;/i;function wn(t){var n=null,r=0;t&&("number"==typeof t.framesToPop?r=t.framesToPop:bn.test(t.message)&&(r=1));try{if(n=function(t){if(!t||!t.stacktrace)return null;for(var n,r=t.stacktrace,i=/ line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i,e=/ line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\((.*)\))? in (.*):\s*$/i,o=r.split("\n"),u=[],a=0;a<o.length;a+=2){var s=null;(n=i.exec(o[a]))?s={url:n[2],func:n[3],args:[],line:+n[1],column:null}:(n=e.exec(o[a]))&&(s={url:n[6],func:n[3]||n[4],args:n[5]?n[5].split(","):[],line:+n[1],column:+n[2]}),s&&(!s.func&&s.line&&(s.func=dn),u.push(s))}if(!u.length)return null;return{message:_n(t),name:t.name,stack:u}}(t))return Tn(n,r)}catch(t){}try{if(n=function(t){if(!t||!t.stack)return null;for(var n,r,i,e=[],o=t.stack.split("\n"),u=0;u<o.length;++u){if(r=ln.exec(o[u])){var a=r[2]&&0===r[2].indexOf("native");r[2]&&0===r[2].indexOf("eval")&&(n=gn.exec(r[2]))&&(r[2]=n[1],r[3]=n[2],r[4]=n[3]),i={url:r[2]&&0===r[2].indexOf("address at ")?r[2].substr("address at ".length):r[2],func:r[1]||dn,args:a?[r[2]]:[],line:r[3]?+r[3]:null,column:r[4]?+r[4]:null}}else if(r=mn.exec(o[u]))i={url:r[2],func:r[1]||dn,args:[],line:+r[3],column:r[4]?+r[4]:null};else{if(!(r=pn.exec(o[u])))continue;r[3]&&r[3].indexOf(" > eval")>-1&&(n=yn.exec(r[3]))?(r[1]=r[1]||"eval",r[3]=n[1],r[4]=n[2],r[5]=""):0!==u||r[5]||void 0===t.columnNumber||(e[0].column=t.columnNumber+1),i={url:r[3],func:r[1]||dn,args:r[2]?r[2].split(","):[],line:r[4]?+r[4]:null,column:r[5]?+r[5]:null}}!i.func&&i.line&&(i.func=dn),e.push(i)}if(!e.length)return null;return{message:_n(t),name:t.name,stack:e}}(t))return Tn(n,r)}catch(t){}return{message:_n(t),name:t&&t.name,stack:[],failed:!0}}function Tn(t,n){try{return s(s({},t),{stack:t.stack.slice(n)})}catch(n){return t}}function _n(t){var n=t&&t.message;return n?n.error&&"string"==typeof n.error.message?n.error.message:n:"No error message"}var En=50;function Sn(t){var n=xn(t.stack),r={type:t.name,value:t.message};return n&&n.length&&(r.stacktrace={frames:n}),void 0===r.type&&""===r.value&&(r.value="Unrecoverable error caught"),r}function kn(t){return{exception:{values:[Sn(t)]}}}function xn(t){if(!t||!t.length)return[];var n=t,r=n[0].func||"",i=n[n.length-1].func||"";return-1===r.indexOf("captureMessage")&&-1===r.indexOf("captureException")||(n=n.slice(1)),-1!==i.indexOf("sentryWrapped")&&(n=n.slice(0,-1)),n.slice(0,En).map(function(t){return{colno:null===t.column?void 0:t.column,filename:t.url||n[0].url,function:t.func||"?",in_app:!0,lineno:null===t.line?void 0:t.line}}).reverse()}function jn(t,n,r){var i,e;if(void 0===r&&(r={}),l(t)&&t.error)return i=kn(wn(t=t.error));if(p(t)||(e=t,"[object DOMException]"===Object.prototype.toString.call(e))){var o=t,u=o.name||(p(o)?"DOMError":"DOMException"),a=o.message?u+": "+o.message:u;return Z(i=On(a,n,r),a),"code"in o&&(i.tags=s(s({},i.tags),{"DOMException.code":""+o.code})),i}return d(t)?i=kn(wn(t)):g(t)||b(t)?(tt(i=function(t,n,r){var i={exception:{values:[{type:b(t)?t.constructor.name:r?"UnhandledRejection":"Error",value:"Non-Error "+(r?"promise rejection":"exception")+" captured with keys: "+B(t)}]},extra:{__serialized__:F(t)}};if(n){var e=xn(wn(n).stack);i.stacktrace={frames:e}}return i}(t,n,r.rejection),{synthetic:!0}),i):(Z(i=On(t,n,r),""+t,void 0),tt(i,{synthetic:!0}),i)}function On(t,n,r){void 0===r&&(r={});var i={message:t};if(r.attachStacktrace&&n){var e=xn(wn(n).stack);i.stacktrace={frames:e}}return i}var Dn=function(){function n(t){this.options=t,this.O=new Ot(30),this.Rt={},this.It=new Kt(t.dsn,t.Mt),this.url=this.It.getStoreEndpointWithUrlEncodedAuth()}return n.prototype.sendEvent=function(t){throw new x("Transport Class has to implement `sendEvent` method")},n.prototype.close=function(t){return this.O.drain(t)},n.prototype.Ct=function(n){var r=n.requestType,i=n.response,e=n.headers,o=n.resolve,u=n.reject,a=t.Status.fromHttpCode(i.status);this.At(e)&&ot.warn("Too many requests, backing off until: "+this.Lt(r)),a!==t.Status.Success?u(i):o({status:a})},n.prototype.Lt=function(t){return this.Rt[t]||this.Rt.all},n.prototype.qt=function(t){return this.Lt(t)>new Date(Date.now())},n.prototype.At=function(t){var n,r,i,e,o=Date.now(),u=t["x-sentry-rate-limits"],a=t["retry-after"];if(u){try{for(var s=f(u.trim().split(",")),c=s.next();!c.done;c=s.next()){var h=c.value.split(":",2),v=parseInt(h[0],10),d=1e3*(isNaN(v)?60:v);try{for(var l=(i=void 0,f(h[1].split(";"))),p=l.next();!p.done;p=l.next()){var m=p.value;this.Rt[m||"all"]=new Date(o+d)}}catch(t){i={error:t}}finally{try{p&&!p.done&&(e=l.return)&&e.call(l)}finally{if(i)throw i.error}}}}catch(t){n={error:t}}finally{try{c&&!c.done&&(r=s.return)&&r.call(s)}finally{if(n)throw n.error}}return!0}return!!a&&(this.Rt.all=new Date(o+function(t,n){if(!n)return nt;var r=parseInt(""+n,10);if(!isNaN(r))return 1e3*r;var i=Date.parse(""+n);return isNaN(i)?nt:i-t}(o,a)),!0)},n}(),Nn=z(),Rn=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return r(n,t),n.prototype.sendEvent=function(t){return this.Ft(un(t,this.It),t)},n.prototype.sendSession=function(t){return this.Ft(on(t,this.It),t)},n.prototype.Ft=function(t,n){var r=this;if(this.qt(t.type))return Promise.reject({event:n,type:t.type,reason:"Transport locked till "+this.Lt(t.type)+" due to too many requests.",status:429});var i={body:t.body,method:"POST",referrerPolicy:st()?"origin":""};return void 0!==this.options.fetchParameters&&Object.assign(i,this.options.fetchParameters),void 0!==this.options.headers&&(i.headers=this.options.headers),this.O.add(new jt(function(n,e){Nn.fetch(t.url,i).then(function(i){var o={"x-sentry-rate-limits":i.headers.get("X-Sentry-Rate-Limits"),"retry-after":i.headers.get("Retry-After")};r.Ct({requestType:t.type,response:i,headers:o,resolve:n,reject:e})}).catch(e)}))},n}(Dn),In=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return r(n,t),n.prototype.sendEvent=function(t){return this.Ft(un(t,this.It),t)},n.prototype.sendSession=function(t){return this.Ft(on(t,this.It),t)},n.prototype.Ft=function(t,n){var r=this;return this.qt(t.type)?Promise.reject({event:n,type:t.type,reason:"Transport locked till "+this.Lt(t.type)+" due to too many requests.",status:429}):this.O.add(new jt(function(n,i){var e=new XMLHttpRequest;for(var o in e.onreadystatechange=function(){if(4===e.readyState){var o={"x-sentry-rate-limits":e.getResponseHeader("X-Sentry-Rate-Limits"),"retry-after":e.getResponseHeader("Retry-After")};r.Ct({requestType:t.type,response:e,headers:o,resolve:n,reject:i})}},e.open("POST",t.url),r.options.headers)r.options.headers.hasOwnProperty(o)&&e.setRequestHeader(o,r.options.headers[o]);e.send(t.body)}))},n}(Dn),Mn=Object.freeze({__proto__:null,BaseTransport:Dn,FetchTransport:Rn,XHRTransport:In}),Cn=function(n){function i(){return null!==n&&n.apply(this,arguments)||this}return r(i,n),i.prototype.eventFromException=function(n,r){return function(n,r,i){var e=jn(r,i&&i.syntheticException||void 0,{attachStacktrace:n.attachStacktrace});return tt(e,{handled:!0,type:"generic"}),e.level=t.Severity.Error,i&&i.event_id&&(e.event_id=i.event_id),jt.resolve(e)}(this.ot,n,r)},i.prototype.eventFromMessage=function(n,r,i){return void 0===r&&(r=t.Severity.Info),function(n,r,i,e){void 0===i&&(i=t.Severity.Info);var o=On(r,e&&e.syntheticException||void 0,{attachStacktrace:n.attachStacktrace});return o.level=i,e&&e.event_id&&(o.event_id=e.event_id),jt.resolve(o)}(this.ot,n,r,i)},i.prototype._t=function(){if(!this.ot.dsn)return n.prototype._t.call(this);var t=s(s({},this.ot.transportOptions),{dsn:this.ot.dsn,Mt:this.ot.Mt});return this.ot.transport?new this.ot.transport(t):ut()?new Rn(t):new In(t)},i}(nn),An=0;function Ln(){return An>0}function qn(t,n,r){if(void 0===n&&(n={}),"function"!=typeof t)return t;try{if(t.__sentry__)return t;if(t.__sentry_wrapped__)return t.__sentry_wrapped__}catch(n){return t}var sentryWrapped=function(){var i=Array.prototype.slice.call(arguments);try{r&&"function"==typeof r&&r.apply(this,arguments);var e=i.map(function(t){return qn(t,n)});return t.handleEvent?t.handleEvent.apply(this,e):t.apply(this,e)}catch(t){throw An+=1,setTimeout(function(){An-=1}),Vt(function(r){r.addEventProcessor(function(t){var r=s({},t);return n.mechanism&&(Z(r,void 0,void 0),tt(r,n.mechanism)),r.extra=s(s({},r.extra),{arguments:i}),r}),captureException(t)}),t}};try{for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(sentryWrapped[i]=t[i])}catch(t){}t.prototype=t.prototype||{},sentryWrapped.prototype=t.prototype,Object.defineProperty(t,"__sentry_wrapped__",{enumerable:!1,value:sentryWrapped}),Object.defineProperties(sentryWrapped,{__sentry__:{enumerable:!1,value:!0},__sentry_original__:{enumerable:!1,value:t}});try{Object.getOwnPropertyDescriptor(sentryWrapped,"name").configurable&&Object.defineProperty(sentryWrapped,"name",{get:function(){return t.name}})}catch(t){}return sentryWrapped}function Fn(t){if(void 0===t&&(t={}),t.eventId)if(t.dsn){var n=document.createElement("script");n.async=!0,n.src=new Kt(t.dsn).getReportDialogEndpoint(t),t.onLoad&&(n.onload=t.onLoad),(document.head||document.body).appendChild(n)}else ot.error("Missing dsn option in showReportDialog call");else ot.error("Missing eventId option in showReportDialog call")}var Un=function(){function n(t){this.name=n.id,this.Ut=!1,this.Pt=!1,this.ot=s({onerror:!0,onunhandledrejection:!0},t)}return n.prototype.setupOnce=function(){Error.stackTraceLimit=50,this.ot.onerror&&(ot.log("Global Handler attached: onerror"),this.Ht()),this.ot.onunhandledrejection&&(ot.log("Global Handler attached: onunhandledrejection"),this.Bt())},n.prototype.Ht=function(){var t=this;this.Ut||(lt({callback:function(r){var i=r.error,e=Jt(),o=e.getIntegration(n),u=i&&!0===i.__sentry_own_request__;if(o&&!Ln()&&!u){var a=e.getClient(),s=y(i)?t.Jt(r.msg,r.url,r.line,r.column):t.Xt(jn(i,void 0,{attachStacktrace:a&&a.getOptions().attachStacktrace,rejection:!1}),r.url,r.line,r.column);tt(s,{handled:!1,type:"onerror"}),e.captureEvent(s,{originalException:i})}},type:"error"}),this.Ut=!0)},n.prototype.Bt=function(){var r=this;this.Pt||(lt({callback:function(i){var e=i;try{"reason"in i?e=i.reason:"detail"in i&&"reason"in i.detail&&(e=i.detail.reason)}catch(t){}var o=Jt(),u=o.getIntegration(n),a=e&&!0===e.__sentry_own_request__;if(!u||Ln()||a)return!0;var s=o.getClient(),c=y(e)?r.Gt(e):jn(e,void 0,{attachStacktrace:s&&s.getOptions().attachStacktrace,rejection:!0});c.level=t.Severity.Error,tt(c,{handled:!1,type:"onunhandledrejection"}),o.captureEvent(c,{originalException:e})},type:"unhandledrejection"}),this.Pt=!0)},n.prototype.Jt=function(t,n,r,i){var e,o=l(t)?t.message:t;if(m(o)){var u=o.match(/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i);u&&(e=u[1],o=u[2])}var a={exception:{values:[{type:e||"Error",value:o}]}};return this.Xt(a,n,r,i)},n.prototype.Gt=function(t){return{exception:{values:[{type:"UnhandledRejection",value:"Non-Error promise rejection captured with value: "+String(t)}]}}},n.prototype.Xt=function(t,n,r,i){t.exception=t.exception||{},t.exception.values=t.exception.values||[],t.exception.values[0]=t.exception.values[0]||{},t.exception.values[0].stacktrace=t.exception.values[0].stacktrace||{},t.exception.values[0].stacktrace.frames=t.exception.values[0].stacktrace.frames||[];var e=isNaN(parseInt(i,10))?void 0:i,o=isNaN(parseInt(r,10))?void 0:r,u=m(n)&&n.length>0?n:function(){try{return document.location.href}catch(t){return""}}();return 0===t.exception.values[0].stacktrace.frames.length&&t.exception.values[0].stacktrace.frames.push({colno:e,filename:u,function:"?",in_app:!0,lineno:o}),t},n.id="GlobalHandlers",n}(),Pn=["EventTarget","Window","Node","ApplicationCache","AudioTrackList","ChannelMergerNode","CryptoOperation","EventSource","FileReader","HTMLUnknownElement","IDBDatabase","IDBRequest","IDBTransaction","KeyOperation","MediaController","MessagePort","ModalWindow","Notification","SVGElementInstance","Screen","TextTrack","TextTrackCue","TextTrackList","WebSocket","WebSocketWorker","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload"],Hn=function(){function t(n){this.name=t.id,this.ot=s({XMLHttpRequest:!0,eventTarget:!0,requestAnimationFrame:!0,setInterval:!0,setTimeout:!0},n)}return t.prototype.setupOnce=function(){var t=z();(this.ot.setTimeout&&A(t,"setTimeout",this.Wt.bind(this)),this.ot.setInterval&&A(t,"setInterval",this.Wt.bind(this)),this.ot.requestAnimationFrame&&A(t,"requestAnimationFrame",this.$t.bind(this)),this.ot.XMLHttpRequest&&"XMLHttpRequest"in t&&A(XMLHttpRequest.prototype,"send",this.zt.bind(this)),this.ot.eventTarget)&&(Array.isArray(this.ot.eventTarget)?this.ot.eventTarget:Pn).forEach(this.Vt.bind(this))},t.prototype.Wt=function(t){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var i=n[0];return n[0]=qn(i,{mechanism:{data:{function:R(t)},handled:!0,type:"instrument"}}),t.apply(this,n)}},t.prototype.$t=function(t){return function(n){return t.call(this,qn(n,{mechanism:{data:{function:"requestAnimationFrame",handler:R(t)},handled:!0,type:"instrument"}}))}},t.prototype.Vt=function(t){var n=z(),r=n[t]&&n[t].prototype;r&&r.hasOwnProperty&&r.hasOwnProperty("addEventListener")&&(A(r,"addEventListener",function(n){return function(r,i,e){try{"function"==typeof i.handleEvent&&(i.handleEvent=qn(i.handleEvent.bind(i),{mechanism:{data:{function:"handleEvent",handler:R(i),target:t},handled:!0,type:"instrument"}}))}catch(t){}return n.call(this,r,qn(i,{mechanism:{data:{function:"addEventListener",handler:R(i),target:t},handled:!0,type:"instrument"}}),e)}}),A(r,"removeEventListener",function(t){return function(n,r,i){var e,o=r;try{var u=null===(e=o)||void 0===e?void 0:e.__sentry_wrapped__;u&&t.call(this,n,u,i)}catch(t){}return t.call(this,n,o,i)}}))},t.prototype.zt=function(t){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var i=this;return["onload","onerror","onprogress","onreadystatechange"].forEach(function(t){t in i&&"function"==typeof i[t]&&A(i,t,function(n){var r={mechanism:{data:{function:t,handler:R(n)},handled:!0,type:"instrument"}};return n.__sentry_original__&&(r.mechanism.data.handler=R(n.__sentry_original__)),qn(n,r)})}),t.apply(this,n)}},t.id="TryCatch",t}(),Bn=function(){function n(t){this.name=n.id,this.ot=s({console:!0,dom:!0,fetch:!0,history:!0,sentry:!0,xhr:!0},t)}return n.prototype.addSentryBreadcrumb=function(t){this.ot.sentry&&Jt().addBreadcrumb({category:"sentry."+("transaction"===t.type?"transaction":"event"),event_id:t.event_id,level:t.level,message:Y(t)},{event:t})},n.prototype.setupOnce=function(){var t=this;this.ot.console&&lt({callback:function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];t.Kt.apply(t,v(n))},type:"console"}),this.ot.dom&&lt({callback:function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];t.Yt.apply(t,v(n))},type:"dom"}),this.ot.xhr&&lt({callback:function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];t.Qt.apply(t,v(n))},type:"xhr"}),this.ot.fetch&&lt({callback:function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];t.Zt.apply(t,v(n))},type:"fetch"}),this.ot.history&&lt({callback:function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];t.tn.apply(t,v(n))},type:"history"})},n.prototype.Kt=function(n){var r={category:"console",data:{arguments:n.args,logger:"console"},level:t.Severity.fromString(n.level),message:M(n.args," ")};if("assert"===n.level){if(!1!==n.args[0])return;r.message="Assertion failed: "+(M(n.args.slice(1)," ")||"console.assert"),r.data.arguments=n.args.slice(1)}Jt().addBreadcrumb(r,{input:n.args,level:n.level})},n.prototype.Yt=function(t){var n;try{n=t.event.target?E(t.event.target):E(t.event)}catch(t){n="<unknown>"}0!==n.length&&Jt().addBreadcrumb({category:"ui."+t.name,message:n},{event:t.event,name:t.name})},n.prototype.Qt=function(t){if(t.endTimestamp){if(t.xhr.__sentry_own_request__)return;var n=t.xhr.__sentry_xhr__||{},r=n.method,i=n.url,e=n.status_code,o=n.body;Jt().addBreadcrumb({category:"xhr",data:{method:r,url:i,status_code:e},type:"http"},{xhr:t.xhr,input:o})}else;},n.prototype.Zt=function(n){n.endTimestamp&&(n.fetchData.url.match(/sentry_key/)&&"POST"===n.fetchData.method||(n.error?Jt().addBreadcrumb({category:"fetch",data:n.fetchData,level:t.Severity.Error,type:"http"},{data:n.error,input:n.args}):Jt().addBreadcrumb({category:"fetch",data:s(s({},n.fetchData),{status_code:n.response.status}),type:"http"},{input:n.args,response:n.response})))},n.prototype.tn=function(t){var n=z(),r=t.from,i=t.to,e=K(n.location.href),o=K(r),u=K(i);o.path||(o=e),e.protocol===u.protocol&&e.host===u.host&&(i=u.relative),e.protocol===o.protocol&&e.host===o.host&&(r=o.relative),Jt().addBreadcrumb({category:"navigation",data:{from:r,to:i}})},n.id="Breadcrumbs",n}(),Jn="cause",Xn=5,Gn=function(){function t(n){void 0===n&&(n={}),this.name=t.id,this.nn=n.key||Jn,this.j=n.limit||Xn}return t.prototype.setupOnce=function(){qt(function(n,r){var i=Jt().getIntegration(t);return i?i.rn(n,r):n})},t.prototype.rn=function(t,n){if(!(t.exception&&t.exception.values&&n&&_(n.originalException,Error)))return t;var r=this.in(n.originalException,this.nn);return t.exception.values=v(r,t.exception.values),t},t.prototype.in=function(t,n,r){if(void 0===r&&(r=[]),!_(t[n],Error)||r.length+1>=this.j)return r;var i=Sn(wn(t[n]));return this.in(t[n],n,v([i],r))},t.id="LinkedErrors",t}(),Wn=z(),$n=function(){function t(){this.name=t.id}return t.prototype.setupOnce=function(){qt(function(n){var r,i,e;if(Jt().getIntegration(t)){if(!Wn.navigator&&!Wn.location&&!Wn.document)return n;var o=(null===(r=n.request)||void 0===r?void 0:r.url)||(null===(i=Wn.location)||void 0===i?void 0:i.href),u=(Wn.document||{}).referrer,a=(Wn.navigator||{}).userAgent,c=s(s(s({},null===(e=n.request)||void 0===e?void 0:e.headers),u&&{Referer:u}),a&&{"User-Agent":a}),f=s(s({},o&&{url:o}),{headers:c});return s(s({},n),{request:f})}return n})},t.id="UserAgent",t}(),zn=Object.freeze({__proto__:null,GlobalHandlers:Un,TryCatch:Hn,Breadcrumbs:Bn,LinkedErrors:Gn,UserAgent:$n}),Vn=function(t){function n(n){return void 0===n&&(n={}),t.call(this,Cn,n)||this}return r(n,t),n.prototype.showReportDialog=function(t){void 0===t&&(t={}),z().document&&(this.vt()?Fn(s(s({},t),{dsn:t.dsn||this.getDsn()})):ot.error("Trying to call showReportDialog with Sentry Client disabled"))},n.prototype.lt=function(n,r,i){return n.platform=n.platform||"javascript",t.prototype.lt.call(this,n,r,i)},n.prototype.bt=function(n){var r=this.getIntegration(Bn);r&&r.addSentryBreadcrumb(n),t.prototype.bt.call(this,n)},n}(Zt),Kn=[new hn,new cn,new Hn,new Bn,new Un,new Gn,new $n];var Yn={},Qn=z();Qn.Sentry&&Qn.Sentry.Integrations&&(Yn=Qn.Sentry.Integrations);var Zn,tr=s(s(s({},Yn),vn),zn);!function(t){t.Ok="ok",t.DeadlineExceeded="deadline_exceeded",t.Unauthenticated="unauthenticated",t.PermissionDenied="permission_denied",t.NotFound="not_found",t.ResourceExhausted="resource_exhausted",t.InvalidArgument="invalid_argument",t.Unimplemented="unimplemented",t.Unavailable="unavailable",t.InternalError="internal_error",t.UnknownError="unknown_error",t.Cancelled="cancelled",t.AlreadyExists="already_exists",t.FailedPrecondition="failed_precondition",t.Aborted="aborted",t.OutOfRange="out_of_range",t.DataLoss="data_loss"}(Zn||(Zn={})),function(t){t.fromHttpCode=function(n){if(n<400)return t.Ok;if(n>=400&&n<500)switch(n){case 401:return t.Unauthenticated;case 403:return t.PermissionDenied;case 404:return t.NotFound;case 409:return t.AlreadyExists;case 413:return t.FailedPrecondition;case 429:return t.ResourceExhausted;default:return t.InvalidArgument}if(n>=500&&n<600)switch(n){case 501:return t.Unimplemented;case 503:return t.Unavailable;case 504:return t.DeadlineExceeded;default:return t.InternalError}return t.UnknownError}}(Zn||(Zn={}));var nr=new RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");function rr(t){return"tracesSampleRate"in t||"tracesSampler"in t}function ir(t){var n,r;return void 0===t&&(t=Jt()),null===(r=null===(n=t)||void 0===n?void 0:n.getScope())||void 0===r?void 0:r.getTransaction()}function er(t){return t/1e3}function or(){var t=ir();t&&(ot.log("[Tracing] Transaction: "+Zn.InternalError+" -> Global error occured"),t.setStatus(Zn.InternalError))}var ur=function(){function t(t){void 0===t&&(t=1e3),this.spans=[],this.en=t}return t.prototype.add=function(t){this.spans.length>this.en?t.spanRecorder=void 0:this.spans.push(t)},t}(),ar=function(){function t(t){if(this.traceId=V(),this.spanId=V().substring(16),this.startTimestamp=Mt(),this.tags={},this.data={},!t)return this;t.traceId&&(this.traceId=t.traceId),t.spanId&&(this.spanId=t.spanId),t.parentSpanId&&(this.parentSpanId=t.parentSpanId),"sampled"in t&&(this.sampled=t.sampled),t.op&&(this.op=t.op),t.description&&(this.description=t.description),t.data&&(this.data=t.data),t.tags&&(this.tags=t.tags),t.status&&(this.status=t.status),t.startTimestamp&&(this.startTimestamp=t.startTimestamp),t.endTimestamp&&(this.endTimestamp=t.endTimestamp)}return t.prototype.child=function(t){return this.startChild(t)},t.prototype.startChild=function(n){var r=new t(s(s({},n),{parentSpanId:this.spanId,sampled:this.sampled,traceId:this.traceId}));return r.spanRecorder=this.spanRecorder,r.spanRecorder&&r.spanRecorder.add(r),r.transaction=this.transaction,r},t.prototype.setTag=function(t,n){var r;return this.tags=s(s({},this.tags),((r={})[t]=n,r)),this},t.prototype.setData=function(t,n){var r;return this.data=s(s({},this.data),((r={})[t]=n,r)),this},t.prototype.setStatus=function(t){return this.status=t,this},t.prototype.setHttpStatus=function(t){this.setTag("http.status_code",String(t));var n=Zn.fromHttpCode(t);return n!==Zn.UnknownError&&this.setStatus(n),this},t.prototype.isSuccess=function(){return this.status===Zn.Ok},t.prototype.finish=function(t){this.endTimestamp="number"==typeof t?t:Mt()},t.prototype.toTraceparent=function(){var t="";return void 0!==this.sampled&&(t=this.sampled?"-1":"-0"),this.traceId+"-"+this.spanId+t},t.prototype.getTraceContext=function(){return J({data:Object.keys(this.data).length>0?this.data:void 0,description:this.description,op:this.op,parent_span_id:this.parentSpanId,span_id:this.spanId,status:this.status,tags:Object.keys(this.tags).length>0?this.tags:void 0,trace_id:this.traceId})},t.prototype.toJSON=function(){return J({data:Object.keys(this.data).length>0?this.data:void 0,description:this.description,op:this.op,parent_span_id:this.parentSpanId,span_id:this.spanId,start_timestamp:this.startTimestamp,status:this.status,tags:Object.keys(this.tags).length>0?this.tags:void 0,timestamp:this.endTimestamp,trace_id:this.traceId})},t}(),sr=function(t){function n(n,r){var i=t.call(this,n)||this;return i.on={},i.un=Jt(),_(r,Pt)&&(i.un=r),i.name=n.name?n.name:"",i.an=n.trimEnd,i.transaction=i,i}return r(n,t),n.prototype.setName=function(t){this.name=t},n.prototype.initSpanRecorder=function(t){void 0===t&&(t=1e3),this.spanRecorder||(this.spanRecorder=new ur(t)),this.spanRecorder.add(this)},n.prototype.setMeasurements=function(t){this.on=s({},t)},n.prototype.finish=function(n){var r=this;if(void 0===this.endTimestamp){if(this.name||(ot.warn("Transaction has no name, falling back to `<unlabeled transaction>`."),this.name="<unlabeled transaction>"),t.prototype.finish.call(this,n),!0===this.sampled){var i=this.spanRecorder?this.spanRecorder.spans.filter(function(t){return t!==r&&t.endTimestamp}):[];this.an&&i.length>0&&(this.endTimestamp=i.reduce(function(t,n){return t.endTimestamp&&n.endTimestamp?t.endTimestamp>n.endTimestamp?t:n:t}).endTimestamp);var e={contexts:{trace:this.getTraceContext()},spans:i,start_timestamp:this.startTimestamp,tags:this.tags,timestamp:this.endTimestamp,transaction:this.name,type:"transaction"};return Object.keys(this.on).length>0&&(ot.log("[Measurements] Adding measurements to transaction",JSON.stringify(this.on,void 0,2)),e.measurements=this.on),this.un.captureEvent(e)}ot.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled.")}},n}(ar),cr=1e3,fr=function(t){function n(n,r,i,e){void 0===i&&(i="");var o=t.call(this,e)||this;return o.sn=n,o.cn=r,o.transactionSpanId=i,o}return r(n,t),n.prototype.add=function(n){var r=this;n.spanId!==this.transactionSpanId&&(n.finish=function(t){n.endTimestamp="number"==typeof t?t:Mt(),r.cn(n.spanId)},void 0===n.endTimestamp&&this.sn(n.spanId)),t.prototype.add.call(this,n)},n}(ur),hr=function(t){function n(n,r,i,e){void 0===i&&(i=cr),void 0===e&&(e=!1);var o=t.call(this,n,r)||this;return o.fn=r,o.hn=i,o.vn=e,o.activities={},o.dn=0,o.ln=0,o.pn=!1,o.mn=[],r&&e&&(vr(r),ot.log("Setting idle transaction on scope. Span ID: "+o.spanId),r.configureScope(function(t){return t.setSpan(o)})),o}return r(n,t),n.prototype.finish=function(n){var r,i,e=this;if(void 0===n&&(n=Mt()),this.pn=!0,this.activities={},this.spanRecorder){ot.log("[Tracing] finishing IdleTransaction",new Date(1e3*n).toISOString(),this.op);try{for(var o=f(this.mn),u=o.next();!u.done;u=o.next()){(0,u.value)(this,n)}}catch(t){r={error:t}}finally{try{u&&!u.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}this.spanRecorder.spans=this.spanRecorder.spans.filter(function(t){if(t.spanId===e.spanId)return!0;t.endTimestamp||(t.endTimestamp=n,t.setStatus(Zn.Cancelled),ot.log("[Tracing] cancelling span since transaction ended early",JSON.stringify(t,void 0,2)));var r=t.startTimestamp<n;return r||ot.log("[Tracing] discarding Span since it happened after Transaction was finished",JSON.stringify(t,void 0,2)),r}),this.vn&&vr(this.fn),ot.log("[Tracing] flushing IdleTransaction")}else ot.log("[Tracing] No active IdleTransaction");return t.prototype.finish.call(this,n)},n.prototype.registerBeforeFinishCallback=function(t){this.mn.push(t)},n.prototype.initSpanRecorder=function(t){var n=this;if(!this.spanRecorder){this.yn=setTimeout(function(){n.pn||n.finish()},this.hn);this.spanRecorder=new fr(function(t){n.pn||n.sn(t)},function(t){n.pn||n.cn(t)},this.spanId,t),ot.log("Starting heartbeat"),this.gn()}this.spanRecorder.add(this)},n.prototype.sn=function(t){this.yn&&(clearTimeout(this.yn),this.yn=void 0),ot.log("[Tracing] pushActivity: "+t),this.activities[t]=!0,ot.log("[Tracing] new activities count",Object.keys(this.activities).length)},n.prototype.cn=function(t){var n=this;if(this.activities[t]&&(ot.log("[Tracing] popActivity "+t),delete this.activities[t],ot.log("[Tracing] new activities count",Object.keys(this.activities).length)),0===Object.keys(this.activities).length){var r=this.hn,i=Mt()+r/1e3;setTimeout(function(){n.pn||n.finish(i)},r)}},n.prototype.bn=function(){if(clearTimeout(this.dn),!this.pn){var t=Object.keys(this.activities),n=t.length?t.reduce(function(t,n){return t+n}):"";n===this.wn?this.ln+=1:this.ln=1,this.wn=n,this.ln>=3?(ot.log("[Tracing] Transaction finished because of no change for 3 heart beats"),this.setStatus(Zn.DeadlineExceeded),this.setTag("heartbeat","failed"),this.finish()):this.gn()}},n.prototype.gn=function(){var t=this;ot.log("pinging Heartbeat -> current counter: "+this.ln),this.dn=setTimeout(function(){t.bn()},5e3)},n}(sr);function vr(t){if(t){var n=t.getScope();if(n)n.getTransaction()&&n.setSpan(void 0)}}function dr(){var t=this.getScope();if(t){var n=t.getSpan();if(n)return{"sentry-trace":n.toTraceparent()}}return{}}function lr(t,n,r){var i,e,o=t.getClient(),u=o&&o.getOptions()||{};return o&&rr(u)?void 0!==n.sampled?(n.tags=s(s({},n.tags),{__sentry_samplingMethod:a.Explicit}),n):("function"==typeof u.tracesSampler?(e=u.tracesSampler(r),n.tags=s(s({},n.tags),{__sentry_samplingMethod:a.Sampler,__sentry_sampleRate:String(Number(e))})):void 0!==r.parentSampled?(e=r.parentSampled,n.tags=s(s({},n.tags),{__sentry_samplingMethod:a.Inheritance})):(e=u.tracesSampleRate,n.tags=s(s({},n.tags),{__sentry_samplingMethod:a.Rate,__sentry_sampleRate:String(Number(e))})),function(t){if(isNaN(t)||"number"!=typeof t&&"boolean"!=typeof t)return ot.warn("[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got "+JSON.stringify(t)+" of type "+JSON.stringify(typeof t)+"."),!1;if(t<0||t>1)return ot.warn("[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got "+t+"."),!1;return!0}(e)?e?(n.sampled=Math.random()<e,n.sampled?(n.initSpanRecorder(null===(i=u.Tn)||void 0===i?void 0:i.maxSpans),ot.log("[Tracing] starting "+n.op+" transaction - "+n.name),n):(ot.log("[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = "+Number(e)+")"),n)):(ot.log("[Tracing] Discarding transaction because "+("function"==typeof u.tracesSampler?"tracesSampler returned 0 or false":"a negative sampling decision was inherited or tracesSampleRate is set to 0")),n.sampled=!1,n):(ot.warn("[Tracing] Discarding transaction because of invalid sample rate."),n.sampled=!1,n)):(n.sampled=!1,n)}function pr(t){var n={transactionContext:t,parentSampled:t.parentSampled};if(X()){var r=Xt();if(r){var i=G(module,"http").IncomingMessage,e=r.members.find(function(t){return _(t,i)});e&&(n.request=function(t,n){if(void 0===n&&(n=W),!X())throw new Error("Can't get node request data outside of a node environment");var r={},i=t.headers||t.header||{},e=t.method,o=t.hostname||t.host||i.host||"<no host>",u="https"===t.protocol||t.secure||(t.socket||{}).encrypted?"https":"http",a=t.originalUrl||t.url||"",s=u+"://"+o+a;return n.forEach(function(n){switch(n){case"headers":r.headers=i;break;case"method":r.method=e;break;case"url":r.url=s;break;case"cookies":r.cookies=t.cookies||G(module,"cookie").parse(i.cookie||"");break;case"query_string":r.query_string=G(module,"url").parse(a||"",!1).query;break;case"data":if("GET"===e||"HEAD"===e)break;void 0!==t.body&&(r.data=m(t.body)?t.body:JSON.stringify(H(t.body)));break;default:({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}}),r}(e))}}else{var o=z();"location"in o&&(n.location=s({},o.location))}return n}function mr(t,n){return lr(this,new sr(t,this),s(s({},pr(t)),n))}function yr(){var t;(t=Ht()).__SENTRY__&&(t.__SENTRY__.extensions=t.__SENTRY__.extensions||{},t.__SENTRY__.extensions.startTransaction||(t.__SENTRY__.extensions.startTransaction=mr),t.__SENTRY__.extensions.traceHeaders||(t.__SENTRY__.extensions.traceHeaders=dr)),lt({callback:or,type:"error"}),lt({callback:or,type:"unhandledrejection"})}var gr=z();var br,wr,Tr=function(t,n,r,i){var e;return function(){r&&n.isFinal&&r.disconnect(),n.value>=0&&(i||n.isFinal||"hidden"===document.visibilityState)&&(n.delta=n.value-(e||0),(n.delta||n.isFinal||void 0===e)&&(t(n),e=n.value))}},_r=function(t,n){return void 0===n&&(n=-1),{name:t,value:n,delta:0,entries:[],id:Date.now()+"-"+(Math.floor(Math.random()*(9e12-1))+1e12),isFinal:!1}},Er=function(t,n){try{if(PerformanceObserver.supportedEntryTypes.includes(t)){var r=new PerformanceObserver(function(t){return t.getEntries().map(n)});return r.observe({type:t,buffered:!0}),r}}catch(t){}},Sr=!1,kr=!1,xr=function(t){Sr=!t.persisted},jr=function(t,n){void 0===n&&(n=!1),kr||(addEventListener("pagehide",xr),addEventListener("beforeunload",function(){}),kr=!0),addEventListener("visibilitychange",function(n){var r=n.timeStamp;"hidden"===document.visibilityState&&t({timeStamp:r,isUnloading:Sr})},{capture:!0,once:n})},Or=function(){return void 0===br&&(br="hidden"===document.visibilityState?0:1/0,jr(function(t){var n=t.timeStamp;return br=n},!0)),{get timeStamp(){return br}}},Dr=function(t,n){void 0===n&&(n=!1);var r,i=_r("LCP"),e=Or(),o=function(t){var n=t.startTime;n<e.timeStamp?(i.value=n,i.entries.push(t)):i.isFinal=!0,r()},u=Er("largest-contentful-paint",o);if(u){r=Tr(t,i,u,n);var a=function(){i.isFinal||(u.takeRecords().map(o),i.isFinal=!0,r())};(wr||(wr=new Promise(function(t){return["scroll","keydown","pointerdown"].map(function(n){addEventListener(n,t,{once:!0,passive:!0,capture:!0})})})),wr).then(a),jr(a,!0)}},Nr=z(),Rr=function(t){var n,r=_r("TTFB");n=function(){try{var n=Nr.performance.getEntriesByType("navigation")[0]||function(){var t=Nr.performance.timing,n={entryType:"navigation",startTime:0};for(var r in t)"navigationStart"!==r&&"toJSON"!==r&&(n[r]=Math.max(t[r]-t.navigationStart,0));return n}();r.value=r.delta=n.responseStart,r.entries=[n],t(r)}catch(t){}},"complete"===document.readyState?setTimeout(n,0):addEventListener("pageshow",n)},Ir=z(),Mr=function(){function t(){this.on={},this._n=0,Ir&&Ir.performance&&(Ir.performance.mark&&Ir.performance.mark("sentry-tracing-init"),this.En(),this.Sn(),this.kn(),this.xn())}return t.prototype.addPerformanceEntries=function(t){var n=this;if(Ir&&Ir.performance&&Ir.performance.getEntries&&Ct){ot.log("[Tracing] Adding & adjusting spans using Performance API");var r,i,e,o=er(Ct);if(Ir.document)for(var u=0;u<document.scripts.length;u++)if("true"===document.scripts[u].dataset.entry){r=document.scripts[u].src;break}if(Ir.performance.getEntries().slice(this._n).forEach(function(u){var a=er(u.startTime),s=er(u.duration);if(!("navigation"===t.op&&o+a<t.startTimestamp))switch(u.entryType){case"navigation":!function(t,n,r){Cr(t,n,"unloadEvent",r),Cr(t,n,"redirect",r),Cr(t,n,"domContentLoadedEvent",r),Cr(t,n,"loadEvent",r),Cr(t,n,"connect",r),Cr(t,n,"secureConnection",r,"connectEnd"),Cr(t,n,"fetch",r,"domainLookupStart"),Cr(t,n,"domainLookup",r),function(t,n,r){Ar(t,{op:"browser",description:"request",startTimestamp:r+er(n.requestStart),endTimestamp:r+er(n.responseEnd)}),Ar(t,{op:"browser",description:"response",startTimestamp:r+er(n.responseStart),endTimestamp:r+er(n.responseEnd)})}(t,n,r)}(t,u,o);break;case"mark":case"paint":case"measure":var c=function(t,n,r,i,e){var o=e+r,u=o+i;return Ar(t,{description:n.name,endTimestamp:u,op:n.entryType,startTimestamp:o}),o}(t,u,a,s,o);void 0===e&&"sentry-tracing-init"===u.name&&(e=c);var f=Or(),h=u.startTime<f.timeStamp;"first-paint"===u.name&&h&&(ot.log("[Measurements] Adding FP"),n.on.fp={value:u.startTime},n.on["mark.fp"]={value:c}),"first-contentful-paint"===u.name&&h&&(ot.log("[Measurements] Adding FCP"),n.on.fcp={value:u.startTime},n.on["mark.fcp"]={value:c});break;case"resource":var v=u.name.replace(window.location.origin,""),d=function(t,n,r,i,e,o){if("xmlhttprequest"===n.initiatorType||"fetch"===n.initiatorType)return;var u={};"transferSize"in n&&(u["Transfer Size"]=n.transferSize);"encodedBodySize"in n&&(u["Encoded Body Size"]=n.encodedBodySize);"decodedBodySize"in n&&(u["Decoded Body Size"]=n.decodedBodySize);var a=o+i,s=a+e;return Ar(t,{description:r,endTimestamp:s,op:n.initiatorType?"resource."+n.initiatorType:"resource",startTimestamp:a,data:u}),s}(t,u,v,a,s,o);void 0===i&&(r||"").indexOf(v)>-1&&(i=d)}}),void 0!==i&&void 0!==e&&Ar(t,{description:"evaluation",endTimestamp:e,op:"script",startTimestamp:i}),this._n=Math.max(performance.getEntries().length-1,0),this.jn(t),"pageload"===t.op){var a=er(Ct);["fcp","fp","lcp","ttfb"].forEach(function(r){if(n.on[r]&&!(a>=t.startTimestamp)){var i=n.on[r].value,e=a+er(i),o=Math.abs(1e3*(e-t.startTimestamp)),u=o-i;ot.log("[Measurements] Normalized "+r+" from "+i+" to "+o+" ("+u+")"),n.on[r].value=o}}),this.on["mark.fid"]&&this.on.fid&&Ar(t,{description:"first input delay",endTimestamp:this.on["mark.fid"].value+er(this.on.fid.value),op:"web.vitals",startTimestamp:this.on["mark.fid"].value}),t.setMeasurements(this.on)}}},t.prototype.En=function(){var t=this;!function(t,n){void 0===n&&(n=!1);var r,i=_r("CLS",0),e=function(t){t.hadRecentInput||(i.value+=t.value,i.entries.push(t),r())},o=Er("layout-shift",e);o&&(r=Tr(t,i,o,n),jr(function(t){var n=t.isUnloading;o.takeRecords().map(e),n&&(i.isFinal=!0),r()}))}(function(n){n.entries.pop()&&(ot.log("[Measurements] Adding CLS"),t.on.cls={value:n.value})})},t.prototype.jn=function(t){var n=Ir.navigator;if(n){var r=n.connection;r&&(r.effectiveType&&t.setTag("effectiveConnectionType",r.effectiveType),r.type&&t.setTag("connectionType",r.type),Lr(r.rtt)&&(this.on["connection.rtt"]={value:r.rtt}),Lr(r.downlink)&&(this.on["connection.downlink"]={value:r.downlink})),Lr(n.deviceMemory)&&t.setTag("deviceMemory",String(n.deviceMemory)),Lr(n.hardwareConcurrency)&&t.setTag("hardwareConcurrency",String(n.hardwareConcurrency))}},t.prototype.Sn=function(){var t=this;Dr(function(n){var r=n.entries.pop();if(r){var i=er(performance.timeOrigin),e=er(r.startTime);ot.log("[Measurements] Adding LCP"),t.on.lcp={value:n.value},t.on["mark.lcp"]={value:i+e}}})},t.prototype.kn=function(){var t,n,r,i,e,o,u=this;t=function(t){var n=t.entries.pop();if(n){var r=er(performance.timeOrigin),i=er(n.startTime);ot.log("[Measurements] Adding FID"),u.on.fid={value:t.value},u.on["mark.fid"]={value:r+i}}},n=_r("FID"),r=Or(),e=Er("first-input",i=function(t){t.startTime<r.timeStamp&&(n.value=t.processingStart-t.startTime,n.entries.push(t),n.isFinal=!0,o())}),o=Tr(t,n,e),e?jr(function(){e.takeRecords().map(i),e.disconnect()},!0):window.perfMetrics&&window.perfMetrics.onFirstInputDelay&&window.perfMetrics.onFirstInputDelay(function(t,i){i.timeStamp<r.timeStamp&&(n.value=t,n.isFinal=!0,n.entries=[{entryType:"first-input",name:i.type,target:i.target,cancelable:i.cancelable,startTime:i.timeStamp,processingStart:i.timeStamp+t}],o())})},t.prototype.xn=function(){var t=this;Rr(function(n){var r,i=n.entries.pop();if(i){ot.log("[Measurements] Adding TTFB"),t.on.ttfb={value:n.value};var e=n.value-(r=n.entries[0],null!=r?r:i).requestStart;t.on["ttfb.requestTime"]={value:e}}})},t}();function Cr(t,n,r,i,e){var o=e?n[e]:n[r+"End"],u=n[r+"Start"];u&&o&&Ar(t,{op:"browser",description:r,startTimestamp:i+er(u),endTimestamp:i+er(o)})}function Ar(t,n){var r=n.startTimestamp,i=c(n,["startTimestamp"]);return r&&t.startTimestamp>r&&(t.startTimestamp=r),t.startChild(s({startTimestamp:r},i))}function Lr(t){return"number"==typeof t&&isFinite(t)}var qr={traceFetch:!0,traceXHR:!0,tracingOrigins:["localhost",/^\//]};function Fr(t){var n=s(s({},qr),t),r=n.traceFetch,i=n.traceXHR,e=n.tracingOrigins,o=n.shouldCreateSpanForRequest,u={},a=function(t){if(u[t])return u[t];var n=e;return u[t]=n.some(function(n){return C(t,n)})&&!C(t,"sentry_key"),u[t]},c=a;"function"==typeof o&&(c=function(t){return a(t)&&o(t)});var f={};r&&lt({callback:function(t){!function(t,n,r){var i,e=null===(i=Jt().getClient())||void 0===i?void 0:i.getOptions();if(!(e&&rr(e)&&t.fetchData&&n(t.fetchData.url)))return;if(t.endTimestamp&&t.fetchData.__span){var o=r[t.fetchData.__span];if(o){var u=t.response;u&&o.setHttpStatus(u.status),o.finish(),delete r[t.fetchData.__span]}return}var a=ir();if(a){var o=a.startChild({data:s(s({},t.fetchData),{type:"fetch"}),description:t.fetchData.method+" "+t.fetchData.url,op:"http"});t.fetchData.__span=o.spanId,r[o.spanId]=o;var c=t.args[0]=t.args[0],f=t.args[1]=t.args[1]||{},h=f.headers;_(c,Request)&&(h=c.headers),h?"function"==typeof h.append?h.append("sentry-trace",o.toTraceparent()):h=Array.isArray(h)?v(h,[["sentry-trace",o.toTraceparent()]]):s(s({},h),{"sentry-trace":o.toTraceparent()}):h={"sentry-trace":o.toTraceparent()},f.headers=h}}(t,c,f)},type:"fetch"}),i&&lt({callback:function(t){!function(t,n,r){var i,e=null===(i=Jt().getClient())||void 0===i?void 0:i.getOptions();if(!e||!rr(e)||!(t.xhr&&t.xhr.__sentry_xhr__&&n(t.xhr.__sentry_xhr__.url))||t.xhr.__sentry_own_request__)return;var o=t.xhr.__sentry_xhr__;if(t.endTimestamp&&t.xhr.__sentry_xhr_span_id__){var u=r[t.xhr.__sentry_xhr_span_id__];return void(u&&(u.setHttpStatus(o.status_code),u.finish(),delete r[t.xhr.__sentry_xhr_span_id__]))}var a=ir();if(a){var u=a.startChild({data:s(s({},o.data),{type:"xhr",method:o.method,url:o.url}),description:o.method+" "+o.url,op:"http"});if(t.xhr.__sentry_xhr_span_id__=u.spanId,r[t.xhr.__sentry_xhr_span_id__]=u,t.xhr.setRequestHeader)try{t.xhr.setRequestHeader("sentry-trace",u.toTraceparent())}catch(t){}}}(t,c,f)},type:"xhr"})}var Ur=z();var Pr=s({idleTimeout:cr,markBackgroundTransactions:!0,maxTransactionDuration:600,routingInstrumentation:function(t,n,r){if(void 0===n&&(n=!0),void 0===r&&(r=!0),Ur&&Ur.location){var i,e=Ur.location.href;n&&(i=t({name:Ur.location.pathname,op:"pageload"})),r&&lt({callback:function(n){var r=n.to,o=n.from;void 0===o&&e&&-1!==e.indexOf(r)?e=void 0:o!==r&&(e=void 0,i&&(ot.log("[Tracing] Finishing current transaction with op: "+i.op),i.finish()),i=t({name:Ur.location.pathname,op:"navigation"}))},type:"history"})}else ot.warn("Could not initialize routing instrumentation due to invalid location")},startTransactionOnLocationChange:!0,startTransactionOnPageLoad:!0},qr),Hr=function(){function t(n){this.name=t.id,this.On=new Mr,this.Dn=!1;var r=qr.tracingOrigins;n&&n.tracingOrigins&&Array.isArray(n.tracingOrigins)&&0!==n.tracingOrigins.length?r=n.tracingOrigins:this.Dn=!0,this.options=s(s(s({},Pr),n),{tracingOrigins:r})}return t.prototype.setupOnce=function(t,n){var r=this;this.Nn=n,this.Dn&&(ot.warn("[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace."),ot.warn("[Tracing] We added a reasonable default for you: "+qr.tracingOrigins));var i=this.options,e=i.routingInstrumentation,o=i.startTransactionOnLocationChange,u=i.startTransactionOnPageLoad,a=i.markBackgroundTransactions,s=i.traceFetch,c=i.traceXHR,f=i.tracingOrigins,h=i.shouldCreateSpanForRequest;e(function(t){return r.Rn(t)},u,o),a&&(gr&&gr.document?gr.document.addEventListener("visibilitychange",function(){var t=ir();gr.document.hidden&&t&&(ot.log("[Tracing] Transaction: "+Zn.Cancelled+" -> since tab moved to the background, op: "+t.op),t.status||t.setStatus(Zn.Cancelled),t.setTag("visibilitychange","document.hidden"),t.finish())}):ot.warn("[Tracing] Could not set up background tab detection due to lack of global document")),Fr({traceFetch:s,traceXHR:c,tracingOrigins:f,shouldCreateSpanForRequest:h})},t.prototype.Rn=function(t){var n=this;if(this.Nn){var r=this.options,i=r.beforeNavigate,e=r.idleTimeout,o=r.maxTransactionDuration,u="pageload"===t.op?function(){var t=(n="sentry-trace",r=document.querySelector("meta[name="+n+"]"),r?r.getAttribute("content"):null);var n,r;if(t)return function(t){var n=t.match(nr);if(n){var r=void 0;return"1"===n[3]?r=!0:"0"===n[3]&&(r=!1),{traceId:n[1],parentSampled:r,parentSpanId:n[2]}}}(t);return}():void 0,a=s(s(s({},t),u),{trimEnd:!0}),c="function"==typeof i?i(a):a,f=void 0===c?s(s({},a),{sampled:!1}):c;!1===f.sampled&&ot.log("[Tracing] Will not send "+f.op+" transaction because of beforeNavigate.");var h=function(t,n,r,i){return lr(t,new hr(n,t,r,i),pr(n))}(this.Nn(),f,e,!0);return ot.log("[Tracing] Starting "+f.op+" transaction on scope"),h.registerBeforeFinishCallback(function(t,r){n.On.addPerformanceEntries(t),function(t,n,r){var i=r-n.startTimestamp;r&&(i>t||i<0)&&(n.setStatus(Zn.DeadlineExceeded),n.setTag("maxTransactionDurationExceeded","true"))}(1e3*o,t,r)}),h}ot.warn("[Tracing] Did not create "+t.op+" transaction because _getCurrentHub is invalid.")},t.id="BrowserTracing",t}();var Br={},Jr=z();Jr.Sentry&&Jr.Sentry.Integrations&&(Br=Jr.Sentry.Integrations);var Xr=s(s(s({},Br),tr),{BrowserTracing:Hr});return yr(),t.BrowserClient=Vn,t.Hub=Pt,t.Integrations=Xr,t.SDK_NAME="sentry.javascript.browser",t.SDK_VERSION=sn,t.Scope=At,t.Span=ar,t.Transports=Mn,t.addBreadcrumb=function(t){zt("addBreadcrumb",t)},t.addExtensionMethods=yr,t.addGlobalEventProcessor=qt,t.captureEvent=function(t){return zt("captureEvent",t)},t.captureException=captureException,t.captureMessage=function(t,n){var r;try{throw new Error(t)}catch(t){r=t}return zt("captureMessage",t,"string"==typeof n?n:void 0,s({originalException:t,syntheticException:r},"string"!=typeof n?{captureContext:n}:void 0))},t.close=function(t){var n=Jt().getClient();return n?n.close(t):jt.reject(!1)},t.configureScope=function(t){zt("configureScope",t)},t.defaultIntegrations=Kn,t.flush=function(t){var n=Jt().getClient();return n?n.flush(t):jt.reject(!1)},t.forceLoad=function(){},t.getCurrentHub=Jt,t.getHubFromCarrier=Wt,t.init=function(t){if(void 0===t&&(t={}),void 0===t.defaultIntegrations&&(t.defaultIntegrations=Kn),void 0===t.release){var n=z();n.SENTRY_RELEASE&&n.SENTRY_RELEASE.id&&(t.release=n.SENTRY_RELEASE.id)}void 0===t.autoSessionTracking&&(t.autoSessionTracking=!0),t.Mt=t.Mt||{},t.Mt.sdk={name:"sentry.javascript.browser",packages:[{name:"npm:@sentry/browser",version:sn}],version:sn},function(t,n){!0===n.debug&&ot.enable();var r=Jt(),i=new t(n);r.bindClient(i)}(Vn,t),t.autoSessionTracking&&function(){var t=z(),n=Jt(),r="complete"===document.readyState,i=!1,e=function(){i&&r&&n.endSession()},o=function(){r=!0,e(),t.removeEventListener("load",o)};n.startSession(),r||t.addEventListener("load",o);try{var u=new PerformanceObserver(function(t,n){t.getEntries().forEach(function(t){"first-contentful-paint"===t.name&&t.startTime<a&&(n.disconnect(),i=!0,e())})}),a="hidden"===document.visibilityState?0:1/0;document.addEventListener("visibilitychange",function(t){a=Math.min(a,t.timeStamp)},{once:!0}),u.observe({type:"paint",buffered:!0})}catch(t){i=!0,e()}lt({callback:function(){var t;(null===(t=Jt().getScope())||void 0===t?void 0:t.getSession())||(n.startSession(),n.endSession())},type:"history"})}()},t.lastEventId=function(){return Jt().lastEventId()},t.onLoad=function(t){t()},t.setContext=function(t,n){zt("setContext",t,n)},t.setExtra=function(t,n){zt("setExtra",t,n)},t.setExtras=function(t){zt("setExtras",t)},t.setTag=function(t,n){zt("setTag",t,n)},t.setTags=function(t){zt("setTags",t)},t.setUser=function(t){zt("setUser",t)},t.showReportDialog=function(t){void 0===t&&(t={}),t.eventId||(t.eventId=Jt().lastEventId());var n=Jt().getClient();n&&n.showReportDialog(t)},t.startTransaction=function(t,n){return zt("startTransaction",s({},t),n)},t.withScope=Vt,t.wrap=function(t){return qn(t)()},t}({});
//# sourceMappingURL=bundle.tracing.min.js.map
{"version":3,"file":"bundle.tracing.min.js","sources":["../../types/src/loglevel.ts","../../types/src/session.ts","../../types/src/severity.ts","../../types/src/status.ts","../../types/src/transaction.ts","../../utils/src/is.ts","../../utils/src/browser.ts","../../utils/src/polyfill.ts","../../utils/src/error.ts","../../utils/src/dsn.ts","../../utils/src/memo.ts","../../utils/src/stacktrace.ts","../../utils/src/string.ts","../../utils/src/object.ts","../../utils/src/node.ts","../../utils/src/misc.ts","../../utils/src/logger.ts","../../utils/src/supports.ts","../../utils/src/instrument.ts","../../utils/src/syncpromise.ts","../../utils/src/promisebuffer.ts","../../utils/src/time.ts","../../hub/src/scope.ts","../../hub/src/session.ts","../../hub/src/hub.ts","../../minimal/src/index.ts","../../core/src/api.ts","../../core/src/integration.ts","../../core/src/baseclient.ts","../../core/src/transports/noop.ts","../../core/src/basebackend.ts","../../core/src/request.ts","../../core/src/integrations/functiontostring.ts","../../core/src/version.ts","../../core/src/integrations/inboundfilters.ts","../../browser/src/tracekit.ts","../../browser/src/parsers.ts","../../browser/src/eventbuilder.ts","../../browser/src/transports/base.ts","../../browser/src/transports/fetch.ts","../../browser/src/transports/xhr.ts","../../browser/src/backend.ts","../../browser/src/helpers.ts","../../browser/src/integrations/globalhandlers.ts","../../browser/src/integrations/trycatch.ts","../../browser/src/integrations/breadcrumbs.ts","../../browser/src/integrations/linkederrors.ts","../../browser/src/integrations/useragent.ts","../../browser/src/client.ts","../../browser/src/sdk.ts","../../browser/src/index.ts","../src/spanstatus.ts","../src/utils.ts","../src/errors.ts","../src/span.ts","../src/transaction.ts","../src/idletransaction.ts","../src/hubextensions.ts","../src/browser/backgroundtab.ts","../src/browser/web-vitals/lib/bindReporter.ts","../src/browser/web-vitals/lib/getFirstHidden.ts","../src/browser/web-vitals/lib/whenInput.ts","../src/browser/web-vitals/lib/initMetric.ts","../src/browser/web-vitals/lib/generateUniqueID.ts","../src/browser/web-vitals/lib/observe.ts","../src/browser/web-vitals/lib/onHidden.ts","../src/browser/web-vitals/getLCP.ts","../src/browser/web-vitals/getTTFB.ts","../src/browser/metrics.ts","../src/browser/web-vitals/getCLS.ts","../src/browser/web-vitals/getFID.ts","../src/browser/request.ts","../src/browser/router.ts","../src/browser/browsertracing.ts","../src/index.bundle.ts","../../browser/src/version.ts","../../core/src/sdk.ts"],"sourcesContent":["/** Console logging verbosity for the SDK. */\nexport enum LogLevel {\n  /** No logs will be generated. */\n  None = 0,\n  /** Only SDK internal errors will be logged. */\n  Error = 1,\n  /** Information useful for debugging the SDK will be logged. */\n  Debug = 2,\n  /** All SDK actions will be logged. */\n  Verbose = 3,\n}\n","import { User } from './user';\n\n/**\n * @inheritdoc\n */\nexport interface Session extends SessionContext {\n  /** JSDoc */\n  update(context?: SessionContext): void;\n\n  /** JSDoc */\n  close(status?: SessionStatus): void;\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  };\n}\n\n/**\n * Session Context\n */\nexport interface SessionContext {\n  sid?: string;\n  did?: string;\n  timestamp?: number;\n  started?: number;\n  duration?: number;\n  status?: SessionStatus;\n  release?: string;\n  environment?: string;\n  userAgent?: string;\n  ipAddress?: string;\n  errors?: number;\n  user?: User | null;\n}\n\n/**\n * Session Status\n */\nexport enum SessionStatus {\n  /** JSDoc */\n  Ok = 'ok',\n  /** JSDoc */\n  Exited = 'exited',\n  /** JSDoc */\n  Crashed = 'crashed',\n  /** JSDoc */\n  Abnormal = 'abnormal',\n}\n","/** JSDoc */\n// eslint-disable-next-line import/export\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n","/** The status of an event. */\n// eslint-disable-next-line import/export\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n","import { ExtractedNodeRequestData, Primitive, WorkerLocation } from './misc';\nimport { Span, SpanContext } from './span';\n\n/**\n * Interface holding Transaction-specific properties\n */\nexport interface TransactionContext extends SpanContext {\n  /**\n   * Human-readable identifier for the transaction\n   */\n  name: string;\n\n  /**\n   * If true, sets the end timestamp of the transaction to the highest timestamp of child spans, trimming\n   * the duration of the transaction. This is useful to discard extra time in the transaction that is not\n   * accounted for in child spans, like what happens in the idle transaction Tracing integration, where we finish the\n   * transaction after a given \"idle time\" and we don't want this \"idle time\" to be part of the transaction.\n   */\n  trimEnd?: boolean;\n\n  /**\n   * If this transaction has a parent, the parent's sampling decision\n   */\n  parentSampled?: boolean;\n}\n\n/**\n * Data pulled from a `sentry-trace` header\n */\nexport type TraceparentData = Pick<TransactionContext, 'traceId' | 'parentSpanId' | 'parentSampled'>;\n\n/**\n * Transaction \"Class\", inherits Span only has `setName`\n */\nexport interface Transaction extends TransactionContext, Span {\n  /**\n   * @inheritDoc\n   */\n  spanId: string;\n\n  /**\n   * @inheritDoc\n   */\n  traceId: string;\n\n  /**\n   * @inheritDoc\n   */\n  startTimestamp: number;\n\n  /**\n   * @inheritDoc\n   */\n  tags: { [key: string]: Primitive };\n\n  /**\n   * @inheritDoc\n   */\n  data: { [key: string]: any };\n\n  /**\n   * Set the name of the transaction\n   */\n  setName(name: string): void;\n}\n\n/**\n * Context data passed by the user when starting a transaction, to be used by the tracesSampler method.\n */\nexport interface CustomSamplingContext {\n  [key: string]: any;\n}\n\n/**\n * Data passed to the `tracesSampler` function, which forms the basis for whatever decisions it might make.\n *\n * Adds default data to data provided by the user. See {@link Hub.startTransaction}\n */\nexport interface SamplingContext extends CustomSamplingContext {\n  /**\n   * Context data with which transaction being sampled was created\n   */\n  transactionContext: TransactionContext;\n\n  /**\n   * Sampling decision from the parent transaction, if any.\n   */\n  parentSampled?: boolean;\n\n  /**\n   * Object representing the URL of the current page or worker script. Passed by default in a browser or service worker\n   * context.\n   */\n  location?: WorkerLocation;\n\n  /**\n   * Object representing the incoming request to a node server. Passed by default when using the TracingHandler.\n   */\n  request?: ExtractedNodeRequestData;\n}\n\nexport type Measurements = Record<string, { value: number }>;\n\nexport enum TransactionSamplingMethod {\n  Explicit = 'explicitly_set',\n  Sampler = 'client_sampler',\n  Rate = 'client_rate',\n  Inheritance = 'inheritance',\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","import { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push(`#${elem.id}`);\n  }\n\n  // eslint-disable-next-line prefer-const\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push(`.${classes[i]}`);\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key. */\n  public user!: string;\n  /** Private authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    const { host, path, pass, port, projectId, protocol, user } = this;\n    return (\n      `${protocol}://${user}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, user, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n\n    if (projectId) {\n      const projectMatch = projectId.match(/^\\d+/);\n      if (projectMatch) {\n        projectId = projectMatch[0];\n      }\n    }\n\n    this._fromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, user });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    this.protocol = components.protocol;\n    this.user = components.user;\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'user', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(`${ERROR_MESSAGE}: ${component} missing`);\n      }\n    });\n\n    if (!this.projectId.match(/^\\d+$/)) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid projectId ${this.projectId}`);\n    }\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid protocol ${this.protocol}`);\n    }\n\n    if (this.port && isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid port ${this.port}`);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n","const defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n","import { isRegExp, isString } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    // eslint-disable-next-line no-param-reassign\n    colno = ll;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName } from './stacktrace';\nimport { truncate } from './string';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacementFactory A function that should be used to wrap a given method, returning the wrapped method which\n * will be substituted in for `source[name]`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      [key: string]: any;\n      stack: string | undefined;\n      message: string;\n      name: string;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    source.type = event.type;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      source.detail = event.detail;\n    }\n\n    for (const i in event) {\n      if (Object.prototype.hasOwnProperty.call(event, i)) {\n        source[i] = event;\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/**\n * Transform any non-primitive, BigInt, or Symbol-type value into a string. Acts as a no-op on strings, numbers,\n * booleans, null, and undefined.\n *\n * @param value The value to stringify\n * @returns For non-primitive, BigInt, and Symbol-type values, a string denoting the value's type, type and value, or\n *  type and `description` property, respectively. For non-BigInt, non-Symbol primitives, returns the original value,\n *  unchanged.\n */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${getFunctionName(value)}]`;\n  }\n\n  // symbols and bigints are considered primitives by TS, but aren't natively JSON-serilaizable\n\n  if (typeof value === 'symbol') {\n    return `[${String(value)}]`;\n  }\n\n  if (typeof value === 'bigint') {\n    return `[BigInt: ${String(value)}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // If value implements `toJSON` method, call it and return early\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input: any, depth?: number): any {\n  try {\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const obj = val as { [key: string]: any };\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(obj)) {\n      if (typeof obj[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(obj[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtractedNodeRequestData } from '@sentry/types';\n\nimport { isString } from './is';\nimport { normalize } from './object';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/** Default request keys that'll be used to extract data from the request */\nconst DEFAULT_REQUEST_KEYS = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\n\n/**\n * Normalizes data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param keys An optional array of keys to include in the normalized data. Defaults to DEFAULT_REQUEST_KEYS if not\n * provided.\n * @returns An object containing normalized request data\n */\nexport function extractNodeRequestData(\n  req: { [key: string]: any },\n  keys: string[] = DEFAULT_REQUEST_KEYS,\n): ExtractedNodeRequestData {\n  // make sure we can safely use dynamicRequire below\n  if (!isNodeEnv()) {\n    throw new Error(\"Can't get node request data outside of a node environment\");\n  }\n\n  const requestData: { [key: string]: any } = {};\n\n  // headers:\n  //   node, express: req.headers\n  //   koa: req.header\n  const headers = (req.headers || req.header || {}) as {\n    host?: string;\n    cookie?: string;\n  };\n  // method:\n  //   node, express, koa: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node: <n/a>\n  //   express, koa: req.protocol\n  const protocol =\n    req.protocol === 'https' || req.secure || ((req.socket || {}) as { encrypted?: boolean }).encrypted\n      ? 'https'\n      : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa: req.url\n  const originalUrl = (req.originalUrl || req.url || '') as string;\n  // absolute url\n  const absoluteUrl = `${protocol}://${host}${originalUrl}`;\n\n  keys.forEach(key => {\n    switch (key) {\n      case 'headers':\n        requestData.headers = headers;\n        break;\n      case 'method':\n        requestData.method = method;\n        break;\n      case 'url':\n        requestData.url = absoluteUrl;\n        break;\n      case 'cookies':\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware): req.cookies\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.cookies = req.cookies || dynamicRequire(module, 'cookie').parse(headers.cookie || '');\n        break;\n      case 'query_string':\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = dynamicRequire(module, 'url').parse(originalUrl || '', false).query;\n        break;\n      case 'data':\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   node, express, koa: req.body\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      default:\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req as { [key: string]: any })[key];\n        }\n    }\n  });\n\n  return requestData;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === `function`) {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\n/** Object describing handler that will be triggered for a given `type` of instrumentation */\ninterface InstrumentHandler {\n  type: InstrumentHandlerType;\n  callback: InstrumentHandlerCallback;\n}\ntype InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\ntype InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      logger.warn('unknown instrumentation type:', type);\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler: InstrumentHandler): void {\n  if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n    return;\n  }\n  handlers[handler.type] = handlers[handler.type] || [];\n  (handlers[handler.type] as InstrumentHandlerCallback[]).push(handler.callback);\n  instrument(handler.type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      logger.error(\n        `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(\n          handler,\n        )}\\nError: ${e}`,\n      );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function(originalConsoleLevel: () => any): Function {\n      return function(...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function(originalFetch: () => void): () => void {\n    return function(...args: any[]): void {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  // Poor man's implementation of ES6 `Map`, tracking and keeping in sync key and value separately.\n  const requestKeys: XMLHttpRequest[] = [];\n  const requestValues: Array<any>[] = [];\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function(originalOpen: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function(): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            if (xhr.__sentry_xhr__) {\n              xhr.__sentry_xhr__.status_code = xhr.status;\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          try {\n            const requestPos = requestKeys.indexOf(xhr);\n            if (requestPos !== -1) {\n              // Make sure to pop both key and value to keep it in sync.\n              requestKeys.splice(requestPos);\n              const args = requestValues.splice(requestPos)[0];\n              if (xhr.__sentry_xhr__ && args[0] !== undefined) {\n                xhr.__sentry_xhr__.body = args[0] as XHRSendInput;\n              }\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function(original: WrappedFunction): Function {\n          return function(...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function(originalSend: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      requestKeys.push(this);\n      requestValues.push(args);\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function(this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      return oldOnPopState.apply(this, args);\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function(this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n  // to the document. Do this before we instrument addEventListener.\n  global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n  global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n\n  // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (\n      eventName: string,\n      fn: EventListenerOrEventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ) => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerOrEventListenerObject, capture?: boolean, secure?: boolean) => void {\n        if (fn && (fn as EventListenerObject).handleEvent) {\n          if (eventName === 'click') {\n            fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n              return function(this: any, event: Event): (event: Event) => void {\n                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                return innerOriginal.call(this, event);\n              };\n            });\n          }\n          if (eventName === 'keypress') {\n            fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n              return function(this: any, event: Event): (event: Event) => void {\n                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                return innerOriginal.call(this, event);\n              };\n            });\n          }\n        } else {\n          if (eventName === 'click') {\n            domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n          }\n          if (eventName === 'keypress') {\n            keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n          }\n        }\n\n        return original.call(this, eventName, fn, options);\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      original: () => void,\n    ): (\n      this: any,\n      eventName: string,\n      fn: EventListenerOrEventListenerObject,\n      options?: boolean | EventListenerOptions,\n    ) => () => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        try {\n          original.call(this, eventName, ((fn as unknown) as WrappedFunction).__sentry_wrapped__, options);\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return original.call(this, eventName, fn, options);\n      };\n    });\n  });\n}\n\nconst debounceDuration: number = 1000;\nlet debounceTimer: number = 0;\nlet keypressTimeout: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction domEventHandler(name: string, handler: Function, debounce: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // reset keypress timeout; e.g. triggering a 'click' after\n    // a 'keypress' will reset the keypress debounce so that a new\n    // set of keypresses can be recorded\n    keypressTimeout = undefined;\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors). Ignore if we've\n    // already captured the event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    lastCapturedEvent = event;\n\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n\n    if (debounce) {\n      debounceTimer = setTimeout(() => {\n        handler({ event, name });\n      });\n    } else {\n      handler({ event, name });\n    }\n  };\n}\n\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\nfunction keypressEventHandler(handler: Function): (event: Event) => void {\n  // TODO: if somehow user switches keypress target before\n  //       debounce timeout is triggered, we will only capture\n  //       a single breadcrumb from the FIRST target (acceptable?)\n  return (event: Event): void => {\n    let target;\n\n    try {\n      target = event.target;\n    } catch (e) {\n      // just accessing event properties can throw an exception in some rare circumstances\n      // see: https://github.com/getsentry/raven-js/issues/838\n      return;\n    }\n\n    const tagName = target && (target as HTMLElement).tagName;\n\n    // only consider keypress events on actual input elements\n    // this will disregard keypresses targeting body (e.g. tabbing\n    // through elements, hotkeys, etc)\n    if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !(target as HTMLElement).isContentEditable)) {\n      return;\n    }\n\n    // record first keypress in a series, but ignore subsequent\n    // keypresses until debounce clears\n    if (!keypressTimeout) {\n      domEventHandler('input', handler)(event);\n    }\n    clearTimeout(keypressTimeout);\n\n    keypressTimeout = (setTimeout(() => {\n      keypressTimeout = undefined;\n    }, debounceDuration) as any) as number;\n  };\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function(msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function(e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<PromiseLike<T>> = [];\n\n  public constructor(protected _limit?: number) {}\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns The original promise.\n   */\n  public add(task: PromiseLike<T>): PromiseLike<T> {\n    if (!this.isReady()) {\n      return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    task\n      .then(() => this.remove(task))\n      .then(null, () =>\n        this.remove(task).then(null, () => {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  public remove(task: PromiseLike<T>): PromiseLike<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n  public drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>(resolve => {\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      SyncPromise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .then(null, () => {\n          resolve(true);\n        });\n    });\n  }\n}\n","import { getGlobalObject } from './misc';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance) {\n    return undefined;\n  }\n  if (performance.timeOrigin) {\n    return performance.timeOrigin;\n  }\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  return (performance.timing && performance.timing.navigationStart) || Date.now();\n})();\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Severity,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, getGlobalObject, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n\nimport { Session } from './session';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive } = {};\n\n  /** Extra */\n  protected _extra: Extras = {};\n\n  /** Contexts */\n  protected _contexts: Contexts = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      this._session.update({ user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Can be removed in major version.\n   * @deprecated in favor of {@link this.setTransactionName}\n   */\n  public setTransaction(name?: string): this {\n    return this.setTransactionName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // often, this span will be a transaction, but it's not guaranteed to be\n    const span = this.getSpan() as undefined | (Span & { spanRecorder: { spans: Span[] } });\n\n    // try it the new way first\n    if (span?.transaction) {\n      return span?.transaction;\n    }\n\n    // fallback to the old way (known bug: this only finds transactions with sampled = true)\n    if (span?.spanRecorder?.spans[0]) {\n      return span.spanRecorder.spans[0] as Transaction;\n    }\n\n    // neither way found a transaction\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, mergedBreadcrumb].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, mergedBreadcrumb];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relys on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction?.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as PromiseLike<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access  */\n  const global = getGlobalObject<any>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","import { Session as SessionInterface, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, uuid4 } from '@sentry/utils';\n\n/**\n * @inheritdoc\n */\nexport class Session implements SessionInterface {\n  public userAgent?: string;\n  public errors: number = 0;\n  public release?: string;\n  public sid: string = uuid4();\n  public did?: string;\n  public timestamp: number = Date.now();\n  public started: number = Date.now();\n  public duration: number = 0;\n  public status: SessionStatus = SessionStatus.Ok;\n  public environment?: string;\n  public ipAddress?: string;\n\n  constructor(context?: Omit<SessionContext, 'started' | 'status'>) {\n    if (context) {\n      this.update(context);\n    }\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  update(context: SessionContext = {}): void {\n    if (context.user) {\n      if (context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || Date.now();\n\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.did) {\n      this.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      this.duration = this.timestamp - this.started;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  }\n\n  /** JSDoc */\n  close(status?: Exclude<SessionStatus, SessionStatus.Ok>): void {\n    if (status) {\n      this.update({ status });\n    } else if (this.status === SessionStatus.Ok) {\n      this.update({ status: SessionStatus.Exited });\n    } else {\n      this.update();\n    }\n  }\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  } {\n    return dropUndefinedKeys({\n      sid: `${this.sid}`,\n      init: true,\n      started: new Date(this.started).toISOString(),\n      timestamp: new Date(this.timestamp).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? `${this.did}` : undefined,\n      duration: this.duration,\n      attrs: dropUndefinedKeys({\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent,\n      }),\n    });\n  }\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  SessionContext,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, DomainAsCarrier, Layer } from './interfaces';\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    this.bindClient(client);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    // End existing session if there's one\n    this.endSession();\n\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...context,\n    });\n    if (scope) {\n      scope.setSession(session);\n    }\n    return session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      session.close();\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n      scope.setSession();\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n *\n * @returns The domain, or undefined if there is no active domain\n */\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const activeDomain = getActiveDomain();\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n","import { getCurrentHub, Hub, Scope } from '@sentry/hub';\nimport {\n  Breadcrumb,\n  CaptureContext,\n  CustomSamplingContext,\n  Event,\n  Extra,\n  Extras,\n  Primitive,\n  Severity,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\n\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction callOnHub<T>(method: string, ...args: any[]): T {\n  const hub = getCurrentHub();\n  if (hub && hub[method as keyof Hub]) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (hub[method as keyof Hub] as any)(...args);\n  }\n  throw new Error(`No hub defined or ${method} was not found on the hub, please open a bug report.`);\n}\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception: any, captureContext?: CaptureContext): string {\n  let syntheticException: Error;\n  try {\n    throw new Error('Sentry syntheticException');\n  } catch (exception) {\n    syntheticException = exception as Error;\n  }\n  return callOnHub('captureException', exception, {\n    captureContext,\n    originalException: exception,\n    syntheticException,\n  });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message: string, captureContext?: CaptureContext | Severity): string {\n  let syntheticException: Error;\n  try {\n    throw new Error(message);\n  } catch (exception) {\n    syntheticException = exception as Error;\n  }\n\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n\n  return callOnHub('captureMessage', message, level, {\n    originalException: message,\n    syntheticException,\n    ...context,\n  });\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event: Event): string {\n  return callOnHub('captureEvent', event);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback: (scope: Scope) => void): void {\n  callOnHub<void>('configureScope', callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb): void {\n  callOnHub<void>('addBreadcrumb', breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name: string, context: { [key: string]: any } | null): void {\n  callOnHub<void>('setContext', name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): void {\n  callOnHub<void>('setExtras', extras);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): void {\n  callOnHub<void>('setTags', tags);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): void {\n  callOnHub<void>('setExtra', key, extra);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): void {\n  callOnHub<void>('setTag', key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): void {\n  callOnHub<void>('setUser', user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback: (scope: Scope) => void): void {\n  callOnHub<void>('withScope', callback);\n}\n\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _callOnClient(method: string, ...args: any[]): void {\n  callOnHub<void>('_invokeClient', method, ...args);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  return callOnHub('startTransaction', { ...context }, customSamplingContext);\n}\n","import { DsnLike, SdkMetadata } from '@sentry/types';\nimport { Dsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/**\n * Helper class to provide urls, headers and metadata that can be used to form\n * different types of requests to Sentry endpoints.\n * Supports both envelopes and regular event requests.\n **/\nexport class API {\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: Dsn;\n  /** Create a new instance of API */\n  public constructor(public dsn: DsnLike, public metadata: SdkMetadata = {}) {\n    this._dsnObject = new Dsn(dsn);\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): Dsn {\n    return this._dsnObject;\n  }\n\n  /** Returns the prefix to construct Sentry ingestion API endpoints. */\n  public getBaseApiEndpoint(): string {\n    const dsn = this._dsnObject;\n    const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n    const port = dsn.port ? `:${dsn.port}` : '';\n    return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n  }\n\n  /** Returns the store endpoint URL. */\n  public getStoreEndpoint(): string {\n    return this._getIngestEndpoint('store');\n  }\n\n  /**\n   * Returns the store endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    return `${this.getStoreEndpoint()}?${this._encodedAuth()}`;\n  }\n\n  /**\n   * Returns the envelope endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getEnvelopeEndpointWithUrlEncodedAuth(): string {\n    return `${this._getEnvelopeEndpoint()}?${this._encodedAuth()}`;\n  }\n\n  /** Returns only the path component for the store endpoint. */\n  public getStoreEndpointPath(): string {\n    const dsn = this._dsnObject;\n    return `${dsn.path ? `/${dsn.path}` : ''}/api/${dsn.projectId}/store/`;\n  }\n\n  /**\n   * Returns an object that can be used in request headers.\n   * This is needed for node and the old /store endpoint in sentry\n   */\n  public getRequestHeaders(clientName: string, clientVersion: string): { [key: string]: string } {\n    // CHANGE THIS to use metadata but keep clientName and clientVersion compatible\n    const dsn = this._dsnObject;\n    const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n    header.push(`sentry_client=${clientName}/${clientVersion}`);\n    header.push(`sentry_key=${dsn.user}`);\n    if (dsn.pass) {\n      header.push(`sentry_secret=${dsn.pass}`);\n    }\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', '),\n    };\n  }\n\n  /** Returns the url to the report dialog endpoint. */\n  public getReportDialogEndpoint(\n    dialogOptions: {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      user?: { name?: string; email?: string };\n    } = {},\n  ): string {\n    const dsn = this._dsnObject;\n    const endpoint = `${this.getBaseApiEndpoint()}embed/error-page/`;\n\n    const encodedOptions = [];\n    encodedOptions.push(`dsn=${dsn.toString()}`);\n    for (const key in dialogOptions) {\n      if (key === 'dsn') {\n        continue;\n      }\n\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n        if (dialogOptions.user.name) {\n          encodedOptions.push(`name=${encodeURIComponent(dialogOptions.user.name)}`);\n        }\n        if (dialogOptions.user.email) {\n          encodedOptions.push(`email=${encodeURIComponent(dialogOptions.user.email)}`);\n        }\n      } else {\n        encodedOptions.push(`${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`);\n      }\n    }\n    if (encodedOptions.length) {\n      return `${endpoint}?${encodedOptions.join('&')}`;\n    }\n\n    return endpoint;\n  }\n\n  /** Returns the envelope endpoint URL. */\n  private _getEnvelopeEndpoint(): string {\n    return this._getIngestEndpoint('envelope');\n  }\n\n  /** Returns the ingest API endpoint for target. */\n  private _getIngestEndpoint(target: 'store' | 'envelope'): string {\n    const base = this.getBaseApiEndpoint();\n    const dsn = this._dsnObject;\n    return `${base}${dsn.projectId}/${target}/`;\n  }\n\n  /** Returns a URL-encoded string with auth config suitable for a query string. */\n  private _encodedAuth(): string {\n    const dsn = this._dsnObject;\n    const auth = {\n      // We send only the minimum set of required information. See\n      // https://github.com/getsentry/sentry-javascript/issues/2572.\n      sentry_key: dsn.user,\n      sentry_version: SENTRY_API_VERSION,\n    };\n    return urlEncode(auth);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport interface IntegrationIndex {\n  [key: string]: Integration;\n}\n\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  const userIntegrations = options.integrations;\n  let integrations: Integration[] = [];\n  if (Array.isArray(userIntegrations)) {\n    const userIntegrationsNames = userIntegrations.map(i => i.name);\n    const pickedIntegrationsNames: string[] = [];\n\n    // Leave only unique default integrations, that were not overridden with provided user integrations\n    defaultIntegrations.forEach(defaultIntegration => {\n      if (\n        userIntegrationsNames.indexOf(defaultIntegration.name) === -1 &&\n        pickedIntegrationsNames.indexOf(defaultIntegration.name) === -1\n      ) {\n        integrations.push(defaultIntegration);\n        pickedIntegrationsNames.push(defaultIntegration.name);\n      }\n    });\n\n    // Don't add same user integration twice\n    userIntegrations.forEach(userIntegration => {\n      if (pickedIntegrationsNames.indexOf(userIntegration.name) === -1) {\n        integrations.push(userIntegration);\n        pickedIntegrationsNames.push(userIntegration.name);\n      }\n    });\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  } else {\n    integrations = [...defaultIntegrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  const integrationsNames = integrations.map(i => i.name);\n  const alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/** Setup given integration */\nexport function setupIntegration(integration: Integration): void {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(`Integration installed: ${integration.name}`);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations<O extends Options>(options: O): IntegrationIndex {\n  const integrations: IntegrationIndex = {};\n  getIntegrationsToSetup(options).forEach(integration => {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  return integrations;\n}\n","/* eslint-disable max-lines */\nimport { Scope, Session } from '@sentry/hub';\nimport {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  Options,\n  SessionStatus,\n  Severity,\n} from '@sentry/types';\nimport {\n  dateTimestampInSeconds,\n  Dsn,\n  isPrimitive,\n  isThenable,\n  logger,\n  normalize,\n  SentryError,\n  SyncPromise,\n  truncate,\n  uuid4,\n} from '@sentry/utils';\n\nimport { Backend, BackendClass } from './basebackend';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<B extends Backend, O extends Options> implements Client<O> {\n  /**\n   * The backend used to physically interact in the environment. Usually, this\n   * will correspond to the client. When composing SDKs, however, the Backend\n   * from the root SDK will be used.\n   */\n  protected readonly _backend: B;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: Dsn;\n\n  /** Array of used integrations. */\n  protected _integrations: IntegrationIndex = {};\n\n  /** Number of call being processed */\n  protected _processing: number = 0;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  protected constructor(backendClass: BackendClass<B, O>, options: O) {\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._getBackend()\n        .eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this._getBackend().eventFromMessage(String(message), level, hint)\n      : this._getBackend().eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!session.release) {\n      logger.warn('Discarded session because of missing release');\n    } else {\n      this._sendSession(session);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    return this._isClientProcessing(timeout).then(ready => {\n      return this._getBackend()\n        .getTransport()\n        .close(timeout)\n        .then(transportFlushed => ready && transportFlushed);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n  public setupIntegrations(): void {\n    if (this._isEnabled()) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    let userAgent;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    const user = event.user;\n    if (!session.userAgent) {\n      const headers = event.request ? event.request.headers : {};\n      for (const key in headers) {\n        if (key.toLowerCase() === 'user-agent') {\n          userAgent = headers[key];\n          break;\n        }\n      }\n    }\n\n    session.update({\n      ...(crashed && { status: SessionStatus.Crashed }),\n      user,\n      userAgent,\n      errors: session.errors + Number(errored || crashed),\n    });\n  }\n\n  /** Deliver captured session to Sentry */\n  protected _sendSession(session: Session): void {\n    this._getBackend().sendSession(session);\n  }\n\n  /** Waits for the client to be done with processing. */\n  protected _isClientProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._processing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Returns the current backend. */\n  protected _getBackend(): B {\n    return this._backend;\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    const { normalizeDepth = 3 } = this.getOptions();\n    const prepared: Event = {\n      ...event,\n      event_id: event.event_id || (hint && hint.event_id ? hint.event_id : uuid4()),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint && hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = SyncPromise.resolve<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n  protected _normalizeEvent(event: Event | null, depth: number): Event | null {\n    if (!event) {\n      return null;\n    }\n\n    const normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth),\n      }),\n    };\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      normalized.contexts.trace = event.contexts.trace;\n    }\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n  protected _applyClientOptions(event: Event): void {\n    const options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n   */\n  protected _applyIntegrationsMetadata(event: Event): void {\n    const sdkInfo = event.sdk;\n    const integrationsArray = Object.keys(this._integrations);\n    if (sdkInfo && integrationsArray.length > 0) {\n      sdkInfo.integrations = integrationsArray;\n    }\n  }\n\n  /**\n   * Tells the backend to send this event\n   * @param event The Sentry event to send\n   */\n  protected _sendEvent(event: Event): void {\n    this._getBackend().sendEvent(event);\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        logger.error(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<Event> {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject(new SentryError('SDK not enabled, will not send event.'));\n    }\n\n    const isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      return SyncPromise.reject(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, scope, hint)\n      .then(prepared => {\n        if (prepared === null) {\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        const isInternalException = hint && hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        const beforeSendResult = beforeSend(prepared, hint);\n        if (typeof beforeSendResult === 'undefined') {\n          throw new SentryError('`beforeSend` method has to return `null` or a valid event.');\n        } else if (isThenable(beforeSendResult)) {\n          return (beforeSendResult as PromiseLike<Event | null>).then(\n            event => event,\n            e => {\n              throw new SentryError(`beforeSend rejected with ${e}`);\n            },\n          );\n        }\n        return beforeSendResult;\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        const session = scope && scope.getSession && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this._sendEvent(processedEvent);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason as Error,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._processing += 1;\n    promise.then(\n      value => {\n        this._processing -= 1;\n        return value;\n      },\n      reason => {\n        this._processing -= 1;\n        return reason;\n      },\n    );\n  }\n}\n","import { Event, Response, Status, Transport } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\n/** Noop transport */\nexport class NoopTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    return SyncPromise.resolve({\n      reason: `NoopTransport: Event has been skipped because no Dsn is configured.`,\n      status: Status.Skipped,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(_?: number): PromiseLike<boolean> {\n    return SyncPromise.resolve(true);\n  }\n}\n","import { Event, EventHint, Options, Session, Severity, Transport } from '@sentry/types';\nimport { logger, SentryError } from '@sentry/utils';\n\nimport { NoopTransport } from './transports/noop';\n\n/**\n * Internal platform-dependent Sentry SDK Backend.\n *\n * While {@link Client} contains business logic specific to an SDK, the\n * Backend offers platform specific implementations for low-level operations.\n * These are persisting and loading information, sending events, and hooking\n * into the environment.\n *\n * Backends receive a handle to the Client in their constructor. When a\n * Backend automatically generates events, it must pass them to\n * the Client for validation and processing first.\n *\n * Usually, the Client will be of corresponding type, e.g. NodeBackend\n * receives NodeClient. However, higher-level SDKs can choose to instantiate\n * multiple Backends and delegate tasks between them. In this case, an event\n * generated by one backend might very well be sent by another one.\n *\n * The client also provides access to options via {@link Client.getOptions}.\n * @hidden\n */\nexport interface Backend {\n  /** Creates a {@link Event} from an exception. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  eventFromException(exception: any, hint?: EventHint): PromiseLike<Event>;\n\n  /** Creates a {@link Event} from a plain message. */\n  eventFromMessage(message: string, level?: Severity, hint?: EventHint): PromiseLike<Event>;\n\n  /** Submits the event to Sentry */\n  sendEvent(event: Event): void;\n\n  /** Submits the session to Sentry */\n  sendSession(session: Session): void;\n\n  /**\n   * Returns the transport that is used by the backend.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   *\n   * @returns The transport.\n   */\n  getTransport(): Transport;\n}\n\n/**\n * A class object that can instantiate Backend objects.\n * @hidden\n */\nexport type BackendClass<B extends Backend, O extends Options> = new (options: O) => B;\n\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nexport abstract class BaseBackend<O extends Options> implements Backend {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** Cached transport used internally. */\n  protected _transport: Transport;\n\n  /** Creates a new backend instance. */\n  public constructor(options: O) {\n    this._options = options;\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n    this._transport = this._setupTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: Severity, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): void {\n    this._transport.sendEvent(event).then(null, reason => {\n      logger.error(`Error while sending event: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): void {\n    if (!this._transport.sendSession) {\n      logger.warn(\"Dropping session because custom transport doesn't implement sendSession\");\n      return;\n    }\n\n    this._transport.sendSession(session).then(null, reason => {\n      logger.error(`Error while sending session: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._transport;\n  }\n\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n  protected _setupTransport(): Transport {\n    return new NoopTransport();\n  }\n}\n","import { Event, SdkInfo, SentryRequest, Session } from '@sentry/types';\n\nimport { API } from './api';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(api: API): SdkInfo | undefined {\n  if (!api.metadata || !api.metadata.sdk) {\n    return;\n  }\n  const { name, version } = api.metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n\n  event.sdk = event.sdk || {\n    name: sdkInfo.name,\n    version: sdkInfo.version,\n  };\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates a SentryRequest from an event. */\nexport function sessionToSentryRequest(session: Session, api: API): SentryRequest {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const envelopeHeaders = JSON.stringify({\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n  });\n  const itemHeaders = JSON.stringify({\n    type: 'session',\n  });\n\n  return {\n    body: `${envelopeHeaders}\\n${itemHeaders}\\n${JSON.stringify(session)}`,\n    type: 'session',\n    url: api.getEnvelopeEndpointWithUrlEncodedAuth(),\n  };\n}\n\n/** Creates a SentryRequest from an event. */\nexport function eventToSentryRequest(event: Event, api: API): SentryRequest {\n  // since JS has no Object.prototype.pop()\n  const { __sentry_samplingMethod: samplingMethod, __sentry_sampleRate: sampleRate, ...otherTags } = event.tags || {};\n  event.tags = otherTags;\n\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const eventType = event.type || 'event';\n  const useEnvelope = eventType === 'transaction';\n\n  const req: SentryRequest = {\n    body: JSON.stringify(sdkInfo ? enhanceEventWithSdkInfo(event, api.metadata.sdk) : event),\n    type: eventType,\n    url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth(),\n  };\n\n  // https://develop.sentry.dev/sdk/envelopes/\n\n  // Since we don't need to manipulate envelopes nor store them, there is no\n  // exported concept of an Envelope with operations including serialization and\n  // deserialization. Instead, we only implement a minimal subset of the spec to\n  // serialize events inline here.\n  if (useEnvelope) {\n    const envelopeHeaders = JSON.stringify({\n      event_id: event.event_id,\n      sent_at: new Date().toISOString(),\n      ...(sdkInfo && { sdk: sdkInfo }),\n    });\n    const itemHeaders = JSON.stringify({\n      type: event.type,\n\n      // TODO: Right now, sampleRate may or may not be defined (it won't be in the cases of inheritance and\n      // explicitly-set sampling decisions). Are we good with that?\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n\n      // The content-type is assumed to be 'application/json' and not part of\n      // the current spec for transaction items, so we don't bloat the request\n      // body with it.\n      //\n      // content_type: 'application/json',\n      //\n      // The length is optional. It must be the number of bytes in req.Body\n      // encoded as UTF-8. Since the server can figure this out and would\n      // otherwise refuse events that report the length incorrectly, we decided\n      // not to send the length to avoid problems related to reporting the wrong\n      // size and to reduce request body size.\n      //\n      // length: new TextEncoder().encode(req.body).length,\n    });\n    // The trailing newline is optional. We intentionally don't send it to avoid\n    // sending unnecessary bytes.\n    //\n    // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n    const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}`;\n    req.body = envelope;\n  }\n\n  return req;\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry_original__ || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","export const SDK_VERSION = '6.0.0';\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n\n  /** @deprecated use {@link InboundFiltersOptions.allowUrls} instead. */\n  whitelistUrls: Array<string | RegExp>;\n  /** @deprecated use {@link InboundFiltersOptions.denyUrls} instead. */\n  blacklistUrls: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isDeniedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.denyUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isAllowedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.allowUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: Partial<InboundFiltersOptions> = {}): Partial<InboundFiltersOptions> {\n    return {\n      allowUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.whitelistUrls || []),\n        ...(this._options.allowUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.whitelistUrls || []),\n        ...(clientOptions.allowUrls || []),\n      ],\n      denyUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.blacklistUrls || []),\n        ...(this._options.denyUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.blacklistUrls || []),\n        ...(clientOptions.denyUrls || []),\n      ],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n","/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/**\n * An object representing a single stack frame.\n * {Object} StackFrame\n * {string} url The JavaScript or HTML file URL.\n * {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * {string[]?} args The arguments passed to the function, if known.\n * {number=} line The line number, if known.\n * {number=} column The column number, if known.\n * {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number | null;\n  column: number | null;\n}\n\n/**\n * An object representing a JavaScript stack trace.\n * {Object} StackTrace\n * {string} name The name of the thrown exception.\n * {string} message The exception error message.\n * {TraceKit.StackFrame[]} stack An array of stack frames.\n */\nexport interface StackTrace {\n  name: string;\n  message: string;\n  mechanism?: string;\n  stack: StackFrame[];\n  failed?: boolean;\n}\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nconst geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nconst chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function computeStackTrace(ex: any): StackTrace {\n  let stack = null;\n  let popSize = 0;\n\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      popSize = ex.framesToPop;\n    } else if (reactMinifiedRegexp.test(ex.message)) {\n      popSize = 1;\n    }\n  }\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\nfunction computeStackTraceFromStackProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  const stack = [];\n  const lines = ex.stack.split('\\n');\n  let isEval;\n  let submatch;\n  let parts;\n  let element;\n\n  for (let i = 0; i < lines.length; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n        // prefix here seems like the quickest solution for now.\n        url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || `eval`;\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = (ex.columnNumber as number) + 1;\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction computeStackTraceFromStacktraceProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  }\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace;\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  const lines = stacktrace.split('\\n');\n  const stack = [];\n  let parts;\n\n  for (let line = 0; line < lines.length; line += 2) {\n    let element = null;\n    if ((parts = opera10Regex.exec(lines[line]))) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null,\n      };\n    } else if ((parts = opera11Regex.exec(lines[line]))) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2],\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace: StackTrace, popSize: number): StackTrace {\n  try {\n    return {\n      ...stacktrace,\n      stack: stacktrace.stack.slice(popSize),\n    };\n  } catch (e) {\n    return stacktrace;\n  }\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractMessage(ex: any): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n","import { Event, Exception, StackFrame } from '@sentry/types';\nimport { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\n\nimport { computeStackTrace, StackFrame as TraceKitStackFrame, StackTrace as TraceKitStackTrace } from './tracekit';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace: TraceKitStackTrace): Exception {\n  const frames = prepareFramesForEvent(stacktrace.stack);\n\n  const exception: Exception = {\n    type: stacktrace.name,\n    value: stacktrace.message,\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  rejection?: boolean,\n): Event {\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            rejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace: TraceKitStackTrace): Event {\n  const exception = exceptionFromStacktrace(stacktrace);\n\n  return {\n    exception: {\n      values: [exception],\n    },\n  };\n}\n\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack: TraceKitStackFrame[]): StackFrame[] {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].func || '';\n  const lastFrameFunction = localStack[localStack.length - 1].func || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(\n      (frame: TraceKitStackFrame): StackFrame => ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n      }),\n    )\n    .reverse();\n}\n","import { Event, EventHint, Options, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromException(options: Options, exception: unknown, hint?: EventHint): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(exception, syntheticException, {\n    attachStacktrace: options.attachStacktrace,\n  });\n  addExceptionMechanism(event, {\n    handled: true,\n    type: 'generic',\n  });\n  event.level = Severity.Error;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return SyncPromise.resolve(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  options: Options,\n  message: string,\n  level: Severity = Severity.Info,\n  hint?: EventHint,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(message, syntheticException, {\n    attachStacktrace: options.attachStacktrace,\n  });\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return SyncPromise.resolve(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  exception: unknown,\n  syntheticException?: Error,\n  options: {\n    rejection?: boolean;\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    // eslint-disable-next-line no-param-reassign\n    exception = errorEvent.error;\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n    // then we just extract the name, code, and message, as they don't provide anything else\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n    const domException = exception as DOMException;\n    const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n    const message = domException.message ? `${name}: ${domException.message}` : name;\n\n    event = eventFromString(message, syntheticException, options);\n    addExceptionTypeValue(event, message);\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception as Error)) {\n    // we have a real Error object, do nothing\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it is plain Object or Event, serialize it manually and extract options\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(exception as string, syntheticException, options);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  input: string,\n  syntheticException?: Error,\n  options: {\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (options.attachStacktrace && syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n","import { API } from '@sentry/core';\nimport {\n  Event,\n  Response as SentryResponse,\n  SentryRequestType,\n  Status,\n  Transport,\n  TransportOptions,\n} from '@sentry/types';\nimport { logger, parseRetryAfterHeader, PromiseBuffer, SentryError } from '@sentry/utils';\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @deprecated\n   */\n  public url: string;\n\n  /** Helper to get Sentry API endpoints. */\n  protected readonly _api: API;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<SentryResponse> = new PromiseBuffer(30);\n\n  /** Locks transport after receiving rate limits in a response */\n  protected readonly _rateLimits: Record<string, Date> = {};\n\n  public constructor(public options: TransportOptions) {\n    this._api = new API(options.dsn, options._metadata);\n    // eslint-disable-next-line deprecation/deprecation\n    this.url = this._api.getStoreEndpointWithUrlEncodedAuth();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<SentryResponse> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n\n  /**\n   * Handle Sentry repsonse for promise-based transports.\n   */\n  protected _handleResponse({\n    requestType,\n    response,\n    headers,\n    resolve,\n    reject,\n  }: {\n    requestType: SentryRequestType;\n    response: Response | XMLHttpRequest;\n    headers: Record<string, string | null>;\n    resolve: (value?: SentryResponse | PromiseLike<SentryResponse> | null | undefined) => void;\n    reject: (reason?: unknown) => void;\n  }): void {\n    const status = Status.fromHttpCode(response.status);\n    /**\n     * \"The name is case-insensitive.\"\n     * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n     */\n    const limited = this._handleRateLimit(headers);\n    if (limited) logger.warn(`Too many requests, backing off until: ${this._disabledUntil(requestType)}`);\n\n    if (status === Status.Success) {\n      resolve({ status });\n      return;\n    }\n\n    reject(response);\n  }\n\n  /**\n   * Gets the time that given category is disabled until for rate limiting\n   */\n  protected _disabledUntil(category: string): Date {\n    return this._rateLimits[category] || this._rateLimits.all;\n  }\n\n  /**\n   * Checks if a category is rate limited\n   */\n  protected _isRateLimited(category: string): boolean {\n    return this._disabledUntil(category) > new Date(Date.now());\n  }\n\n  /**\n   * Sets internal _rateLimits from incoming headers. Returns true if headers contains a non-empty rate limiting header.\n   */\n  protected _handleRateLimit(headers: Record<string, string | null>): boolean {\n    const now = Date.now();\n    const rlHeader = headers['x-sentry-rate-limits'];\n    const raHeader = headers['retry-after'];\n\n    if (rlHeader) {\n      // rate limit headers are of the form\n      //     <header>,<header>,..\n      // where each <header> is of the form\n      //     <retry_after>: <categories>: <scope>: <reason_code>\n      // where\n      //     <retry_after> is a delay in ms\n      //     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n      //         <category>;<category>;...\n      //     <scope> is what's being limited (org, project, or key) - ignored by SDK\n      //     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n      for (const limit of rlHeader.trim().split(',')) {\n        const parameters = limit.split(':', 2);\n        const headerDelay = parseInt(parameters[0], 10);\n        const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n        for (const category of parameters[1].split(';')) {\n          this._rateLimits[category || 'all'] = new Date(now + delay);\n        }\n      }\n      return true;\n    } else if (raHeader) {\n      this._rateLimits.all = new Date(now + parseRetryAfterHeader(now, raHeader));\n      return true;\n    }\n    return false;\n  }\n}\n","import { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Event, Response, SentryRequest, Session } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\nconst global = getGlobalObject<Window>();\n\n/** `fetch` based transport */\nexport class FetchTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<Response> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @param sentryRequest Prepared SentryRequest to be delivered\n   * @param originalPayload Original payload used to create SentryRequest\n   */\n  private _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n    if (this._isRateLimited(sentryRequest.type)) {\n      return Promise.reject({\n        event: originalPayload,\n        type: sentryRequest.type,\n        reason: `Transport locked till ${this._disabledUntil(sentryRequest.type)} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    const options: RequestInit = {\n      body: sentryRequest.body,\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n    if (this.options.fetchParameters !== undefined) {\n      Object.assign(options, this.options.fetchParameters);\n    }\n    if (this.options.headers !== undefined) {\n      options.headers = this.options.headers;\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        global\n          .fetch(sentryRequest.url, options)\n          .then(response => {\n            const headers = {\n              'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n              'retry-after': response.headers.get('Retry-After'),\n            };\n            this._handleResponse({\n              requestType: sentryRequest.type,\n              response,\n              headers,\n              resolve,\n              reject,\n            });\n          })\n          .catch(reject);\n      }),\n    );\n  }\n}\n","import { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Event, Response, SentryRequest, Session } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<Response> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @param sentryRequest Prepared SentryRequest to be delivered\n   * @param originalPayload Original payload used to create SentryRequest\n   */\n  private _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n    if (this._isRateLimited(sentryRequest.type)) {\n      return Promise.reject({\n        event: originalPayload,\n        type: sentryRequest.type,\n        reason: `Transport locked till ${this._disabledUntil(sentryRequest.type)} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = (): void => {\n          if (request.readyState === 4) {\n            const headers = {\n              'x-sentry-rate-limits': request.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': request.getResponseHeader('Retry-After'),\n            };\n            this._handleResponse({ requestType: sentryRequest.type, response: request, headers, resolve, reject });\n          }\n        };\n\n        request.open('POST', sentryRequest.url);\n        for (const header in this.options.headers) {\n          if (this.options.headers.hasOwnProperty(header)) {\n            request.setRequestHeader(header, this.options.headers[header]);\n          }\n        }\n        request.send(sentryRequest.body);\n      }),\n    );\n  }\n}\n","import { BaseBackend } from '@sentry/core';\nimport { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { supportsFetch } from '@sentry/utils';\n\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see BrowserClient for more information.\n */\nexport interface BrowserOptions extends Options {\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.denyUrls}.\n   * By default, all errors will be sent.\n   */\n  allowUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To allow certain errors instead, use {@link Options.allowUrls}.\n   * By default, all errors will be sent.\n   */\n  denyUrls?: Array<string | RegExp>;\n\n  /** @deprecated use {@link Options.allowUrls} instead. */\n  whitelistUrls?: Array<string | RegExp>;\n\n  /** @deprecated use {@link Options.denyUrls} instead. */\n  blacklistUrls?: Array<string | RegExp>;\n\n  /**\n   * A flag enabling Sessions Tracking feature.\n   * By default Sessions Tracking is disabled.\n   */\n  autoSessionTracking?: boolean;\n}\n\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nexport class BrowserBackend extends BaseBackend<BrowserOptions> {\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options, exception, hint);\n  }\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(message: string, level: Severity = Severity.Info, hint?: EventHint): PromiseLike<Event> {\n    return eventFromMessage(this._options, message, level, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _setupTransport(): Transport {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return super._setupTransport();\n    }\n\n    const transportOptions = {\n      ...this._options.transportOptions,\n      dsn: this._options.dsn,\n      _metadata: this._options._metadata,\n    };\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n    return new XHRTransport(transportOptions);\n  }\n}\n","import { API, captureException, withScope } from '@sentry/core';\nimport { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, logger } from '@sentry/utils';\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: args,\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    logger.error(`Missing eventId option in showReportDialog call`);\n    return;\n  }\n  if (!options.dsn) {\n    logger.error(`Missing dsn option in showReportDialog call`);\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.async = true;\n  script.src = new API(options.dsn).getReportDialogEndpoint(options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  (document.head || document.body).appendChild(script);\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Primitive, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  private _onErrorHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  private _onUnhandledRejectionHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  }\n\n  /** JSDoc */\n  private _installGlobalOnErrorHandler(): void {\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (data: { msg: any; url: any; line: any; column: any; error: any }) => {\n        const error = data.error;\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n          : this._enhanceEventWithInitialFrame(\n              eventFromUnknownInput(error, undefined, {\n                attachStacktrace: client && client.getOptions().attachStacktrace,\n                rejection: false,\n              }),\n              data.url,\n              data.line,\n              data.column,\n            );\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onerror',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n      },\n      type: 'error',\n    });\n\n    this._onErrorHandlerInstalled = true;\n  }\n\n  /** JSDoc */\n  private _installGlobalOnUnhandledRejectionHandler(): void {\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (e: any) => {\n        let error = e;\n\n        // dig the object of the rejection out of known event types\n        try {\n          // PromiseRejectionEvents store the object of the rejection under 'reason'\n          // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n          if ('reason' in e) {\n            error = e.reason;\n          }\n          // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n          // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n          // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n          // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n          // https://github.com/getsentry/sentry-javascript/issues/2380\n          else if ('detail' in e && 'reason' in e.detail) {\n            error = e.detail.reason;\n          }\n        } catch (_oO) {\n          // no-empty\n        }\n\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return true;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromRejectionWithPrimitive(error)\n          : eventFromUnknownInput(error, undefined, {\n              attachStacktrace: client && client.getOptions().attachStacktrace,\n              rejection: true,\n            });\n\n        event.level = Severity.Error;\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onunhandledrejection',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n\n        return;\n      },\n      type: 'unhandledrejection',\n    });\n\n    this._onUnhandledRejectionHandlerInstalled = true;\n  }\n\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n    const ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n    // If 'message' is ErrorEvent, get real message from inside\n    let message = isErrorEvent(msg) ? msg.message : msg;\n    let name;\n\n    if (isString(message)) {\n      const groups = message.match(ERROR_TYPES_RE);\n      if (groups) {\n        name = groups[1];\n        message = groups[2];\n      }\n    }\n\n    const event = {\n      exception: {\n        values: [\n          {\n            type: name || 'Error',\n            value: message,\n          },\n        ],\n      },\n    };\n\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  }\n\n  /**\n   * Create an event from a promise rejection where the `reason` is a primitive.\n   *\n   * @param reason: The `reason` property of the promise rejection\n   * @returns An Event object with an appropriate `exception` value\n   */\n  private _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n    return {\n      exception: {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n            value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n          },\n        ],\n      },\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n\n    const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno,\n        filename,\n        function: '?',\n        in_app: true,\n        lineno,\n      });\n    }\n\n    return event;\n  }\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\n/** JSDoc */\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /** JSDoc */\n  private readonly _options: TryCatchOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<TryCatchOptions>) {\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    const global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n    }\n\n    if (this._options.eventTarget) {\n      const eventTarget = Array.isArray(this._options.eventTarget) ? this._options.eventTarget : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(this._wrapEventTarget.bind(this));\n    }\n  }\n\n  /** JSDoc */\n  private _wrapTimeFunction(original: () => void): () => number {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: any, ...args: any[]): number {\n      const originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: { function: getFunctionName(original) },\n          handled: true,\n          type: 'instrument',\n        },\n      });\n      return original.apply(this, args);\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _wrapRAF(original: any): (callback: () => void) => any {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: any, callback: () => void): () => void {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return original.call(\n        this,\n        wrap(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original),\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n      );\n    };\n  }\n\n  /** JSDoc */\n  private _wrapEventTarget(target: string): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const global = getGlobalObject() as { [key: string]: any };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = global[target] && global[target].prototype;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (eventName: string, fn: EventListenerObject, options?: boolean | AddEventListenerOptions) => void {\n      return function(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n        try {\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target,\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            });\n          }\n        } catch (err) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(\n          this,\n          eventName,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          wrap((fn as any) as WrappedFunction, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n          options,\n        );\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = (fn as unknown) as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler?.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    });\n  }\n\n  /** JSDoc */\n  private _wrapXHR(originalSend: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: XMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n      xmlHttpRequestProps.forEach(prop => {\n        if (prop in xhr && typeof xhr[prop] === 'function') {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fill(xhr, prop, function(original: WrappedFunction): () => any {\n            const wrapOptions = {\n              mechanism: {\n                data: {\n                  function: prop,\n                  handler: getFunctionName(original),\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            };\n\n            // If Instrument integration has been called before TryCatch, get the name of original function\n            if (original.__sentry_original__) {\n              wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n            }\n\n            // Otherwise wrap directly\n            return wrap(original, wrapOptions);\n          });\n        }\n      });\n\n      return originalSend.apply(this, args);\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  getEventDescription,\n  getGlobalObject,\n  htmlTreeAsString,\n  parseUrl,\n  safeJoin,\n} from '@sentry/utils';\n\n/** JSDoc */\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom: boolean;\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /** JSDoc */\n  private readonly _options: BreadcrumbsOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<BreadcrumbsOptions>) {\n    this._options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Create a breadcrumb of `sentry` from the events themselves\n   */\n  public addSentryBreadcrumb(event: Event): void {\n    if (!this._options.sentry) {\n      return;\n    }\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this._options.console) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._consoleBreadcrumb(...args);\n        },\n        type: 'console',\n      });\n    }\n    if (this._options.dom) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._domBreadcrumb(...args);\n        },\n        type: 'dom',\n      });\n    }\n    if (this._options.xhr) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._xhrBreadcrumb(...args);\n        },\n        type: 'xhr',\n      });\n    }\n    if (this._options.fetch) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._fetchBreadcrumb(...args);\n        },\n        type: 'fetch',\n      });\n    }\n    if (this._options.history) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._historyBreadcrumb(...args);\n        },\n        type: 'history',\n      });\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from console API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _consoleBreadcrumb(handlerData: { [key: string]: any }): void {\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: Severity.fromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    getCurrentHub().addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  }\n\n  /**\n   * Creates breadcrumbs from DOM API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _domBreadcrumb(handlerData: { [key: string]: any }): void {\n    let target;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target as Node)\n        : htmlTreeAsString((handlerData.event as unknown) as Node);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n      },\n    );\n  }\n\n  /**\n   * Creates breadcrumbs from XHR API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _xhrBreadcrumb(handlerData: { [key: string]: any }): void {\n    if (handlerData.endTimestamp) {\n      // We only capture complete, non-sentry requests\n      if (handlerData.xhr.__sentry_own_request__) {\n        return;\n      }\n\n      const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'xhr',\n          data: {\n            method,\n            url,\n            status_code,\n          },\n          type: 'http',\n        },\n        {\n          xhr: handlerData.xhr,\n          input: body,\n        },\n      );\n\n      return;\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from fetch API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _fetchBreadcrumb(handlerData: { [key: string]: any }): void {\n    // We only capture complete fetch requests\n    if (!handlerData.endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: handlerData.fetchData,\n          level: Severity.Error,\n          type: 'http',\n        },\n        {\n          data: handlerData.error,\n          input: handlerData.args,\n        },\n      );\n    } else {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: {\n            ...handlerData.fetchData,\n            status_code: handlerData.response.status,\n          },\n          type: 'http',\n        },\n        {\n          input: handlerData.args,\n          response: handlerData.response,\n        },\n      );\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from history API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _historyBreadcrumb(handlerData: { [key: string]: any }): void {\n    const global = getGlobalObject<Window>();\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(global.location.href);\n    let parsedFrom = parseUrl(from);\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    getCurrentHub().addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException as ExtendedError, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = event.request?.url || global.location?.href;\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        const headers = {\n          ...event.request?.headers,\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n","import { BaseClient, Scope } from '@sentry/core';\nimport { Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { injectReportDialog, ReportDialogOptions } from './helpers';\nimport { Breadcrumbs } from './integrations';\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client disabled');\n      return;\n    }\n\n    injectReportDialog({\n      ...options,\n      dsn: options.dsn || this.getDsn(),\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _sendEvent(event: Event): void {\n    const integration = this.getIntegration(Breadcrumbs);\n    if (integration) {\n      integration.addSentryBreadcrumb(event);\n    }\n    super._sendEvent(event);\n  }\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations, SDK_VERSION } from '@sentry/core';\nimport { addInstrumentationHandler, getGlobalObject, SyncPromise } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient } from './client';\nimport { ReportDialogOptions, wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n\n  options._metadata = options._metadata || {};\n  options._metadata.sdk = {\n    name: 'sentry.javascript.browser',\n    packages: [\n      {\n        name: 'npm:@sentry/browser',\n        version: SDK_VERSION,\n      },\n    ],\n    version: SDK_VERSION,\n  };\n\n  initAndBind(BrowserClient, options);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  const window = getGlobalObject<Window>();\n  const hub = getCurrentHub();\n\n  /**\n   * We should be using `Promise.all([windowLoaded, firstContentfulPaint])` here,\n   * but, as always, it's not available in the IE10-11. Thanks IE.\n   */\n  let loadResolved = document.readyState === 'complete';\n  let fcpResolved = false;\n  const possiblyEndSession = (): void => {\n    if (fcpResolved && loadResolved) {\n      hub.endSession();\n    }\n  };\n  const resolveWindowLoaded = (): void => {\n    loadResolved = true;\n    possiblyEndSession();\n    window.removeEventListener('load', resolveWindowLoaded);\n  };\n\n  hub.startSession();\n\n  if (!loadResolved) {\n    // IE doesn't support `{ once: true }` for event listeners, so we have to manually\n    // attach and then detach it once completed.\n    window.addEventListener('load', resolveWindowLoaded);\n  }\n\n  try {\n    const po = new PerformanceObserver((entryList, po) => {\n      entryList.getEntries().forEach(entry => {\n        if (entry.name === 'first-contentful-paint' && entry.startTime < firstHiddenTime) {\n          po.disconnect();\n          fcpResolved = true;\n          possiblyEndSession();\n        }\n      });\n    });\n\n    // There's no need to even attach this listener if `PerformanceObserver` constructor will fail,\n    // so we do it below here.\n    let firstHiddenTime = document.visibilityState === 'hidden' ? 0 : Infinity;\n    document.addEventListener(\n      'visibilitychange',\n      event => {\n        firstHiddenTime = Math.min(firstHiddenTime, event.timeStamp);\n      },\n      { once: true },\n    );\n\n    po.observe({\n      type: 'paint',\n      buffered: true,\n    });\n  } catch (e) {\n    fcpResolved = true;\n    possiblyEndSession();\n  }\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler({\n    callback: () => {\n      if (\n        !getCurrentHub()\n          .getScope()\n          ?.getSession()\n      ) {\n        hub.startSession();\n        hub.endSession();\n      }\n    },\n    type: 'history',\n  });\n}\n","export * from './exports';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports };\n","/** The status of an Span. */\n// eslint-disable-next-line import/export\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace SpanStatus {\n  /**\n   * Converts a HTTP status code into a {@link SpanStatus}.\n   *\n   * @param httpStatus The HTTP response status code.\n   * @returns The span status or {@link SpanStatus.UnknownError}.\n   */\n  export function fromHttpCode(httpStatus: number): SpanStatus {\n    if (httpStatus < 400) {\n      return SpanStatus.Ok;\n    }\n\n    if (httpStatus >= 400 && httpStatus < 500) {\n      switch (httpStatus) {\n        case 401:\n          return SpanStatus.Unauthenticated;\n        case 403:\n          return SpanStatus.PermissionDenied;\n        case 404:\n          return SpanStatus.NotFound;\n        case 409:\n          return SpanStatus.AlreadyExists;\n        case 413:\n          return SpanStatus.FailedPrecondition;\n        case 429:\n          return SpanStatus.ResourceExhausted;\n        default:\n          return SpanStatus.InvalidArgument;\n      }\n    }\n\n    if (httpStatus >= 500 && httpStatus < 600) {\n      switch (httpStatus) {\n        case 501:\n          return SpanStatus.Unimplemented;\n        case 503:\n          return SpanStatus.Unavailable;\n        case 504:\n          return SpanStatus.DeadlineExceeded;\n        default:\n          return SpanStatus.InternalError;\n      }\n    }\n\n    return SpanStatus.UnknownError;\n  }\n}\n","import { getCurrentHub, Hub } from '@sentry/hub';\nimport { Options, TraceparentData, Transaction } from '@sentry/types';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n  '([0-9a-f]{32})?' + // trace_id\n  '-?([0-9a-f]{16})?' + // span_id\n  '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(options: Options): boolean {\n  return 'tracesSampleRate' in options || 'tracesSampler' in options;\n}\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent: string): TraceparentData | undefined {\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    let parentSampled: boolean | undefined;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled,\n      parentSpanId: matches[2],\n    };\n  }\n  return undefined;\n}\n\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction<T extends Transaction>(hub: Hub = getCurrentHub()): T | undefined {\n  return hub?.getScope()?.getTransaction() as T | undefined;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time: number): number {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nexport function secToMs(time: number): number {\n  return time * 1000;\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { SpanStatus } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  addInstrumentationHandler({\n    callback: errorCallback,\n    type: 'error',\n  });\n  addInstrumentationHandler({\n    callback: errorCallback,\n    type: 'unhandledrejection',\n  });\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    logger.log(`[Tracing] Transaction: ${SpanStatus.InternalError} -> Global error occured`);\n    activeTransaction.setStatus(SpanStatus.InternalError);\n  }\n}\n","/* eslint-disable max-lines */\nimport { Primitive, Span as SpanInterface, SpanContext, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys, timestampWithMs, uuid4 } from '@sentry/utils';\n\nimport { SpanStatus } from './spanstatus';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[] = [];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * @inheritDoc\n   */\n  public traceId: string = uuid4();\n\n  /**\n   * @inheritDoc\n   */\n  public spanId: string = uuid4().substring(16);\n\n  /**\n   * @inheritDoc\n   */\n  public parentSpanId?: string;\n\n  /**\n   * Internal keeper of the status\n   */\n  public status?: SpanStatus | string;\n\n  /**\n   * @inheritDoc\n   */\n  public sampled?: boolean;\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n  public startTimestamp: number = timestampWithMs();\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  public endTimestamp?: number;\n\n  /**\n   * @inheritDoc\n   */\n  public op?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public description?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public tags: { [key: string]: Primitive } = {};\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any } = {};\n\n  /**\n   * List of spans that were finalized\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   */\n  public transaction?: Transaction;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext?: SpanContext) {\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated\n   */\n  public child(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'spanId' | 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    return this.startChild(spanContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'spanId' | 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public setData(key: string, value: any): this {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatus): this {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setHttpStatus(httpStatus: number): this {\n    this.setTag('http.status_code', String(httpStatus));\n    const spanStatus = SpanStatus.fromHttpCode(httpStatus);\n    if (spanStatus !== SpanStatus.UnknownError) {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isSuccess(): boolean {\n    return this.status === SpanStatus.Ok;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): void {\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTraceContext(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    trace_id: string;\n  } {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    start_timestamp: number;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    timestamp?: number;\n    trace_id: string;\n  } {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n","import { getCurrentHub, Hub } from '@sentry/hub';\nimport { Event, Measurements, Transaction as TransactionInterface, TransactionContext } from '@sentry/types';\nimport { isInstanceOf, logger } from '@sentry/utils';\n\nimport { Span as SpanClass, SpanRecorder } from './span';\n\n/** JSDoc */\nexport class Transaction extends SpanClass implements TransactionInterface {\n  public name: string;\n  private _measurements: Measurements = {};\n\n  /**\n   * The reference to the current hub.\n   */\n  private readonly _hub: Hub = (getCurrentHub() as unknown) as Hub;\n\n  private readonly _trimEnd?: boolean;\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(transactionContext: TransactionContext, hub?: Hub) {\n    super(transactionContext);\n\n    if (isInstanceOf(hub, Hub)) {\n      this._hub = hub as Hub;\n    }\n\n    this.name = transactionContext.name ? transactionContext.name : '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n  }\n\n  /**\n   * JSDoc\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n  public initSpanRecorder(maxlen: number = 1000): void {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set observed measurements for this transaction.\n   * @hidden\n   */\n  public setMeasurements(measurements: Measurements): void {\n    this._measurements = { ...measurements };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): string | undefined {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev: SpanClass, current: SpanClass) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const transaction: Event = {\n      contexts: {\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      logger.log('[Measurements] Adding measurements to transaction', JSON.stringify(this._measurements, undefined, 2));\n      transaction.measurements = this._measurements;\n    }\n\n    return this._hub.captureEvent(transaction);\n  }\n}\n","import { Hub } from '@sentry/hub';\nimport { TransactionContext } from '@sentry/types';\nimport { logger, timestampWithMs } from '@sentry/utils';\n\nimport { Span, SpanRecorder } from './span';\nimport { SpanStatus } from './spanstatus';\nimport { Transaction } from './transaction';\n\nexport const DEFAULT_IDLE_TIMEOUT = 1000;\n\n/**\n * @inheritDoc\n */\nexport class IdleTransactionSpanRecorder extends SpanRecorder {\n  public constructor(\n    private readonly _pushActivity: (id: string) => void,\n    private readonly _popActivity: (id: string) => void,\n    public transactionSpanId: string = '',\n    maxlen?: number,\n  ) {\n    super(maxlen);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(span: Span): void {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp?: number) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\nexport type BeforeFinishCallback = (transactionSpan: IdleTransaction, endTimestamp: number) => void;\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nexport class IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n  public activities: Record<string, boolean> = {};\n\n  // Stores reference to the timeout that calls _beat().\n  private _heartbeatTimer: number = 0;\n\n  // Track state of activities in previous heartbeat\n  private _prevHeartbeatString: string | undefined;\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n  private _heartbeatCounter: number = 0;\n\n  // We should not use heartbeat if we finished a transaction\n  private _finished: boolean = false;\n\n  private readonly _beforeFinishCallbacks: BeforeFinishCallback[] = [];\n\n  // If a transaction is created and no activities are added, we want to make sure that\n  // it times out properly. This is cleared and not used when activities are added.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _initTimeout: any;\n\n  public constructor(\n    transactionContext: TransactionContext,\n    private readonly _idleHub?: Hub,\n    // The time to wait in ms until the idle transaction will be finished. Default: 1000\n    private readonly _idleTimeout: number = DEFAULT_IDLE_TIMEOUT,\n    // If an idle transaction should be put itself on and off the scope automatically.\n    private readonly _onScope: boolean = false,\n  ) {\n    super(transactionContext, _idleHub);\n\n    if (_idleHub && _onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n  }\n\n  /** {@inheritDoc} */\n  public finish(endTimestamp: number = timestampWithMs()): string | undefined {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span: Span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus(SpanStatus.Cancelled);\n          logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          logger.log(\n            '[Tracing] discarding Span since it happened after Transaction was finished',\n            JSON.stringify(span, undefined, 2),\n          );\n        }\n        return keepSpan;\n      });\n\n      // this._onScope is true if the transaction was previously on the scope.\n      if (this._onScope) {\n        clearActiveTransaction(this._idleHub);\n      }\n\n      logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n  public registerBeforeFinishCallback(callback: BeforeFinishCallback): void {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public initSpanRecorder(maxlen?: number): void {\n    if (!this.spanRecorder) {\n      this._initTimeout = setTimeout(() => {\n        if (!this._finished) {\n          this.finish();\n        }\n      }, this._idleTimeout);\n\n      const pushActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  private _pushActivity(spanId: string): void {\n    if (this._initTimeout) {\n      clearTimeout(this._initTimeout);\n      this._initTimeout = undefined;\n    }\n    logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  private _popActivity(spanId: string): void {\n    if (this.activities[spanId]) {\n      logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const timeout = this._idleTimeout;\n      // We need to add the timeout here to have the real endtimestamp of the transaction\n      // Remember timestampWithMs is in seconds, timeout is in ms\n      const end = timestampWithMs() + timeout / 1000;\n\n      setTimeout(() => {\n        if (!this._finished) {\n          this.finish(end);\n        }\n      }, timeout);\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n  private _beat(): void {\n    clearTimeout(this._heartbeatTimer);\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const keys = Object.keys(this.activities);\n    const heartbeatString = keys.length ? keys.reduce((prev: string, current: string) => prev + current) : '';\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter += 1;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      logger.log(`[Tracing] Transaction finished because of no change for 3 heart beats`);\n      this.setStatus(SpanStatus.DeadlineExceeded);\n      this.setTag('heartbeat', 'failed');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n  private _pingHeartbeat(): void {\n    logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    this._heartbeatTimer = (setTimeout(() => {\n      this._beat();\n    }, 5000) as unknown) as number;\n  }\n}\n\n/**\n * Reset active transaction on scope\n */\nfunction clearActiveTransaction(hub?: Hub): void {\n  if (hub) {\n    const scope = hub.getScope();\n    if (scope) {\n      const transaction = scope.getTransaction();\n      if (transaction) {\n        scope.setSpan(undefined);\n      }\n    }\n  }\n}\n","import { getActiveDomain, getMainCarrier, Hub } from '@sentry/hub';\nimport { CustomSamplingContext, SamplingContext, TransactionContext, TransactionSamplingMethod } from '@sentry/types';\nimport {\n  dynamicRequire,\n  extractNodeRequestData,\n  getGlobalObject,\n  isInstanceOf,\n  isNodeEnv,\n  logger,\n} from '@sentry/utils';\n\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { Transaction } from './transaction';\nimport { hasTracingEnabled } from './utils';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders(this: Hub): { [key: string]: string } {\n  const scope = this.getScope();\n  if (scope) {\n    const span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param hub: The hub off of which to read config options\n * @param transaction: The transaction needing a sampling decision\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample<T extends Transaction>(hub: Hub, transaction: T, samplingContext: SamplingContext): T {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  // nothing to do if there's no client or if tracing is disabled\n  if (!client || !hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.tags = { ...transaction.tags, __sentry_samplingMethod: TransactionSamplingMethod.Explicit };\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    // cast the rate to a number first in case it's a boolean\n    transaction.tags = {\n      ...transaction.tags,\n      __sentry_samplingMethod: TransactionSamplingMethod.Sampler,\n      // TODO kmclb - once tag types are loosened, don't need to cast to string here\n      __sentry_sampleRate: String(Number(sampleRate)),\n    };\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n    transaction.tags = { ...transaction.tags, __sentry_samplingMethod: TransactionSamplingMethod.Inheritance };\n  } else {\n    sampleRate = options.tracesSampleRate;\n    // cast the rate to a number first in case it's a boolean\n    transaction.tags = {\n      ...transaction.tags,\n      __sentry_samplingMethod: TransactionSamplingMethod.Rate,\n      // TODO kmclb - once tag types are loosened, don't need to cast to string here\n      __sentry_sampleRate: String(Number(sampleRate)),\n    };\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    logger.warn(`[Tracing] Discarding transaction because of invalid sample rate.`);\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    logger.log(\n      `[Tracing] Discarding transaction because ${\n        typeof options.tracesSampler === 'function'\n          ? 'tracesSampler returned 0 or false'\n          : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n      }`,\n    );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate as number | boolean);\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    logger.log(\n      `[Tracing] Discarding transaction because it's