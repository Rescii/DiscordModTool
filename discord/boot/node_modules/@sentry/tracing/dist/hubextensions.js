AGRgP,IAAhCrB,EAAQo2B,sBACVp2B,EAAQo2B,qBAAsB,GAGhCp2B,EAAQkd,GAAYld,EAAQkd,IAAa,GACzCld,EAAQkd,GAAUjH,IAAM,CACtBjiB,KAAM,4BACN2jB,SAAU,CACR,CACE3jB,KAAM,sBACNuZ,QAASmL,KAGbnL,QAASmL,a2BrFoD2d,EAAgCr2B,IACzE,IAAlBA,EAAQs2B,OACV73B,GAAO83B,SAET,IAAMtmB,EAAMI,KACNnD,EAAS,IAAImpB,EAAYr2B,GAC/BiQ,EAAI5C,WAAWH,G3BkFfspB,CAAYxS,GAAehkB,GAEvBA,EAAQo2B,qBAwFd,WACE,IAAMt8B,EAASgC,IACTmU,EAAMI,KAMRomB,EAAuC,aAAxB18B,SAASiH,WACxB01B,GAAc,EACZC,EAAqB,WACrBD,GAAeD,GACjBxmB,EAAIV,cAGFqnB,EAAsB,WAC1BH,GAAe,EACfE,IACA78B,EAAO+8B,oBAAoB,OAAQD,IAGrC3mB,EAAI6mB,eAECL,GAGH38B,EAAO6F,iBAAiB,OAAQi3B,GAGlC,IACE,IAAM/J,EAAK,IAAIW,oBAAoB,SAACuJ,EAAWlK,GAC7CkK,EAAUnJ,aAAa93B,QAAQ,SAAAg5B,GACV,2BAAfA,EAAM96B,MAAqC86B,EAAMC,UAAYiI,IAC/DnK,EAAGI,aACHyJ,GAAc,EACdC,SAOFK,EAA+C,WAA7Bj9B,SAASmzB,gBAA+B,EAAIhzB,EAAAA,EAClEH,SAAS4F,iBACP,mBACA,SAAAvC,GACE45B,EAAkBp6B,KAAK8R,IAAIsoB,EAAiB55B,EAAMixB,YAEpD,CAAED,MAAM,IAGVvB,EAAGU,QAAQ,CACT50B,KAAM,QACNk1B,UAAU,IAEZ,MAAO/2B,GACP4/B,GAAc,EACdC,IAIFnyB,GAA0B,CACxBhH,SAAU,4BAEL6S,KACE3C,iCACCgC,gBAEJO,EAAI6mB,eACJ7mB,EAAIV,eAGR5W,KAAM,YA/JNs+B,6BAyBF,OAAO5mB,KAAgB6mB,iCAeF15B,GACrBA,2BxBhCyBxJ,EAAciW,GACvC6G,GAAgB,aAAc9c,EAAMiW,wBAwBbjY,EAAa8X,GACpCgH,GAAgB,WAAY9e,EAAK8X,yBAlBTD,GACxBiH,GAAgB,YAAajH,sBA4BR7X,EAAauF,GAClCuZ,GAAgB,SAAU9e,EAAKuF,uBAtBTqS,GACtBkH,GAAgB,UAAWlH,uBA6BLrU,GACtBub,GAAgB,UAAWvb,gCwB/CIyK,gBAAAA,MAC1BA,EAAQgO,UACXhO,EAAQgO,QAAUqC,KAAgB6mB,eAEpC,IAAMhqB,EAASmD,KAAgBzC,YAC3BV,GACFA,EAAOiqB,iBAAiBn3B,gCxB8F1BiK,EACAqF,GAEA,OAAOwB,GAAU,wBAAyB7G,GAAWqF,mCwBhClCzY,GACnB,OAAOugC,GAAavgC,EAAbugC"}/**
 * Add a listener that cancels and finishes a transaction when the global
 * document is hidden.
 */
export declare function registerBackgroundTabDetection(): void;
//# sourceMappingURL=backgroundtab.d.ts.map{"version":3,"file":"backgroundtab.d.ts","sourceRoot":"","sources":["../../src/browser/backgroundtab.ts"],"names":[],"mappings":"AAQA;;;GAGG;AACH,wBAAgB,8BAA8B,IAAI,IAAI,CAoBrD"}Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("@sentry/utils");
var spanstatus_1 = require("../spanstatus");
var utils_2 = require("../utils");
var global = utils_1.getGlobalObject();
/**
 * Add a listener that cancels and finishes a transaction when the global
 * document is hidden.
 */
function registerBackgroundTabDetection() {
    if (global && global.document) {
        global.document.addEventListener('visibilitychange', function () {
            var activeTransaction = utils_2.getActiveTransaction();
            if (global.document.hidden && activeTransaction) {
                utils_1.logger.log("[Tracing] Transaction: " + spanstatus_1.SpanStatus.Cancelled + " -> since tab moved to the background, op: " + activeTransaction.op);
                // We should not set status if it is already set, this prevent important statuses like
                // error or data loss from being overwritten on transaction.
                if (!activeTransaction.status) {
                    activeTransaction.setStatus(spanstatus_1.SpanStatus.Cancelled);
                }
                activeTransaction.setTag('visibilitychange', 'document.hidden');
                activeTransaction.finish();
            }
        });
    }
    else {
        utils_1.logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');
    }
}
exports.registerBackgroundTabDetection = registerBackgroundTabDetection;
//# sourceMappingURL=backgroundtab.js.map{"version":3,"file":"backgroundtab.js","sourceRoot":"","sources":["../../src/browser/backgroundtab.ts"],"names":[],"mappings":";AAAA,uCAAwD;AAGxD,4CAA2C;AAC3C,kCAAgD;AAEhD,IAAM,MAAM,GAAG,uBAAe,EAAU,CAAC;AAEzC;;;GAGG;AACH,SAAgB,8BAA8B;IAC5C,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;QAC7B,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;YACnD,IAAM,iBAAiB,GAAG,4BAAoB,EAAqB,CAAC;YACpE,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,iBAAiB,EAAE;gBAC/C,cAAM,CAAC,GAAG,CACR,4BAA0B,uBAAU,CAAC,SAAS,mDAA8C,iBAAiB,CAAC,EAAI,CACnH,CAAC;gBACF,sFAAsF;gBACtF,4DAA4D;gBAC5D,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;oBAC7B,iBAAiB,CAAC,SAAS,CAAC,uBAAU,CAAC,SAAS,CAAC,CAAC;iBACnD;gBACD,iBAAiB,CAAC,MAAM,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;gBAChE,iBAAiB,CAAC,MAAM,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;KACJ;SAAM;QACL,cAAM,CAAC,IAAI,CAAC,oFAAoF,CAAC,CAAC;KACnG;AACH,CAAC;AApBD,wEAoBC","sourcesContent":["import { getGlobalObject, logger } from '@sentry/utils';\n\nimport { IdleTransaction } from '../idletransaction';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction } from '../utils';\n\nconst global = getGlobalObject<Window>();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (global.document.hidden && activeTransaction) {\n        logger.log(\n          `[Tracing] Transaction: ${SpanStatus.Cancelled} -> since tab moved to the background, op: ${activeTransaction.op}`,\n        );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(SpanStatus.Cancelled);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n"]}import { Hub } from '@sentry/hub';
import { EventProcessor, Integration, Transaction, TransactionContext } from '@sentry/types';
import { RequestInstrumentationOptions } from './request';
export declare const DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;
/** Options for Browser Tracing integration */
export interface BrowserTracingOptions extends RequestInstrumentationOptions {
    /**
     * The time to wait in ms until the transaction will be finished. The transaction will use the end timestamp of
     * the last finished span as the endtime for the transaction.
     * Time is in ms.
     *
     * Default: 1000
     */
    idleTimeout: number;
    /**
     * Flag to enable/disable creation of `navigation` transaction on history changes.
     *
     * Default: true
     */
    startTransactionOnLocationChange: boolean;
    /**
     * Flag to enable/disable creation of `pageload` transaction on first pageload.
     *
     * Default: true
     */
    startTransactionOnPageLoad: boolean;
    /**
     * The maximum duration of a transaction before it will be marked as "deadline_exceeded".
     * If you never want to mark a transaction set it to 0.
     * Time is in seconds.
     *
     * Default: 600
     */
    maxTransactionDuration: number;
    /**
     * Flag Transactions where tabs moved to background with "cancelled". Browser background tab timing is
     * not suited towards doing precise measurements of operations. By default, we recommend that this option
     * be enabled as background transactions can mess up your statistics in nondeterministic ways.
     *
     * Default: true
     */
    markBackgroundTransactions: boolean;
    /**
     * beforeNavigate is called before a pageload/navigation transaction is created and allows users to modify transaction
     * context data, or drop the transaction entirely (by setting `sampled = false` in the context).
     *
     * Note: For legacy reasons, transactions can also be dropped by returning `undefined`.
     *
     * @param context: The context data which will be passed to `startTransaction` by default
     *
     * @returns A (potentially) modified context object, with `sampled = false` if the transaction should be dropped.
     */
    beforeNavigate?(context: TransactionContext): TransactionContext | undefined;
    /**
     * Instrumentation that creates routing change transactions. By default creates
     * pageload and navigation transactions.
     */
    routingInstrumentation<T extends Transaction>(startTransaction: (context: TransactionContext) => T | undefined, startTransactionOnPageLoad?: boolean, startTransactionOnLocationChange?: boolean): void;
}
/**
 * The Browser Tracing integration automatically instruments browser pageload/navigation
 * actions as transactions, and captures requests, metrics and errors as spans.
 *
 * The integration can be configured with a variety of options, and can be extended to use
 * any routing library. This integration uses {@see IdleTransaction} to create transactions.
 */
export declare class BrowserTracing implements Integration {
    /**
     * @inheritDoc
     */
    static id: string;
    /** Browser Tracing integration options */
    options: BrowserTracingOptions;
    /**
     * @inheritDoc
     */
    name: string;
    private _getCurrentHub?;
    private readonly _metrics;
    private readonly _emitOptionsWarning;
    constructor(_options?: Partial<BrowserTracingOptions>);
    /**
     * @inheritDoc
     */
    setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void;
    /** Create routing idle transaction. */
    private _createRouteTransaction;
}
/**
 * Gets transaction context from a sentry-trace meta.
 *
 * @returns Transaction context data from the header or undefined if there's no header or the header is malformed
 */
export declare function getHeaderContext(): Partial<TransactionContext> | undefined;
/** Returns the value of a meta tag */
export declare function getMetaContent(metaName: string): string | null;
//# sourceMappingURL=browsertracing.d.ts.map{"version":3,"file":"browsertracing.d.ts","sourceRoot":"","sources":["../../src/browser/browsertracing.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAC;AAClC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AAS7F,OAAO,EAGL,6BAA6B,EAC9B,MAAM,WAAW,CAAC;AAGnB,eAAO,MAAM,wCAAwC,MAAM,CAAC;AAE5D,8CAA8C;AAC9C,MAAM,WAAW,qBAAsB,SAAQ,6BAA6B;IAC1E;;;;;;OAMG;IACH,WAAW,EAAE,MAAM,CAAC;IAEpB;;;;OAIG;IACH,gCAAgC,EAAE,OAAO,CAAC;IAE1C;;;;OAIG;IACH,0BAA0B,EAAE,OAAO,CAAC;IAEpC;;;;;;OAMG;IACH,sBAAsB,EAAE,MAAM,CAAC;IAE/B;;;;;;OAMG;IACH,0BAA0B,EAAE,OAAO,CAAC;IAEpC;;;;;;;;;OASG;IACH,cAAc,CAAC,CAA