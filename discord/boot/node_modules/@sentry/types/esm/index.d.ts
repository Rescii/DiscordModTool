nts have been sent.\n   * If you provide a timeout and the queue takes longer to drain the promise returns false.\n   *\n   * @param timeout Maximum time in ms the client should wait.\n   */\n  flush(timeout?: number): PromiseLike<boolean>;\n\n  /** Returns an array of installed integrations on the client. */\n  getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null;\n\n  /** This is an internal function to setup all integrations that should run on the client */\n  setupIntegrations(): void;\n}\n"]}export declare type Context = Record<string, unknown>;
export declare type Contexts = Record<string, Context>;
//# sourceMappingURL=context.d.ts.map{"version":3,"file":"context.d.ts","sourceRoot":"","sources":["../src/context.ts"],"names":[],"mappings":"AAAA,oBAAY,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC9C,oBAAY,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC"}Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=context.js.map{"version":3,"file":"context.js","sourceRoot":"","sources":["../src/context.ts"],"names":[],"mappings":"","sourcesContent":["export type Context = Record<string, unknown>;\nexport type Contexts = Record<string, Context>;\n"]}/**
 * Holds meta information to customize the behavior of sentry's event processing.
 **/
export interface DebugMeta {
    images?: Array<DebugImage>;
}
/**
 * Possible choices for debug images.
 */
export declare type DebugImageType = 'wasm' | 'macho' | 'elf' | 'pe';
/**
 * References to debug images.
 */
export interface DebugImage {
    type: DebugImageType;
    debug_id: string;
    code_id?: string | null;
    code_file: string;
    debug_file?: string | null;
}
//# sourceMappingURL=debugMeta.d.ts.map{"version":3,"file":"debugMeta.d.ts","sou