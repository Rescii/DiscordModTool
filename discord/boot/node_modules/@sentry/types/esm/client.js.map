declare class Transaction extends SpanClass implements TransactionInterface {
    name: string;
    private _measurements;
    /**
     * The reference to the current hub.
     */
    private readonly _hub;
    private readonly _trimEnd?;
    /**
     * This constructor should never be called manually. Those instrumenting tracing should use
     * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.
     * @internal
     * @hideconstructor
     * @hidden
     */
    constructor(transactionContext: TransactionContext, hub?: Hub);
    /**
     * JSDoc
     */
    setName(name: string): void;
    /**
     * Attaches SpanRecorder to the span itself
     * @param maxlen maximum number of spans that can be recorded
     */
    initSpanRecorder(maxlen?: number): void;
    /**
     * Set observed measurements for this transaction.
     * @hidden
     */
    setMeasurements(measurements: Measurements): void;
    /**
     * @inheritDoc
     */
    finish(endTimestamp?: number): string | undefined;
}
//# sourceMappingURL=transaction.d.ts.map{"version":3,"file":"transaction.d.ts","sourceRoot":"","sources":["../src/transaction.ts"],"names":[],"mappings":"AAAA,OAAO,EAAiB,GAAG,EAAE,MAAM,aAAa,CAAC;AACjD,OAAO,EAAS,YAAY,EAAE,WAAW,IAAI,oBAAoB,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AAG7G,OAAO,EAAE,IAAI,IAAI,SAAS,EAAgB,MAAM,QAAQ,CAAC;AAEzD,YAAY;AACZ,qBAAa,WAAY,SAAQ,SAAU,YAAW,oBAAoB;IACjE,IAAI,EAAE,MAAM,CAAC;IACpB,OAAO,CAAC,aAAa,CAAoB;IAEzC;;OAEG;IACH,OAAO,CAAC,QAAQ,CAAC,IAAI,CAA4C;IAEjE,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAU;IAEpC;;;;;;OAMG;gBACgB,kBAAkB,EAAE,kBAAkB,EAAE,GAAG,CAAC,EAAE,GAAG;IAepE;;OAEG;IACI,OAAO,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI;IAIlC;;;OAGG;IACI,gBAAgB,CAAC,MAAM,GAAE,MAAa,GAAG,IAAI;IAOpD;;;OAGG;IACI,eAAe,CAAC,YAAY,EAAE,YAAY,GAAG,IAAI;IAIxD;;OAEG;IACI,MAAM,CAAC,YAAY,CAAC,EAAE,MAAM,GAAG,MAAM,GAAG,SAAS;CAoDzD"}import { __assign, __extends } from "tslib";
import { getCurrentHub, Hub } from '@sentry/hub';
import { isInstanceOf, logger } from '@sentry/utils';
import { Span as SpanClass, SpanRecorder } from './span';
/** JSDoc */
var Transaction = /** @class */ (function (_super) {
    __extends(Transaction, _super);
    /**
     * This constructor should never be called manually. Those instrumenting tracing should use
     * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.
     * @internal
     * @hideconstructor
     * @hidden
     */
    function Transaction(transactionContext, hub) {
        var _this = _super.call(this, transactionContext) || this;
        _this._measurements = {};
        /**
         * The reference to the current hub.
         */
        _this._hub = getCurrentHub();
        if (isInstanceOf(hub, Hub)) {
            _this._hub = hub;
        }
        _this.name = transactionContext.name ? transactionContext.name : '';
        _this._trimEnd = transactionContext.trimEnd;
        // this is because transactions are also spans, and spans have a transaction pointer
        _this.transaction = _this;
        return _this;
    }
    /**
     * JSDoc
     */
    Transaction.prototype.setName = function (name) {
        this.name = name;
    };
    /**
     * Attaches SpanRecorder to the