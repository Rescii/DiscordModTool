* Sets the integration up only once.\n   * This takes no options on purpose, options should be passed in the constructor\n   */\n  setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void;\n}\n"]}/** Console logging verbosity for the SDK. */
export declare enum LogLevel {
    /** No logs will be generated. */
    None = 0,
    /** Only SDK internal errors will be logged. */
    Error = 1,
    /** Information useful for debugging the SDK will be logged. */
    Debug = 2,
    /** All SDK actions will be logged. */
    Verbose = 3
}
//# sourceMappingURL=loglevel.d.ts.map{"version":3,"file":"loglevel.d.ts","sourceRoot":"","sources":["../src/loglevel.ts"],"names":[],"mappings":"AAAA,6CAA6C;AAC7C,oBAAY,QAAQ;IAClB,iCAAiC;IACjC,IAAI,IAAI;IACR,+CAA+C;IAC/C,KAAK,IAAI;IACT,+DAA+D;IAC/D,KAAK,IAAI;IACT,sCAAsC;IACtC,OAAO,IAAI;CACZ"}/** Console logging verbosity for the SDK. */
export var LogLevel;
(function (LogLevel) {
    /** No logs will be generated. */
    LogLevel[LogLevel["None"] = 0] = "None";
    /** Only SDK internal errors will be logged. */
    LogLevel[LogLevel["Error"] = 1] = "Error";
    /** Information useful for debugging the SDK will be logged. */
    LogLevel[LogLevel["Debug"] = 2] = "Debug";
    /** All SDK actions will be logged. */
    LogLevel[LogLevel["Verbose"] = 3] = "Verbose";
})(LogLevel || (LogLevel = {}));
//# sourceMappingURL=loglevel.js.map{"version":3,"file":"loglevel.js","sourceRoot":"","sources":["../src/loglevel.ts"],"names":[],"mappings":"AAAA,6CAA6C;AAC7C,MAAM,CAAN,IAAY,QASX;AATD,WAAY,QAAQ;IAClB,iCAAiC;IACjC,uCAAQ,CAAA;IACR,+CAA+C;IAC/C,yCAAS,CAAA;IACT,+DAA+D;IAC/D,yCAAS,CAAA;IACT,sCAAsC;IACtC,6CAAW,CAAA;AACb,CAAC,EATW,QAAQ,KAAR,QAAQ,QASnB","sourcesContent":["/** Console logging verbosity for the SDK. */\nexport enum LogLevel {\n  /** No logs will be generated. */\n  None = 0,\n  /** Only SDK internal errors will be logged. */\n  Error = 1,\n  /** Information useful for debugging the SDK will be logged. */\n  Debug = 2,\n  /** All SDK actions will be logged. */\n  Verbose = 3,\n}\n"]}/** JSDoc */
export interface Mechanism {
    type: string;
    handled: boolean;
    data?: {
        [key: string]: string | boolean;
    };
    synthetic?: boolean;
}
//# sourceMappingURL=mechanism.d.ts.map{"version":3,"file":"mechanism.d.ts","sourceRoot":"","sources":["../src/mechanism.ts"],"names":[],"mappings":"AAAA,YAAY;AACZ,MAAM,WAAW,SAAS;IACxB,IAAI,EAAE,MAAM,CAAC;IACb,OAAO,EAAE,OAAO,CAAC;IACjB,IAAI,CAAC,EAAE;QACL,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;KACjC,CAAC;IACF,SAAS,CAAC,EAAE,OAAO,CAAC;CACrB"}//# sourceMappingURL=mechanism.js.map{"version":3,"file":"mechanism.js","sourceRoot":"","sources":["../src/mechanism.ts"],"names":[],"mappings":"","sourcesContent":["/** JSDoc */\nexport interface Mechanism {\n  type: string;\n  handled: boolean;\n  data?: {\n    [key: string]: string | boolean;\n  };\n  synthetic?: boolean;\n}\n"]}/**
 * Data extracted from an incoming request to a node server
 */
export interface ExtractedNodeRequestData {
    [key: string]: any;
    /** Specific headers from the request */
    headers?: {
        [key: string]: string;
    };
    /**  The request's method */
    method?: string;
    /** The request's URL, including query string */
    url?: string;
    /** String representing the cookies sent along with the request */
    cookies?: {
        [key: string]: string;
    };
    /** The request's query string, without the leading '?' */
    query_string?: string;
    /** Any data sent in the request's body, as a JSON string */
    data?: string;
}
/**
 * Location object on a service worker's `self` object.
 *
 * See https://developer.mozilla.org/en-US/docs/Web/API/WorkerLocation.
 */
export interface WorkerLocation {
    /** The protocol scheme of the URL of the script executed in the Worker, including the final ':'. */
    readonly protocol: string;
    /** The host, that is the hostname, a ':', and the port of the URL of the script executed in the Worker. */
    readonly host: string;
    /** The domain of the URL of the script executed in the Worker. */
    readonly hostname: string;
    /** The canonical form of the origin of the specific location. */
    readonly origin: string;
    /** The port number of the URL of the script executed in the Worker. */
    readonly port: string;
    /** The path of the URL of the script executed in the Worker, beginning with a '/'. */
    readonly pathname: string;
    /** The parameters (query string) of the URL of the script executed in the Worker, beginning with a '?'. */
    readonly search: string;
    /** The fragment identifier of the URL of the script executed in the Worker, beginning with a '#'. */
    readonly hash: string;
    /** Stringifier that returns the whole URL of the script executed in the Worker. */
    readonly href: string;
    /** Synonym for `href` attribute */
    toString(): string;
}
export declare type Primitive = number | string | boolean | bigint | symbol | null | undefined;
//# sourceMappingURL=misc.d.ts.map{"version":3,"file":"misc.d.ts","sourceRoot":"","sources":["../src/misc.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,WAAW,wBAAwB;IACvC,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;IAEnB,wCAAwC;IACxC,OAAO,CAAC,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAA;KAAE,CAAC;IAEpC,4BAA4B;IAC5B,MAAM,CAAC,EAAE,MAAM,CAAC;IAEhB,gDAAgD;IAChD,GAAG,CAAC,EAAE,MAAM,CAAC;IAEb,kEAAkE;IAClE,OAAO,CAAC,EAAE;QAAE,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAA;KAAE,CAAC;IAEpC,0DAA0D;IAC1D,YAAY,CAAC,EAAE,MAAM,CAAC;IAEtB,4DAA4D;IAC5D,IAAI,CAAC,EAAE,MAAM,CAAC;CACf;AAED;;;;GAIG;AACH,MAAM,WAAW,cAAc;IAC7B,oGAAoG;IACpG,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;IAE1B,2GAA2G;IAC3G,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;IAEtB,kEAAkE;IAClE,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;IAE1B,iEAAiE;IACjE,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC;IAExB,uEAAuE;IACvE,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;IAEtB,sFAAsF;IACtF,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;IAE1B,2GAA2G;IAC3G,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC;IAExB,qGAAqG;IACrG,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;IAEtB,mFAAmF;IACnF,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;IAEtB,mCAAmC;IACnC,QAAQ,IAAI,MAAM,CAAC;CACpB;AAED,oBAAY,SAAS,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC"}//# sourceMappingURL=misc.js.map{"version":3,"file":"misc.js","sourceRoot":"","sources":["../src/misc.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Data extracted from an incoming request to a node server\n */\nexport interface ExtractedNodeRequestData {\n  [key: string]: any;\n\n  /** Specific headers from the request */\n  headers?: { [key: string]: string };\n\n  /**  The request's method */\n  method?: string;\n\n  /** The request's URL, including query string */\n  url?: string;\n\n  /** String representing the cookies sent along with the